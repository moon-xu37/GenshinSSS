from copy import deepcopy
from typing import Dict, Callable, List
from utils.dtypes import *
from utils.event import Event
from data.translation import chinese_translation as c_trans


__dmg_keys = ['name', 'index', 'frame', 'cd', 'desc']


def _auto_generate_dmg(proto: Event, info: Dict[str, List[float]], mappings: List[Dict],
                       lv: str,
                       elem_type: ElementType,
                       damage_type: DamageType,
                       time_bias: int = 0,
                       depend: str = 'ATK', snapshot: str = '', view: bool = True) -> List[Event]:
    '''
    arguments are default\n
    mappings keys = `name`, `index`, `frame`, `cd`, `desc`,
    \t(`elem_type`), (`damage_type`), (`depend`), (`snapshot`), (`view`)
    '''
    events: List[Event] = []
    name, family, source = proto.name, proto.family, proto.source
    for map in mappings:
        if name != map['name']:
            continue
        event = Event(type=EventType.DAMAGE,
                      name=name, family=family, source=source, **proto.args)
        if elem := proto.args.get('elem'):
            event.args['elem_type'] = elem
        elif elem := map.get('elem_type'):
            event.args['elem_type'] = elem
        else:
            event.args['elem_type'] = elem_type
        if dmg := map.get('damage_type'):
            event.args['damage_type'] = dmg
        else:
            event.args['damage_type'] = damage_type
        event.mode = proto.mode
        event.time = proto.time + time_bias
        event.lv = proto.lv
        event.scaler = info[lv][map['index']]
        event.depend = map.get('depend') if 'depend' in map \
            else depend
        event.actiontime = proto.actiontime if proto.actiontime \
            else map.get('frame')
        event.cooltime = proto.cooltime if proto.cooltime \
            else map.get('cd')
        event.snapshot = map.get('snapshot') if 'snapshot' in map \
            else snapshot
        flag = map.get('view') if 'view' in map else view
        event.visible = proto.args.get('view', flag)
        event.desc = map['desc']
        events.append(event)
    return events


__heal_keys = ['name', 'index', 'flat_index', 'tar', 'desc']


def _auto_generate_heal(proto: Event, info: Dict[str, List[float]], mappings: List[Dict],
                        lv: str,
                        time_bias: int = 0,
                        depend: str = 'HP', snapshot: str = '') -> List[Event]:
    '''
    arguments are default\n
    mappings keys = `name`, `index`, `flat_index`, `tar`, `desc`, 
    \t(`depend`), (`snapshot`), (`view`)
    '''
    events: List[Event] = []
    name, family, source = proto.name, proto.family, proto.source
    for map in mappings:
        if name != map['name']:
            continue
        event = Event(type=EventType.HEALTH,
                      name=name, family=family, source=source, **proto.args)
        event.time = proto.time + time_bias
        event.lv = proto.lv
        event.scaler = info[lv][map['index']]
        event.args['flat'] = info[lv][map['flat_index']
                                      ] if map['flat_index'] != None else 0
        event.args['tar'] = map['tar']
        event.depend = map.get('depend') if map.get('depend') \
            else depend
        event.snapshot = map.get('snapshot') if map.get('snapshot') \
            else snapshot
        event.desc = map['desc']
        events.append(event)
    return events


__shield_keys = ['name', 'index', 'flat_index', 'frame', 'desc']


def _auto_generate_shield(proto: Event, info: Dict[str, List[float]], mappings: List[Dict],
                          lv: str,
                          time_bias: int = 0,
                          depend: str = 'HP', snapshot: str = '') -> List[Event]:
    '''
    arguments are default\n
    mappings keys = `name`, `index`, `flat_index`, `frame`, `desc`,
    \t(`depend`), (`snapshot`)
    '''
    events: List[Event] = []
    name, family, source = proto.name, proto.family, proto.source
    for map in mappings:
        if name != map['name']:
            continue
        event = Event(type=EventType.SHIELD,
                      name=name, family=family, source=source, **proto.args)
        event.time = proto.time + time_bias
        event.lv = proto.lv
        event.scaler = info[lv][map['index']]
        event.args['flat'] = info[lv][map['flat_index']
                                      ] if map['flat_index'] != None else 0
        event.depend = map.get('depend') if map.get('depend') \
            else depend
        event.actiontime = proto.actiontime if proto.actiontime \
            else map.get('frame')
        event.snapshot = map.get('snapshot') if map.get('snapshot') \
            else snapshot
        event.desc = map['desc']
        events.append(event)
    return events

# ---character---


def Ayaka_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.457253, 0.486846, 0.626218, 0.226464, 0.781817, 0.55126, 20, 0.639324, 1.278377, 1.596762],
            '2': [0.494472, 0.526473, 0.677189, 0.244897, 0.845454, 0.59613, 20, 0.691362, 1.382431, 1.726731],
            '3': [0.53169, 0.5661, 0.72816, 0.26333, 0.90909, 0.641, 20, 0.7434, 1.486485, 1.8567],
            '4': [0.584859, 0.62271, 0.800976, 0.289663, 0.999999, 0.7051, 20, 0.81774, 1.635134, 2.04237],
            '5': [0.622077, 0.662337, 0.851947, 0.308096, 1.063635, 0.74997, 20, 0.869778, 1.739187, 2.172339],
            '6': [0.664613, 0.707625, 0.9102, 0.329163, 1.136363, 0.80125, 20, 0.92925, 1.858106, 2.320875],
            '7': [0.723098, 0.769896, 0.990298, 0.358129, 1.236362, 0.87176, 20, 1.011024, 2.02162, 2.525112],
            '8': [0.781584, 0.832167, 1.070395, 0.387095, 1.336362, 0.94227, 20, 1.092798, 2.185133, 2.729349],
            '9': [0.84007, 0.894438, 1.150493, 0.416061, 1.436362, 1.01278, 20, 1.174572, 2.348646, 2.933586],
            '10': [0.903873, 0.96237, 1.237872, 0.447661, 1.545453, 1.0897, 20, 1.26378, 2.527025, 3.15639],
            '11': [0.967676, 1.030302, 1.325251, 0.479261, 1.654544, 1.16662, 20, 1.352988, 2.705403, 3.379194],
            '12': [1.031479, 1.098234, 1.41263, 0.51086, 1.763635, 1.24354, 20, 1.442196, 2.883781, 3.601998],
            '13': [1.095281, 1.166166, 1.50001, 0.54246, 1.872725, 1.32046, 20, 1.531404, 3.062159, 3.824802],
            '14': [1.159084, 1.234098, 1.587389, 0.574059, 1.981816, 1.39738, 20, 1.620612, 3.240537, 4.047606],
            '15': [1.222887, 1.30203, 1.674768, 0.605659, 2.090907, 1.4743, 20, 1.70982, 3.418915, 4.27041]}
    # 1, 2, 3, 4(3), 5, z(3), sta, p, lp, hp
    lv = str(inter.characters[event.source].attr.normatk_lv)
    keys = __dmg_keys+['damage_type', 'view']
    config = [['A1', 0, 8,      0, '神里绫华:普攻:第1段', DamageType.NORMAL_ATK, True],
              ['A2', 1, 28-8,   0, '神里绫华:普攻:第2段', DamageType.NORMAL_ATK, True],
              ['A3', 2, 56-28,  0, '神里绫华:普攻:第3段', DamageType.NORMAL_ATK, True],
              ['A4', 3, 84-56,  0, '神里绫华:普攻:第4段', DamageType.NORMAL_ATK, True],
              ['A4', 3, 91-56,  0, '神里绫华:普攻:第4段', DamageType.NORMAL_ATK, False],
              ['A4', 3, 98-56,  0, '神里绫华:普攻:第4段', DamageType.NORMAL_ATK, False],
              ['A5', 4, 136-98, 0, '神里绫华:普攻:第5段', DamageType.NORMAL_ATK, True],
              ['Z',  5, 87,     0, '神里绫华:重击',       DamageType.CHARGED_ATK, True],
              ['Z',  5, 87,     0, '神里绫华:重击',       DamageType.CHARGED_ATK, False],
              ['Z',  5, 87,     0, '神里绫华:重击',       DamageType.CHARGED_ATK, False],
              ['P',  7, 30,     0, '神里绫华:下落期间', DamageType.PLUNGING_ATK, False],
              ['LP', 8, 30,     0, '神里绫华:低空下落', DamageType.PLUNGING_ATK, True],
              ['HP', 9, 30,     0, '神里绫华:低空下落', DamageType.PLUNGING_ATK, True]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.PHYSICAL, DamageType.NORMAL_ATK)


def Ayaka_E(event: Event, inter) -> List[Event]:
    info = {'1': [2.392, 10],
            '2': [2.5714, 10],
            '3': [2.7508, 10],
            '4': [2.99, 10],
            '5': [3.1694, 10],
            '6': [3.3488, 10],
            '7': [3.588, 10],
            '8': [3.8272, 10],
            '9': [4.0664, 10],
            '10': [4.3056, 10],
            '11': [4.5448, 10],
            '12': [4.784, 10],
            '13': [5.083, 10],
            '14': [5.382, 10],
            '15': [5.681, 10]}
    # e, cd
    lv = str(inter.characters[event.source].attr.elemskill_lv)
    config = [['E', 0, 56, 10*60, '神里绫华:元素战技']]
    mappings = [dict(zip(__dmg_keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.CRYO, DamageType.ELEM_SKILL)


def Ayaka_Q(event: Event, inter) -> List[Event]:
    info = {'1': [1.123, 1.6845, 5, 20, 80],
            '2': [1.207225, 1.810837, 5, 20, 80],
            '3': [1.29145, 1.937175, 5, 20, 80],
            '4': [1.40375, 2.105625, 5, 20, 80],
            '5': [1.487975, 2.231962, 5, 20, 80],
            '6': [1.5722, 2.3583, 5, 20, 80],
            '7': [1.6845, 2.52675, 5, 20, 80],
            '8': [1.7968, 2.6952, 5, 20, 80],
            '9': [1.9091, 2.86365, 5, 20, 80],
            '10': [2.0214, 3.0321, 5, 20, 80],
            '11': [2.1337, 3.20055, 5, 20, 80],
            '12': [2.246, 3.369, 5, 20, 80],
            '13': [2.386375, 3.579562, 5, 20, 80],
            '14': [2.52675, 3.790125, 5, 20, 80],
            '15': [2.667125, 4.000687, 5, 20, 80]}
    # q, q1, dur, cd, energy
    lv = str(inter.characters[event.source].attr.elemburst_lv)
    cx2 = event.args.get('cx', False)
    keys = __dmg_keys+['snapshot', 'view']
    config = [['Q',   0, 95, 20*60, '神里绫华:元素爆发:切割伤害', 'Ayaka->Q', False],
              ['Q1',  1, 0,  20*60, '神里绫华:元素爆发:绽放伤害', 'Ayaka->Q', False]]
    mappings = [dict(zip(keys, c)) for c in config]
    info2 = {str(i): [info[str(i)][0]*0.2, info[str(i)][0]*0.2]
             for i in range(1, 16)}
    keys2 = __dmg_keys+['snapshot', 'view']
    config2 = [['Q',   0, 95, 20*60, '神里绫华:元素爆发:切割伤害二命', 'Ayaka->Q', False],
               ['Q1',  1, 0,  20*60, '神里绫华:元素爆发:绽放伤害二命', 'Ayaka->Q', False]]
    mappings2 = [dict(zip(keys2, c)) for c in config2]
    if not event.args.get('seq', False):
        if not cx2:
            return _auto_generate_dmg(event, info, mappings, lv,
                                      ElementType.CRYO, DamageType.ELEM_BURST)
        else:
            return _auto_generate_dmg(event, info2, mappings2, lv,
                                      ElementType.CRYO, DamageType.ELEM_BURST)
    else:
        events = []
        proto = deepcopy(event)
        proto.name = 'Q'
        for i in range(19):
            if i == 0:
                proto.args['view'] = True
            t = i*16
            if not cx2:
                events.extend(_auto_generate_dmg(proto, info, mappings, lv,
                                                 ElementType.CRYO, DamageType.ELEM_BURST, time_bias=t))
            else:
                events.extend(_auto_generate_dmg(proto, info2, mappings2, lv,
                                                 ElementType.CRYO, DamageType.ELEM_BURST, time_bias=t))
            if i == 0:
                proto.args.pop('view')
        proto.name = 'Q1'
        if not cx2:
            events.extend(_auto_generate_dmg(proto, info, mappings, lv,
                                             ElementType.CRYO, DamageType.ELEM_BURST, time_bias=18*16+10))
        else:
            events.extend(_auto_generate_dmg(proto, info2, mappings2, lv,
                                             ElementType.CRYO, DamageType.ELEM_BURST, time_bias=18*16+10))
        return events


def Jean_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.48332, 0.4558, 0.60286, 0.65876, 0.79206, 1.62024, 20, 0.639324, 1.278377, 1.596762],
            '2': [0.52266, 0.4929, 0.65193, 0.71238, 0.85653, 1.75212, 20, 0.691362, 1.382431, 1.726731],
            '3': [0.562, 0.53, 0.701, 0.766, 0.921, 1.884, 20, 0.7434, 1.486485, 1.8567],
            '4': [0.6182, 0.583, 0.7711, 0.8426, 1.0131, 2.0724, 20, 0.81774, 1.635134, 2.04237],
            '5': [0.65754, 0.6201, 0.82017, 0.89622, 1.07757, 2.20428, 20, 0.869778, 1.739187, 2.172339],
            '6': [0.7025, 0.6625, 0.87625, 0.9575, 1.15125, 2.355, 20, 0.92925, 1.858106, 2.320875],
            '7': [0.76432, 0.7208, 0.95336, 1.04176, 1.25256, 2.56224, 20, 1.011024, 2.02162, 2.525112],
            '8': [0.82614, 0.7791, 1.03047, 1.12602, 1.35387, 2.76948, 20, 1.092798, 2.185133, 2.729349],
            '9': [0.88796, 0.8374, 1.10758, 1.21028, 1.45518, 2.97672, 20, 1.174572, 2.348646, 2.933586],
            '10': [0.9554, 0.901, 1.1917, 1.3022, 1.5657, 3.2028, 20, 1.26378, 2.527025, 3.15639],
            '11': [1.032675, 0.973875, 1.288088, 1.407525, 1.692338, 3.46185, 20, 1.352988, 2.705403, 3.379194],
            '12': [1.12355, 1.059576, 1.401439, 1.531387, 1.841263, 3.766493, 20, 1.442196, 2.883781, 3.601998],
            '13': [1.214426, 1.145277, 1.514791, 1.655249, 1.990189, 4.071136, 20, 1.531404, 3.062159, 3.824802],
            '14': [1.305301, 1.230978, 1.628143, 1.779112, 2.139115, 4.375778, 20, 1.620612, 3.240537, 4.047606],
            '15': [1.404438, 1.32447, 1.751799, 1.914234, 2.301579, 4.708116, 20, 1.70982, 3.418915, 4.27041]}
    # 1, 2, 3, 4, 5, z, sta, p, lp, hp
    lv = str(inter.characters[event.source].attr.normatk_lv)
    keys = __dmg_keys+['damage_type', 'view']
    config = [['A1', 0, 14,      0, '琴:普攻:第1段', DamageType.NORMAL_ATK, True],
              ['A2', 1, 37-14,   0, '琴:普攻:第2段', DamageType.NORMAL_ATK, True],
              ['A3', 2, 66-37,   0, '琴:普攻:第3段', DamageType.NORMAL_ATK, True],
              ['A4', 3, 124-66,  0, '琴:普攻:第4段', DamageType.NORMAL_ATK, True],
              ['A5', 4, 159-124, 0, '琴:普攻:第5段', DamageType.NORMAL_ATK, True],
              ['Z',  5, 73,      0, '琴:重击',       DamageType.CHARGED_ATK, True],
              ['P',  7, 30,      0, '琴:下落期间', DamageType.PLUNGING_ATK, False],
              ['LP', 8, 30,      0, '琴:低空下落', DamageType.PLUNGING_ATK, True],
              ['HP', 9, 30,      0, '琴:低空下落', DamageType.PLUNGING_ATK, True]]
    mappings = [dict(zip(keys, c)) for c in config]
    info2 = {str(i): [0.15, 0] for i in range(1, 16)}
    config2 = [['A', 0, 1, 'all', '琴:天赋一:顺风而行']]
    mappings2 = [dict(zip(__heal_keys, c)) for c in config2]
    if event.type == EventType.DAMAGE:
        return _auto_generate_dmg(event, info, mappings, lv,
                                  ElementType.PHYSICAL, DamageType.NORMAL_ATK)
    elif event.type == EventType.HEALTH:
        return _auto_generate_heal(event, info2, mappings2, lv,
                                   depend='ATK')


def Jean_E(event: Event, inter) -> List[Event]:
    info = {'1': [2.92, 20, 5, 6],
            '2': [3.139, 20, 5, 6],
            '3': [3.358, 20, 5, 6],
            '4': [3.65, 20, 5, 6],
            '5': [3.869, 20, 5, 6],
            '6': [4.088, 20, 5, 6],
            '7': [4.38, 20, 5, 6],
            '8': [4.672, 20, 5, 6],
            '9': [4.964, 20, 5, 6],
            '10': [5.256, 20, 5, 6],
            '11': [5.548, 20, 5, 6],
            '12': [5.84, 20, 5, 6],
            '13': [6.205, 20, 5, 6],
            '14': [6.57, 20, 5, 6],
            '15': [6.935, 20, 5, 6]}
    # e, sta, dur, cd
    lv = str(inter.characters[event.source].attr.elemskill_lv)
    config = [['E', 0, 46, 6*60, '琴:元素战技']]
    mappings = [dict(zip(__dmg_keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.ANEMO, DamageType.ELEM_SKILL)


def Jean_Q(event: Event, inter) -> List[Event]:
    info = {'1': [4.248, 0.784, 2.512, 1540.3248, 0.2512, 154.03249, 20, 80],
            '2': [4.5666, 0.8428, 2.7004, 1694.3788, 0.27004, 169.43788, 20, 80],
            '3': [4.8852, 0.9016, 2.8888, 1861.2705, 0.28888, 186.12704, 20, 80],
            '4': [5.31, 0.98, 3.14, 2041, 0.314, 204.1, 20, 80],
            '5': [5.6286, 1.0388, 3.3284, 2233.5674, 0.33284, 223.35674, 20, 80],
            '6': [5.9472, 1.0976, 3.5168, 2438.9727, 0.35168, 243.89726, 20, 80],
            '7': [6.372, 1.176, 3.768, 2657.2156, 0.3768, 265.72156, 20, 80],
            '8': [6.7968, 1.2544, 4.0192, 2888.2964, 0.40192, 288.82965, 20, 80],
            '9': [7.2216, 1.3328, 4.2704, 3132.215, 0.42704, 313.2215, 20, 80],
            '10': [7.6464, 1.4112, 4.5216, 3388.9717, 0.45216, 338.89716, 20, 80],
            '11': [8.0712, 1.4896, 4.7728, 3658.566, 0.47728, 365.8566, 20, 80],
            '12': [8.496, 1.568, 5.024, 3940.998, 0.5024, 394.0998, 20, 80],
            '13': [9.027, 1.666, 5.338, 4236.268, 0.5338, 423.6268, 20, 80],
            '14': [9.558, 1.764, 5.652, 4544.376, 0.5652, 454.4376, 20, 80],
            '15': [10.089, 1.862, 5.966, 4865.3213, 0.5966, 486.53214, 20, 80]}
    # q, q1, h, hf, h1, h1f
    lv = str(inter.characters[event.source].attr.elemburst_lv)
    keys = __dmg_keys+['snapshot', 'view']
    config = [['Q',   0, 88, 20*60, '琴:元素爆发:爆发伤害',     'Jean->Q', True],
              ['Q1',  1, 0,  20*60, '琴:元素爆发:出入领域伤害', 'Jean->Q', False]]
    mappings = [dict(zip(keys, c)) for c in config]
    config2 = [['Q',   2, 3, 'all',   '琴:元素爆发:领域发动治疗'],
               ['Q1',  4, 5, 'stage', '琴:元素爆发:持续治疗']]
    mappings2 = [dict(zip(__heal_keys, c)) for c in config2]
    if event.type == EventType.DAMAGE:
        return _auto_generate_dmg(event, info, mappings, lv,
                                  ElementType.ANEMO, DamageType.ELEM_BURST)
    elif event.type == EventType.HEALTH:
        if not event.args.get('seq', False):
            return _auto_generate_heal(event, info, mappings2, lv,
                                       depend='ATK', snapshot='Jean->Q')
        else:
            events = []
            proto = deepcopy(event)
            proto.name = 'Q'
            events.extend(_auto_generate_heal(proto, info, mappings2, lv,
                                              depend='ATK', snapshot='Jean->Q'))
            proto.name = 'Q1'
            for i in range(1, 11):
                t = i*60-1
                events.extend(_auto_generate_heal(proto, info, mappings2, lv,
                                                  depend='ATK', snapshot='Jean->Q', time_bias=t))
            return events


def Lisa_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.396, 0.3592, 0.428, 0.5496, 1.7712, 50, 0.568288, 1.136335, 1.419344],
            '2': [0.4257, 0.38614, 0.4601, 0.59082, 1.90404, 50, 0.614544, 1.228828, 1.534872],
            '3': [0.4554, 0.41308, 0.4922, 0.63204, 2.03688, 50, 0.6608, 1.32132, 1.6504],
            '4': [0.495, 0.449, 0.535, 0.687, 2.214, 50, 0.72688, 1.453452, 1.81544],
            '5': [0.5247, 0.47594, 0.5671, 0.72822, 2.34684, 50, 0.773136, 1.545944, 1.930968],
            '6': [0.5544, 0.50288, 0.5992, 0.76944, 2.47968, 50, 0.826, 1.65165, 2.063],
            '7': [0.594, 0.5388, 0.642, 0.8244, 2.6568, 50, 0.898688, 1.796995, 2.244544],
            '8': [0.6336, 0.57472, 0.6848, 0.87936, 2.83392, 50, 0.971376, 1.94234, 2.426088],
            '9': [0.6732, 0.61064, 0.7276, 0.93432, 3.01104, 50, 1.044064, 2.087686, 2.607632],
            '10': [0.7128, 0.64656, 0.7704, 0.98928, 3.18816, 50, 1.12336, 2.246244, 2.80568],
            '11': [0.753984, 0.683917, 0.814912, 1.046438, 3.372365, 50, 1.202656, 2.404802, 3.003728],
            '12': [0.80784, 0.732768, 0.87312, 1.121184, 3.613248, 50, 1.281952, 2.563361, 3.201776],
            '13': [0.861696, 0.781619, 0.931328, 1.19593, 3.854131, 50, 1.361248, 2.721919, 3.399824],
            '14': [0.915552, 0.83047, 0.989536, 1.270675, 4.095014, 50, 1.440544, 2.880478, 3.597872],
            '15': [0.969408, 0.879322, 1.047744, 1.345421, 4.335898, 50, 1.51984, 3.039036, 3.79592]}


def Lisa_E(event: Event, inter) -> List[Event]:
    info = {'1': [3.2, 3.68, 4.24, 4.872, 16, 0.8, 1],
            '2': [3.44, 3.956, 4.558, 5.2374, 16, 0.86, 1],
            '3': [3.68, 4.232, 4.876, 5.6028, 16, 0.92, 1],
            '4': [4, 4.6, 5.3, 6.09, 16, 1, 1],
            '5': [4.24, 4.876, 5.618, 6.4554, 16, 1.06, 1],
            '6': [4.48, 5.152, 5.936, 6.8208, 16, 1.12, 1],
            '7': [4.8, 5.52, 6.36, 7.308, 16, 1.2, 1],
            '8': [5.12, 5.888, 6.784, 7.7952, 16, 1.28, 1],
            '9': [5.44, 6.256, 7.208, 8.2824, 16, 1.36, 1],
            '10': [5.76, 6.624, 7.632, 8.7696, 16, 1.44, 1],
            '11': [6.08, 6.992, 8.056, 9.2568, 16, 1.52, 1],
            '12': [6.4, 7.36, 8.48, 9.744, 16, 1.6, 1],
            '13': [6.8, 7.82, 9.01, 10.353, 16, 1.7, 1],
            '14': [7.2, 8.28, 9.54, 10.962, 16, 1.8, 1],
            '15': [7.6, 8.74, 10.07, 11.571, 16, 1.9, 1]}


def Lisa_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.3656, 15, 20, 80],
            '2': [0.39302, 15, 20, 80],
            '3': [0.42044, 15, 20, 80],
            '4': [0.457, 15, 20, 80],
            '5': [0.48442, 15, 20, 80],
            '6': [0.51184, 15, 20, 80],
            '7': [0.5484, 15, 20, 80],
            '8': [0.58496, 15, 20, 80],
            '9': [0.62152, 15, 20, 80],
            '10': [0.65808, 15, 20, 80],
            '11': [0.69464, 15, 20, 80],
            '12': [0.7312, 15, 20, 80],
            '13': [0.7769, 15, 20, 80],
            '14': [0.8226, 15, 20, 80],
            '15': [0.8683, 15, 20, 80]}


def Barbara_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.3784, 0.3552, 0.4104, 0.552, 1.6624, 50, 0.568288, 1.136335, 1.419344],
            '2': [0.40678, 0.38184, 0.44118, 0.5934, 1.78708, 50, 0.614544, 1.228828, 1.534872],
            '3': [0.43516, 0.40848, 0.47196, 0.6348, 1.91176, 50, 0.6608, 1.32132, 1.6504],
            '4': [0.473, 0.444, 0.513, 0.69, 2.078, 50, 0.72688, 1.453452, 1.81544],
            '5': [0.50138, 0.47064, 0.54378, 0.7314, 2.20268, 50, 0.773136, 1.545944, 1.930968],
            '6': [0.52976, 0.49728, 0.57456, 0.7728, 2.32736, 50, 0.826, 1.65165, 2.063],
            '7': [0.5676, 0.5328, 0.6156, 0.828, 2.4936, 50, 0.898688, 1.796995, 2.244544],
            '8': [0.60544, 0.56832, 0.65664, 0.8832, 2.65984, 50, 0.971376, 1.94234, 2.426088],
            '9': [0.64328, 0.60384, 0.69768, 0.9384, 2.82608, 50, 1.044064, 2.087686, 2.607632],
            '10': [0.68112, 0.63936, 0.73872, 0.9936, 2.99232, 50, 1.12336, 2.246244, 2.80568],
            '11': [0.720474, 0.676301, 0.781402, 1.051008, 3.16521, 50, 1.202656, 2.404802, 3.003728],
            '12': [0.771936, 0.724608, 0.837216, 1.12608, 3.391296, 50, 1.281952, 2.563361, 3.201776],
            '13': [0.823398, 0.772915, 0.89303, 1.201152, 3.617382, 50, 1.361248, 2.721919, 3.399824],
            '14': [0.874861, 0.821222, 0.948845, 1.276224, 3.843469, 50, 1.440544, 2.880478, 3.597872],
            '15': [0.926323, 0.86953, 1.004659, 1.351296, 4.069555, 50, 1.51984, 3.039036, 3.79592]}


def Barbara_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.04, 385.18774, 0.0075, 72.2227, 0.584, 15, 32],
            '2': [0.043, 423.71188, 0.008063, 79.44598, 0.6278, 15, 32],
            '3': [0.046, 465.44635, 0.008625, 87.271194, 0.6716, 15, 32],
            '4': [0.05, 510.39117, 0.009375, 95.69834, 0.73, 15, 32],
            '5': [0.053, 558.5463, 0.009938, 104.72743, 0.7738, 15, 32],
            '6': [0.056, 609.9118, 0.0105, 114.35847, 0.8176, 15, 32],
            '7': [0.06, 664.4877, 0.01125, 124.59144, 0.876, 15, 32],
            '8': [0.064, 722.27386, 0.012, 135.42635, 0.9344, 15, 32],
            '9': [0.068, 783.2704, 0.01275, 146.8632, 0.9928, 15, 32],
            '10': [0.072, 847.4773, 0.0135, 158.902, 1.0512, 15, 32],
            '11': [0.076, 914.89453, 0.01425, 171.54272, 1.1096, 15, 32],
            '12': [0.08, 985.5221, 0.015, 184.78539, 1.168, 15, 32],
            '13': [0.085, 1059.36, 0.015938, 198.63, 1.241, 15, 32],
            '14': [0.09, 1136.4082, 0.016875, 213.07655, 1.314, 15, 32],
            '15': [0.095, 1216.6669, 0.017812, 228.12503, 1.387, 15, 32]}


def Barbara_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.176, 1694.2819, 20, 80],
            '2': [0.1892, 1863.7336, 20, 80],
            '3': [0.2024, 2047.3063, 20, 80],
            '4': [0.22, 2245, 20, 80],
            '5': [0.2332, 2456.8147, 20, 80],
            '6': [0.2464, 2682.7502, 20, 80],
            '7': [0.264, 2922.807, 20, 80],
            '8': [0.2816, 3176.9846, 20, 80],
            '9': [0.2992, 3445.2832, 20, 80],
            '10': [0.3168, 3727.7026, 20, 80],
            '11': [0.3344, 4024.2432, 20, 80],
            '12': [0.352, 4334.905, 20, 80],
            '13': [0.374, 4659.687, 20, 80],
            '14': [0.396, 4998.591, 20, 80],
            '15': [0.418, 5351.615, 20, 80]}


def Kaeya_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.5375, 0.51686, 0.65274, 0.70864, 0.88236, 0.5504, 0.731, 20, 0.639324, 1.278377, 1.596762],
            '2': [0.58125, 0.55893, 0.70587, 0.76632, 0.95418, 0.5952, 0.7905, 20, 0.691362, 1.382431, 1.726731],
            '3': [0.625, 0.601, 0.759, 0.824, 1.026, 0.64, 0.85, 20, 0.7434, 1.486485, 1.8567],
            '4': [0.6875, 0.6611, 0.8349, 0.9064, 1.1286, 0.704, 0.935, 20, 0.81774, 1.635134, 2.04237],
            '5': [0.73125, 0.70317, 0.88803, 0.96408, 1.20042, 0.7488, 0.9945, 20, 0.869778, 1.739187, 2.172339],
            '6': [0.78125, 0.75125, 0.94875, 1.03, 1.2825, 0.8, 1.0625, 20, 0.92925, 1.858106, 2.320875],
            '7': [0.85, 0.81736, 1.03224, 1.12064, 1.39536, 0.8704, 1.156, 20, 1.011024, 2.02162, 2.525112],
            '8': [0.91875, 0.88347, 1.11573, 1.21128, 1.50822, 0.9408, 1.2495, 20, 1.092798, 2.185133, 2.729349],
            '9': [0.9875, 0.94958, 1.19922, 1.30192, 1.62108, 1.0112, 1.343, 20, 1.174572, 2.348646, 2.933586],
            '10': [1.0625, 1.0217, 1.2903, 1.4008, 1.7442, 1.088, 1.445, 20, 1.26378, 2.527025, 3.15639],
            '11': [1.148438, 1.104337, 1.394662, 1.5141, 1.885275, 1.176, 1.561875, 20, 1.352988, 2.705403, 3.379194],
            '12': [1.2495, 1.201519, 1.517393, 1.647341, 2.051179, 1.279488, 1.69932, 20, 1.442196, 2.883781, 3.601998],
            '13': [1.350562, 1.298701, 1.640123, 1.780582, 2.217083, 1.382976, 1.836765, 20, 1.531404, 3.062159, 3.824802],
            '14': [1.451625, 1.395883, 1.762853, 1.913822, 2.382988, 1.486464, 1.97421, 20, 1.620612, 3.240537, 4.047606],
            '15': [1.561875, 1.501899, 1.896741, 2.059176, 2.563974, 1.59936, 2.12415, 20, 1.70982, 3.418915, 4.27041]}


def Kaeya_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.912, 6],
            '2': [2.0554, 6],
            '3': [2.1988, 6],
            '4': [2.39, 6],
            '5': [2.5334, 6],
            '6': [2.6768, 6],
            '7': [2.868, 6],
            '8': [3.0592, 6],
            '9': [3.2504, 6],
            '10': [3.4416, 6],
            '11': [3.6328, 6],
            '12': [3.824, 6],
            '13': [4.063, 6],
            '14': [4.302, 6],
            '15': [4.541, 6]}


def Kaeya_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.776, 15, 8, 60],
            '2': [0.8342, 15, 8, 60],
            '3': [0.8924, 15, 8, 60],
            '4': [0.97, 15, 8, 60],
            '5': [1.0282, 15, 8, 60],
            '6': [1.0864, 15, 8, 60],
            '7': [1.164, 15, 8, 60],
            '8': [1.2416, 15, 8, 60],
            '9': [1.3192, 15, 8, 60],
            '10': [1.3968, 15, 8, 60],
            '11': [1.4744, 15, 8, 60],
            '12': [1.552, 15, 8, 60],
            '13': [1.649, 15, 8, 60],
            '14': [1.746, 15, 8, 60],
            '15': [1.843, 15, 8, 60]}


def Diluc_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.89698, 0.87634, 0.98814, 1.33988, 0.688, 1.247, 40, 5, 0.895054, 1.789728, 2.235467],
            '2': [0.96999, 0.94767, 1.06857, 1.44894, 0.744, 1.3485, 40, 5, 0.967907, 1.935403, 2.417423],
            '3': [1.043, 1.019, 1.149, 1.558, 0.8, 1.45, 40, 5, 1.04076, 2.081079, 2.59938],
            '4': [1.1473, 1.1209, 1.2639, 1.7138, 0.88, 1.595, 40, 5, 1.144836, 2.289187, 2.859318],
            '5': [1.22031, 1.19223, 1.34433, 1.82286, 0.936, 1.6965, 40, 5, 1.217689, 2.434862, 3.041275],
            '6': [1.30375, 1.27375, 1.43625, 1.9475, 1, 1.8125, 40, 5, 1.30095, 2.601349, 3.249225],
            '7': [1.41848, 1.38584, 1.56264, 2.11888, 1.088, 1.972, 40, 5, 1.415434, 2.830267, 3.535157],
            '8': [1.53321, 1.49793, 1.68903, 2.29026, 1.176, 2.1315, 40, 5, 1.529917, 3.059186, 3.821089],
            '9': [1.64794, 1.61002, 1.81542, 2.46164, 1.264, 2.291, 40, 5, 1.644401, 3.288105, 4.10702],
            '10': [1.7731, 1.7323, 1.9533, 2.6486, 1.36, 2.465, 40, 5, 1.769292, 3.537834, 4.418946],
            '11': [1.916513, 1.872412, 2.111287, 2.862825, 1.47, 2.664375, 40, 5, 1.894183, 3.787564, 4.730872],
            '12': [2.085166, 2.037185, 2.297081, 3.114754, 1.59936, 2.89884, 40, 5, 2.019074, 4.037293, 5.042797],
            '13': [2.253819, 2.201957, 2.482874, 3.366682, 1.72872, 3.133305, 40, 5, 2.143966, 4.287023, 5.354723],
            '14': [2.422472, 2.366729, 2.668667, 3.618611, 1.85808, 3.36777, 40, 5, 2.268857, 4.536752, 5.666648],
            '15': [2.606457, 2.546481, 2.871351, 3.893442, 1.9992, 3.62355, 40, 5, 2.393748, 4.786482, 5.978574]}
    # 1, 2, 3, 4, z0, z1, sta, ztime, p, lp, hp
    lv = str(inter.characters[event.source].attr.normatk_lv)
    keys = __dmg_keys+['damage_type', 'view']
    config = [['A1', 0,  24,      0, '迪卢克:普攻:第1段', DamageType.NORMAL_ATK, True],
              ['A2', 1,  77-24,   0, '迪卢克:普攻:第2段', DamageType.NORMAL_ATK, True],
              ['A3', 2,  115-77,  0, '迪卢克:普攻:第3段', DamageType.NORMAL_ATK, True],
              ['A4', 3,  181-115, 0, '迪卢克:普攻:第4段', DamageType.NORMAL_ATK, True],
              ['Z0', 4,  30,      0, '迪卢克:重击持续',   DamageType.CHARGED_ATK, True],
              ['Z1', 5,  29,      0, '迪卢克:重击结束',   DamageType.CHARGED_ATK, True],
              ['P',  8,  30,      0, '迪卢克:下落期间', DamageType.PLUNGING_ATK, False],
              ['LP', 9,  30,      0, '迪卢克:低空下落', DamageType.PLUNGING_ATK, True],
              ['HP', 10, 30,      0, '迪卢克:低空下落', DamageType.PLUNGING_ATK, True]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.PHYSICAL, DamageType.NORMAL_ATK)


def Diluc_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.944, 0.976, 1.288, 10],
            '2': [1.0148, 1.0492, 1.3846, 10],
            '3': [1.0856, 1.1224, 1.4812, 10],
            '4': [1.18, 1.22, 1.61, 10],
            '5': [1.2508, 1.2932, 1.7066, 10],
            '6': [1.3216, 1.3664, 1.8032, 10],
            '7': [1.416, 1.464, 1.932, 10],
            '8': [1.5104, 1.5616, 2.0608, 10],
            '9': [1.6048, 1.6592, 2.1896, 10],
            '10': [1.6992, 1.7568, 2.3184, 10],
            '11': [1.7936, 1.8544, 2.4472, 10],
            '12': [1.888, 1.952, 2.576, 10],
            '13': [2.006, 2.074, 2.737, 10],
            '14': [2.124, 2.196, 2.898, 10],
            '15': [2.242, 2.318, 3.059, 10]}
    # e1, e2, e3, cd
    lv = str(inter.characters[event.source].attr.elemskill_lv)
    config = [['E1',  0, 45, 10*60, '迪卢克:元素战技:第1段'],
              ['E2',  1, 52, 10*60, '迪卢克:元素战技:第2段'],
              ['E3',  2, 81, 10*60, '迪卢克:元素战技:第3段']]
    mappings = [dict(zip(__dmg_keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.PYRO, DamageType.ELEM_SKILL)


def Diluc_Q(event: Event, inter) -> List[Event]:
    info = {'1': [2.04, 0.6, 2.04, 12, 8, 40],
            '2': [2.193, 0.645, 2.193, 12, 8, 40],
            '3': [2.346, 0.69, 2.346, 12, 8, 40],
            '4': [2.55, 0.75, 2.55, 12, 8, 40],
            '5': [2.703, 0.795, 2.703, 12, 8, 40],
            '6': [2.856, 0.84, 2.856, 12, 8, 40],
            '7': [3.06, 0.9, 3.06, 12, 8, 40],
            '8': [3.264, 0.96, 3.264, 12, 8, 40],
            '9': [3.468, 1.02, 3.468, 12, 8, 40],
            '10': [3.672, 1.08, 3.672, 12, 8, 40],
            '11': [3.876, 1.14, 3.876, 12, 8, 40],
            '12': [4.08, 1.2, 4.08, 12, 8, 40],
            '13': [4.335, 1.275, 4.335, 12, 8, 40],
            '14': [4.59, 1.35, 4.59, 12, 8, 40],
            '15': [4.845, 1.425, 4.845, 12, 8, 40]}
    # q, q1, q2, cd, fuse, energy
    lv = str(inter.characters[event.source].attr.elemburst_lv)
    keys = __dmg_keys+['view']
    config = [['Q',   0, 145, 12*60, '迪卢克:元素爆发:斩击伤害', True],
              ['Q1',  1, 0,   12*60, '迪卢克:元素爆发:持续伤害', False],
              ['Q2',  2, 0,   12*60, '迪卢克:元素爆发:爆裂伤害', False]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.PYRO, DamageType.ELEM_BURST)


def Razor_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.9592, 0.82632, 1.03312, 1.36048, 0.625392, 1.1309, 40, 5, 0.820466, 1.640584, 2.049178],
            '2': [1.0246, 0.88266, 1.10356, 1.45324, 0.676296, 1.22295, 40, 5, 0.887248, 1.77412, 2.215971],
            '3': [1.09, 0.939, 1.174, 1.546, 0.7272, 1.315, 40, 5, 0.95403, 1.907656, 2.382765],
            '4': [1.1772, 1.01412, 1.26792, 1.66968, 0.79992, 1.4465, 40, 5, 1.049433, 2.098421, 2.621042],
            '5': [1.2426, 1.07046, 1.33836, 1.76244, 0.850824, 1.53855, 40, 5, 1.116215, 2.231957, 2.787835],
            '6': [1.3189, 1.13619, 1.42054, 1.87066, 0.909, 1.64375, 40, 5, 1.192538, 2.38457, 2.978456],
            '7': [1.417, 1.2207, 1.5262, 2.0098, 0.988992, 1.7884, 40, 5, 1.297481, 2.594412, 3.24056],
            '8': [1.5151, 1.30521, 1.63186, 2.14894, 1.068984, 1.93305, 40, 5, 1.402424, 2.804254, 3.502665],
            '9': [1.6132, 1.38972, 1.73752, 2.28808, 1.148976, 2.0777, 40, 5, 1.507367, 3.014096, 3.764769],
            '10': [1.7113, 1.47423, 1.84318, 2.42722, 1.23624, 2.2355, 40, 5, 1.621851, 3.243015, 4.050701],
            '11': [1.8094, 1.55874, 1.94884, 2.56636, 1.323504, 2.3933, 40, 5, 1.736335, 3.471933, 4.336632],
            '12': [1.9075, 1.64325, 2.0545, 2.7055, 1.410768, 2.5511, 40, 5, 1.850818, 3.700852, 4.622564],
            '13': [2.0056, 1.72776, 2.16016, 2.84464, 1.498032, 2.7089, 40, 5, 1.965302, 3.929771, 4.908496],
            '14': [2.1037, 1.81227, 2.26582, 2.98378, 1.585296, 2.8667, 40, 5, 2.079785, 4.15869, 5.194428],
            '15': [2.2018, 1.89678, 2.37148, 3.12292, 1.67256, 3.0245, 40, 5, 2.194269, 4.387608, 5.48036]}


def Razor_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.992, 2.952, 0.2, 5, 18, 6, 10],
            '2': [2.1414, 3.1734, 0.2, 5, 18, 6, 10],
            '3': [2.2908, 3.3948, 0.2, 5, 18, 6, 10],
            '4': [2.49, 3.69, 0.2, 5, 18, 6, 10],
            '5': [2.6394, 3.9114, 0.2, 5, 18, 6, 10],
            '6': [2.7888, 4.1328, 0.2, 5, 18, 6, 10],
            '7': [2.988, 4.428, 0.2, 5, 18, 6, 10],
            '8': [3.1872, 4.7232, 0.2, 5, 18, 6, 10],
            '9': [3.3864, 5.0184, 0.2, 5, 18, 6, 10],
            '10': [3.5856, 5.3136, 0.2, 5, 18, 6, 10],
            '11': [3.7848, 5.6088, 0.2, 5, 18, 6, 10],
            '12': [3.984, 5.904, 0.2, 5, 18, 6, 10],
            '13': [4.233, 6.273, 0.2, 5, 18, 6, 10],
            '14': [4.482, 6.642, 0.2, 5, 18, 6, 10],
            '15': [4.731, 7.011, 0.2, 5, 18, 6, 10]}


def Razor_Q(event: Event, inter) -> List[Event]:
    info = {'1': [1.6, 0.24, 0.26, 0.8, 15, 20, 80],
            '2': [1.72, 0.258, 0.28, 0.8, 15, 20, 80],
            '3': [1.84, 0.276, 0.3, 0.8, 15, 20, 80],
            '4': [2, 0.3, 0.32, 0.8, 15, 20, 80],
            '5': [2.12, 0.318, 0.34, 0.8, 15, 20, 80],
            '6': [2.24, 0.336, 0.36, 0.8, 15, 20, 80],
            '7': [2.4, 0.36, 0.37, 0.8, 15, 20, 80],
            '8': [2.56, 0.384, 0.38, 0.8, 15, 20, 80],
            '9': [2.72, 0.408, 0.39, 0.8, 15, 20, 80],
            '10': [2.88, 0.432, 0.4, 0.8, 15, 20, 80],
            '11': [3.04, 0.456, 0.4, 0.8, 15, 20, 80],
            '12': [3.2, 0.48, 0.4, 0.8, 15, 20, 80],
            '13': [3.4, 0.51, 0.4, 0.8, 15, 20, 80],
            '14': [3.6, 0.54, 0.4, 0.8, 15, 20, 80],
            '15': [3.8, 0.57, 0.4, 0.8, 15, 20, 80]}


def Amber_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.3612, 0.3612, 0.4644, 0.473, 0.5934, 0.4386, 1.24, 0.568288, 1.136335, 1.419344],
            '2': [0.3906, 0.3906, 0.5022, 0.5115, 0.6417, 0.4743, 1.333, 0.614544, 1.228828, 1.534872],
            '3': [0.42, 0.42, 0.54, 0.55, 0.69, 0.51, 1.426, 0.6608, 1.32132, 1.6504],
            '4': [0.462, 0.462, 0.594, 0.605, 0.759, 0.561, 1.55, 0.72688, 1.453452, 1.81544],
            '5': [0.4914, 0.4914, 0.6318, 0.6435, 0.8073, 0.5967, 1.643, 0.773136, 1.545944, 1.930968],
            '6': [0.525, 0.525, 0.675, 0.6875, 0.8625, 0.6375, 1.736, 0.826, 1.65165, 2.063],
            '7': [0.5712, 0.5712, 0.7344, 0.748, 0.9384, 0.6936, 1.86, 0.898688, 1.796995, 2.244544],
            '8': [0.6174, 0.6174, 0.7938, 0.8085, 1.0143, 0.7497, 1.984, 0.971376, 1.94234, 2.426088],
            '9': [0.6636, 0.6636, 0.8532, 0.869, 1.0902, 0.8058, 2.108, 1.044064, 2.087686, 2.607632],
            '10': [0.714, 0.714, 0.918, 0.935, 1.173, 0.867, 2.232, 1.12336, 2.246244, 2.80568],
            '11': [0.7644, 0.7644, 0.9828, 1.001, 1.2558, 0.9282, 2.356, 1.202656, 2.404802, 3.003728],
            '12': [0.8148, 0.8148, 1.0476, 1.067, 1.3386, 0.9894, 2.48, 1.281952, 2.563361, 3.201776],
            '13': [0.8652, 0.8652, 1.1124, 1.133, 1.4214, 1.0506, 2.635, 1.361248, 2.721919, 3.399824],
            '14': [0.9156, 0.9156, 1.1772, 1.199, 1.5042, 1.1118, 2.79, 1.440544, 2.880478, 3.597872],
            '15': [0.966, 0.966, 1.242, 1.265, 1.587, 1.173, 2.945, 1.51984, 3.039036, 3.79592]}


def Amber_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.4136, 1.232, -0.5864, 15],
            '2': [0.44462, 1.3244, -0.55538, 15],
            '3': [0.47564, 1.4168, -0.52436, 15],
            '4': [0.517, 1.54, -0.483, 15],
            '5': [0.54802, 1.6324, -0.45198, 15],
            '6': [0.57904, 1.7248, -0.42096, 15],
            '7': [0.6204, 1.848, -0.3796, 15],
            '8': [0.66176, 1.9712, -0.33824, 15],
            '9': [0.70312, 2.0944, -0.29688, 15],
            '10': [0.74448, 2.2176, -0.25552, 15],
            '11': [0.78584, 2.3408, -0.21416, 15],
            '12': [0.8272, 2.464, -0.1728, 15],
            '13': [0.8789, 2.618, -0.1211, 15],
            '14': [0.9306, 2.772, -0.0694, 15],
            '15': [0.9823, 2.926, -0.0177, 15]}


def Amber_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.2808, 12, 40, 5.0544, 2],
            '2': [0.30186, 12, 40, 5.43348, 2],
            '3': [0.32292, 12, 40, 5.81256, 2],
            '4': [0.351, 12, 40, 6.318, 2],
            '5': [0.37206, 12, 40, 6.69708, 2],
            '6': [0.39312, 12, 40, 7.07616, 2],
            '7': [0.4212, 12, 40, 7.5816, 2],
            '8': [0.44928, 12, 40, 8.08704, 2],
            '9': [0.47736, 12, 40, 8.59248, 2],
            '10': [0.50544, 12, 40, 9.09792, 2],
            '11': [0.53352, 12, 40, 9.60336, 2],
            '12': [0.5616, 12, 40, 10.1088, 2],
            '13': [0.5967, 12, 40, 10.7406, 2],
            '14': [0.6318, 12, 40, 11.3724, 2],
            '15': [0.6669, 12, 40, 12.0042, 2]}


def Venti_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.20382, 0.44376, 0.52374, 0.26058, 0.50654, 0.7095, 0.4386, 1.24, 0.568288, 1.136335, 1.419344],
            '2': [0.22041, 0.47988, 0.56637, 0.28179, 0.54777, 0.76725, 0.4743, 1.333, 0.614544, 1.228828, 1.534872],
            '3': [0.237, 0.516, 0.609, 0.303, 0.589, 0.825, 0.51, 1.426, 0.6608, 1.32132, 1.6504],
            '4': [0.2607, 0.5676, 0.6699, 0.3333, 0.6479, 0.9075, 0.561, 1.55, 0.72688, 1.453452, 1.81544],
            '5': [0.27729, 0.60372, 0.71253, 0.35451, 0.68913, 0.96525, 0.5967, 1.643, 0.773136, 1.545944, 1.930968],
            '6': [0.29625, 0.645, 0.76125, 0.37875, 0.73625, 1.03125, 0.6375, 1.736, 0.826, 1.65165, 2.063],
            '7': [0.32232, 0.70176, 0.82824, 0.41208, 0.80104, 1.122, 0.6936, 1.86, 0.898688, 1.796995, 2.244544],
            '8': [0.34839, 0.75852, 0.89523, 0.44541, 0.86583, 1.21275, 0.7497, 1.984, 0.971376, 1.94234, 2.426088],
            '9': [0.37446, 0.81528, 0.96222, 0.47874, 0.93062, 1.3035, 0.8058, 2.108, 1.044064, 2.087686, 2.607632],
            '10': [0.4029, 0.8772, 1.0353, 0.5151, 1.0013, 1.4025, 0.867, 2.232, 1.12336, 2.246244, 2.80568],
            '11': [0.435487, 0.94815, 1.119037, 0.556762, 1.082288, 1.515937, 0.937125, 2.36096, 1.202656, 2.404802, 3.003728],
            '12': [0.47381, 1.031587, 1.217513, 0.605758, 1.177529, 1.64934, 1.019592, 2.5296, 1.281952, 2.563361, 3.201776],
            '13': [0.512133, 1.115024, 1.315988, 0.654753, 1.27277, 1.782742, 1.102059, 2.69824, 1.361248, 2.721919, 3.399824],
            '14': [0.550456, 1.198462, 1.414463, 0.703748, 1.368011, 1.916145, 1.184526, 2.86688, 1.440544, 2.880478, 3.597872],
            '15': [0.592263, 1.289484, 1.521891, 0.757197, 1.471911, 2.061675, 1.27449, 3.03552, 1.51984, 3.039036, 3.79592]}


def Venti_E(event: Event, inter) -> List[Event]:
    info = {'1': [2.76, 6, 3.8, 15],
            '2': [2.967, 6, 4.085, 15],
            '3': [3.174, 6, 4.37, 15],
            '4': [3.45, 6, 4.75, 15],
            '5': [3.657, 6, 5.035, 15],
            '6': [3.864, 6, 5.32, 15],
            '7': [4.14, 6, 5.7, 15],
            '8': [4.416, 6, 6.08, 15],
            '9': [4.692, 6, 6.46, 15],
            '10': [4.968, 6, 6.84, 15],
            '11': [5.244, 6, 7.22, 15],
            '12': [5.52, 6, 7.6, 15],
            '13': [5.865, 6, 8.075, 15],
            '14': [6.21, 6, 8.55, 15],
            '15': [6.555, 6, 9.025, 15]}


def Venti_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.376, 0.188, 8, 15, 60],
            '2': [0.4042, 0.2021, 8, 15, 60],
            '3': [0.4324, 0.2162, 8, 15, 60],
            '4': [0.47, 0.235, 8, 15, 60],
            '5': [0.4982, 0.2491, 8, 15, 60],
            '6': [0.5264, 0.2632, 8, 15, 60],
            '7': [0.564, 0.282, 8, 15, 60],
            '8': [0.6016, 0.3008, 8, 15, 60],
            '9': [0.6392, 0.3196, 8, 15, 60],
            '10': [0.6768, 0.3384, 8, 15, 60],
            '11': [0.7144, 0.3572, 8, 15, 60],
            '12': [0.752, 0.376, 8, 15, 60],
            '13': [0.799, 0.3995, 8, 15, 60],
            '14': [0.846, 0.423, 8, 15, 60],
            '15': [0.893, 0.4465, 8, 15, 60]}


def Xiangling_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.42054, 0.4214, 0.26058, 0.14104, 0.71036, 1.2169, 25, 0.639324, 1.278377, 1.596762],
            '2': [0.45477, 0.4557, 0.28179, 0.15252, 0.76818, 1.31595, 25, 0.691362, 1.382431, 1.726731],
            '3': [0.489, 0.49, 0.303, 0.164, 0.826, 1.415, 25, 0.7434, 1.486485, 1.8567],
            '4': [0.5379, 0.539, 0.3333, 0.1804, 0.9086, 1.5565, 25, 0.81774, 1.635134, 2.04237],
            '5': [0.57213, 0.5733, 0.35451, 0.19188, 0.96642, 1.65555, 25, 0.869778, 1.739187, 2.172339],
            '6': [0.61125, 0.6125, 0.37875, 0.205, 1.0325, 1.76875, 25, 0.92925, 1.858106, 2.320875],
            '7': [0.66504, 0.6664, 0.41208, 0.22304, 1.12336, 1.9244, 25, 1.011024, 2.02162, 2.525112],
            '8': [0.71883, 0.7203, 0.44541, 0.24108, 1.21422, 2.08005, 25, 1.092798, 2.185133, 2.729349],
            '9': [0.77262, 0.7742, 0.47874, 0.25912, 1.30508, 2.2357, 25, 1.174572, 2.348646, 2.933586],
            '10': [0.8313, 0.833, 0.5151, 0.2788, 1.4042, 2.4055, 25, 1.26378, 2.527025, 3.15639],
            '11': [0.898537, 0.900375, 0.556762, 0.30135, 1.517775, 2.600062, 25, 1.352988, 2.705403, 3.379194],
            '12': [0.977609, 0.979608, 0.605758, 0.327869, 1.651339, 2.828868, 25, 1.442196, 2.883781, 3.601998],
            '13': [1.05668, 1.058841, 0.654753, 0.354388, 1.784903, 3.057673, 25, 1.531404, 3.062159, 3.824802],
            '14': [1.135751, 1.138074, 0.703748, 0.380906, 1.918468, 3.286479, 25, 1.620612, 3.240537, 4.047606],
            '15': [1.222011, 1.22451, 0.757197, 0.409836, 2.064174, 3.536085, 25, 1.70982, 3.418915, 4.27041]}
    # 1, 2, 3(2), 4(4), 5, z, sta, p, lp, hp
    lv = str(inter.characters[event.source].attr.normatk_lv)
    keys = __dmg_keys+['damage_type', 'view']
    config = [['A1', 0,  12,      0, '香菱:普攻:第1段', DamageType.NORMAL_ATK, True],
              ['A2', 1,  38-12,   0, '香菱:普攻:第2段', DamageType.NORMAL_ATK, True],
              ['A3', 2,  72-38,   0, '香菱:普攻:第3段', DamageType.NORMAL_ATK, True],
              ['A3', 2,  60-38,   0, '香菱:普攻:第3段', DamageType.NORMAL_ATK, False],
              ['A4', 3,  141-72,  0, '香菱:普攻:第4段', DamageType.NORMAL_ATK, True],
              ['A4', 3,  129-72,  0, '香菱:普攻:第4段', DamageType.NORMAL_ATK, False],
              ['A4', 3,  118-72,  0, '香菱:普攻:第4段', DamageType.NORMAL_ATK, False],
              ['A4', 3,  106-72,  0, '香菱:普攻:第4段', DamageType.NORMAL_ATK, False],
              ['A5', 4,  167-141, 0, '香菱:普攻:第5段', DamageType.NORMAL_ATK, True],
              ['Z',  5,  78,      0, '香菱:重击',     DamageType.CHARGED_ATK, True],
              ['P',  7,  30,      0, '香菱:下落期间', DamageType.PLUNGING_ATK, False],
              ['LP', 8,  30,      0, '香菱:低空下落', DamageType.PLUNGING_ATK, True],
              ['HP', 9,  30,      0, '香菱:低空下落', DamageType.PLUNGING_ATK, True]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.PHYSICAL, DamageType.NORMAL_ATK)


def Xiangling_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.1128, 12],
            '2': [1.19626, 12],
            '3': [1.27972, 12],
            '4': [1.391, 12],
            '5': [1.47446, 12],
            '6': [1.55792, 12],
            '7': [1.6692, 12],
            '8': [1.78048, 12],
            '9': [1.89176, 12],
            '10': [2.00304, 12],
            '11': [2.11432, 12],
            '12': [2.2256, 12],
            '13': [2.3647, 12],
            '14': [2.5038, 12],
            '15': [2.6429, 12]}
    # e, cd
    lv = str(inter.characters[event.source].attr.elemskill_lv)
    config = [['E', 0, 18, 12*60, '香菱:元素战技']]
    mappings = [dict(zip(__dmg_keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.PYRO, DamageType.ELEM_SKILL, snapshot='Xiangling->E', view=False)


def Xiangling_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.72, 0.88, 1.096, 1.12, 10, 20, 80],
            '2': [0.774, 0.946, 1.1782, 1.204, 10, 20, 80],
            '3': [0.828, 1.012, 1.2604, 1.288, 10, 20, 80],
            '4': [0.9, 1.1, 1.37, 1.4, 10, 20, 80],
            '5': [0.954, 1.166, 1.4522, 1.484, 10, 20, 80],
            '6': [1.008, 1.232, 1.5344, 1.568, 10, 20, 80],
            '7': [1.08, 1.32, 1.644, 1.68, 10, 20, 80],
            '8': [1.152, 1.408, 1.7536, 1.792, 10, 20, 80],
            '9': [1.224, 1.496, 1.8632, 1.904, 10, 20, 80],
            '10': [1.296, 1.584, 1.9728, 2.016, 10, 20, 80],
            '11': [1.368, 1.672, 2.0824, 2.128, 10, 20, 80],
            '12': [1.44, 1.76, 2.192, 2.24, 10, 20, 80],
            '13': [1.53, 1.87, 2.329, 2.38, 10, 20, 80],
            '14': [1.62, 1.98, 2.466, 2.52, 10, 20, 80],
            '15': [1.71, 2.09, 2.603, 2.66, 10, 20, 80]}
    # q1, q2, q3, q, dur, cd, energy
    lv = str(inter.characters[event.source].attr.elemburst_lv)
    keys = __dmg_keys+['snapshot', 'view']
    config = [['Q1',  0, 0,  20*60, '香菱:元素爆发:一段挥舞伤害', '', False],
              ['Q2',  1, 0,  20*60, '香菱:元素爆发:二段挥舞伤害', '', False],
              ['Q3',  2, 99, 20*60, '香菱:元素爆发:三段挥舞伤害', '', True],
              ['Q',   3, 0,  20*60, '香菱:元素爆发:旋火轮伤害', 'Xiangling->Q', False]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.PYRO, DamageType.ELEM_BURST)


def Beidou_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.71122, 0.70864, 0.88322, 0.86516, 1.12144, 0.56244, 1.01824, 40, 5, 0.745878, 1.49144, 1.862889],
            '2': [0.76911, 0.76632, 0.95511, 0.93558, 1.21272, 0.60822, 1.10112, 40, 5, 0.806589, 1.612836, 2.01452],
            '3': [0.827, 0.824, 1.027, 1.006, 1.304, 0.654, 1.184, 40, 5, 0.8673, 1.734233, 2.16615],
            '4': [0.9097, 0.9064, 1.1297, 1.1066, 1.4344, 0.7194, 1.3024, 40, 5, 0.95403, 1.907656, 2.382765],
            '5': [0.96759, 0.96408, 1.20159, 1.17702, 1.52568, 0.76518, 1.38528, 40, 5, 1.014741, 2.029052, 2.534396],
            '6': [1.03375, 1.03, 1.28375, 1.2575, 1.63, 0.8175, 1.48, 40, 5, 1.084125, 2.167791, 2.707688],
            '7': [1.12472, 1.12064, 1.39672, 1.36816, 1.77344, 0.88944, 1.61024, 40, 5, 1.179528, 2.358556, 2.945964],
            '8': [1.21569, 1.21128, 1.50969, 1.47882, 1.91688, 0.96138, 1.74048, 40, 5, 1.274931, 2.549322, 3.184241],
            '9': [1.30666, 1.30192, 1.62266, 1.58948, 2.06032, 1.03332, 1.87072, 40, 5, 1.370334, 2.740087, 3.422517],
            '10': [1.4059, 1.4008, 1.7459, 1.7102, 2.2168, 1.1118, 2.0128, 40, 5, 1.47441, 2.948195, 3.682455],
            '11': [1.519613, 1.5141, 1.887112, 1.848525, 2.3961, 1.201725, 2.1756, 40, 5, 1.578486, 3.156303, 3.942393],
            '12': [1.653338, 1.647341, 2.053178, 2.011195, 2.606957, 1.307477, 2.367053, 40, 5, 1.682562, 3.364411, 4.202331],
            '13': [1.787064, 1.780582, 2.219244, 2.173865, 2.817814, 1.413229, 2.558506, 40, 5, 1.786638, 3.572519, 4.462269],
            '14': [1.92079, 1.913822, 2.38531, 2.336536, 3.02867, 1.51898, 2.749958, 40, 5, 1.890714, 3.780627, 4.722207],
            '15': [2.066673, 2.059176, 2.566473, 2.513994, 3.258696, 1.634346, 2.958816, 40, 5, 1.99479, 3.988735, 4.982145]}


def Beidou_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.144, 1386.3678, 1.216, 1.6, 7.5],
            '2': [0.1548, 1525.0239, 1.3072, 1.72, 7.5],
            '3': [0.1656, 1675.2346, 1.3984, 1.84, 7.5],
            '4': [0.18, 1837, 1.52, 2, 7.5],
            '5': [0.1908, 2010.3201, 1.6112, 2.12, 7.5],
            '6': [0.2016, 2195.1948, 1.7024, 2.24, 7.5],
            '7': [0.216, 2391.6243, 1.824, 2.4, 7.5],
            '8': [0.2304, 2599.6084, 1.9456, 2.56, 7.5],
            '9': [0.2448, 2819.147, 2.0672, 2.72, 7.5],
            '10': [0.2592, 3050.2405, 2.1888, 2.88, 7.5],
            '11': [0.2736, 3292.8887, 2.3104, 3.04, 7.5],
            '12': [0.288, 3547.0913, 2.432, 3.2, 7.5],
            '13': [0.306, 3812.8489, 2.584, 3.4, 7.5],
            '14': [0.324, 4090.161, 2.736, 3.6, 7.5],
            '15': [0.342, 4379.028, 2.888, 3.8, 7.5]}


def Beidou_Q(event: Event, inter) -> List[Event]:
    info = {'1': [1.216, 0.96, 0.2, 15, 20, 80],
            '2': [1.3072, 1.032, 0.21, 15, 20, 80],
            '3': [1.3984, 1.104, 0.22, 15, 20, 80],
            '4': [1.52, 1.2, 0.24, 15, 20, 80],
            '5': [1.6112, 1.272, 0.25, 15, 20, 80],
            '6': [1.7024, 1.344, 0.26, 15, 20, 80],
            '7': [1.824, 1.44, 0.28, 15, 20, 80],
            '8': [1.9456, 1.536, 0.3, 15, 20, 80],
            '9': [2.0672, 1.632, 0.32, 15, 20, 80],
            '10': [2.1888, 1.728, 0.34, 15, 20, 80],
            '11': [2.3104, 1.824, 0.35, 15, 20, 80],
            '12': [2.432, 1.92, 0.36, 15, 20, 80],
            '13': [2.584, 2.04, 0.37, 15, 20, 80],
            '14': [2.736, 2.16, 0.38, 15, 20, 80],
            '15': [2.888, 2.28, 0.39, 15, 20, 80]}


def Xingqiu_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.46612, 0.47644, 0.28552, 0.28552, 0.55986, 0.35862, 0.35862, 0.473, 0.56158, 20, 0.639324, 1.278377, 1.596762],
            '2': [0.50406, 0.51522, 0.30876, 0.30876, 0.60543, 0.38781, 0.38781, 0.5115, 0.60729, 20, 0.691362, 1.382431, 1.726731],
            '3': [0.542, 0.554, 0.332, 0.332, 0.651, 0.417, 0.417, 0.55, 0.653, 20, 0.7434, 1.486485, 1.8567],
            '4': [0.5962, 0.6094, 0.3652, 0.3652, 0.7161, 0.4587, 0.4587, 0.605, 0.7183, 20, 0.81774, 1.635134, 2.04237],
            '5': [0.63414, 0.64818, 0.38844, 0.38844, 0.76167, 0.48789, 0.48789, 0.6435, 0.76401, 20, 0.869778, 1.739187, 2.172339],
            '6': [0.6775, 0.6925, 0.415, 0.415, 0.81375, 0.52125, 0.52125, 0.6875, 0.81625, 20, 0.92925, 1.858106, 2.320875],
            '7': [0.73712, 0.75344, 0.45152, 0.45152, 0.88536, 0.56712, 0.56712, 0.748, 0.88808, 20, 1.011024, 2.02162, 2.525112],
            '8': [0.79674, 0.81438, 0.48804, 0.48804, 0.95697, 0.61299, 0.61299, 0.8085, 0.95991, 20, 1.092798, 2.185133, 2.729349],
            '9': [0.85636, 0.87532, 0.52456, 0.52456, 1.02858, 0.65886, 0.65886, 0.869, 1.03174, 20, 1.174572, 2.348646, 2.933586],
            '10': [0.9214, 0.9418, 0.5644, 0.5644, 1.1067, 0.7089, 0.7089, 0.935, 1.1101, 20, 1.26378, 2.527025, 3.15639],
            '11': [0.995925, 1.017975, 0.61005, 0.61005, 1.196212, 0.766237, 0.766237, 1.010625, 1.199887, 20, 1.352988, 2.705403, 3.379194],
            '12': [1.083566, 1.107557, 0.663734, 0.663734, 1.301479, 0.833666, 0.833666, 1.09956, 1.305478, 20, 1.442196, 2.883781, 3.601998],
            '13': [1.171208, 1.197139, 0.717419, 0.717419, 1.406746, 0.901095, 0.901095, 1.188495, 1.411068, 20, 1.531404, 3.062159, 3.824802],
            '14': [1.258849, 1.28672, 0.771103, 0.771103, 1.512013, 0.968524, 0.968524, 1.27743, 1.516658, 20, 1.620612, 3.240537, 4.047606],
            '15': [1.354458, 1.384446, 0.829668, 0.829668, 1.626849, 1.042083, 1.042083, 1.37445, 1.631847, 20, 1.70982, 3.418915, 4.27041]}
    # 1, 2, 3.1, 3.2, 4, 5.1, 5.2, z.1, z.2, sta, p, lp, hp
    lv = str(inter.characters[event.source].attr.normatk_lv)
    keys = __dmg_keys+['damage_type', 'view']
    config = [['A1', 0,  9,       0, '行秋:普攻:第1段', DamageType.NORMAL_ATK, True],
              ['A2', 1,  34-9,    0, '行秋:普攻:第2段', DamageType.NORMAL_ATK, True],
              ['A3', 2,  78-34,   0, '行秋:普攻:第3段', DamageType.NORMAL_ATK, True],
              ['A3', 3,  59-34,   0, '行秋:普攻:第3段', DamageType.NORMAL_ATK, False],
              ['A4', 4,  116-78,  0, '行秋:普攻:第4段', DamageType.NORMAL_ATK, True],
              ['A5', 5,  195-116, 0, '行秋:普攻:第5段', DamageType.NORMAL_ATK, True],
              ['A5', 6,  160-116, 0, '行秋:普攻:第5段', DamageType.NORMAL_ATK, False],
              ['Z',  7,  54,      0, '行秋:重击',     DamageType.CHARGED_ATK, True],
              ['Z',  8,  54,      0, '行秋:重击',     DamageType.CHARGED_ATK, False],
              ['P',  10, 30,      0, '行秋:下落期间', DamageType.PLUNGING_ATK, False],
              ['LP', 11, 30,      0, '行秋:低空下落', DamageType.PLUNGING_ATK, True],
              ['HP', 12, 30,      0, '行秋:低空下落', DamageType.PLUNGING_ATK, True]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.PHYSICAL, DamageType.NORMAL_ATK)


def Xingqiu_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.68, 1.912, 0.2, 15, 21],
            '2': [1.806, 2.0554, 0.21, 15, 21],
            '3': [1.932, 2.1988, 0.22, 15, 21],
            '4': [2.1, 2.39, 0.23, 15, 21],
            '5': [2.226, 2.5334, 0.24, 15, 21],
            '6': [2.352, 2.6768, 0.25, 15, 21],
            '7': [2.52, 2.868, 0.26, 15, 21],
            '8': [2.688, 3.0592, 0.27, 15, 21],
            '9': [2.856, 3.2504, 0.28, 15, 21],
            '10': [3.024, 3.4416, 0.29, 15, 21],
            '11': [3.192, 3.6328, 0.29, 15, 21],
            '12': [3.36, 3.824, 0.29, 15, 21],
            '13': [3.57, 4.063, 0.29, 15, 21],
            '14': [3.78, 4.302, 0.29, 15, 21],
            '15': [3.99, 4.541, 0.29, 15, 21]}
    # e.1, e.2, buff, dur, cd
    lv = str(inter.characters[event.source].attr.elemskill_lv)
    cx = event.args.get('cx', False)
    info2, data = {}, []
    for i in range(len(info[lv])):
        if i == 0 or i == 1:
            data.append(info[lv][i]*1.5)
        else:
            data.append(info[lv][i])
    info2[lv] = data
    keys = __dmg_keys+['view']
    config = [['E', 0, 82, 21*60, '行秋:元素战技', True],
              ['E', 1, 82, 21*60, '行秋:元素战技', False]]
    mappings = [dict(zip(keys, c)) for c in config]
    if not cx:
        return _auto_generate_dmg(event, info, mappings, lv,
                                  ElementType.HYDRO, DamageType.ELEM_SKILL)
    else:
        return _auto_generate_dmg(event, info2, mappings, lv,
                                  ElementType.HYDRO, DamageType.ELEM_SKILL)


def Xingqiu_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.54272, 15, 20, 80],
            '2': [0.583424, 15, 20, 80],
            '3': [0.624128, 15, 20, 80],
            '4': [0.6784, 15, 20, 80],
            '5': [0.719104, 15, 20, 80],
            '6': [0.759808, 15, 20, 80],
            '7': [0.81408, 15, 20, 80],
            '8': [0.868352, 15, 20, 80],
            '9': [0.922624, 15, 20, 80],
            '10': [0.976896, 15, 20, 80],
            '11': [1.031168, 15, 20, 80],
            '12': [1.08544, 15, 20, 80],
            '13': [1.15328, 15, 20, 80],
            '14': [1.22112, 15, 20, 80],
            '15': [1.28896, 15, 20, 80]}
    # q, dur, cd, energy
    stack = int(event.args.get('stack', '1'))
    view = event.args.get('view', False)
    lv = str(inter.characters[event.source].attr.elemburst_lv)
    keys = __dmg_keys+['view']
    config = [['Q', 0, 29, 20*60, '行秋:元素爆发:剑雨伤害', view]]
    for _ in range(stack-1):
        config.append(['Q', 0, 29, 20*60, '行秋:元素爆发:剑雨伤害', False])
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.HYDRO, DamageType.ELEM_BURST)


def Xiao_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.27544, 0.27544, 0.56936, 0.68552, 0.37664, 0.37664, 0.71544, 0.95832, 1.21088, 25, 0.818335, 1.636323, 2.043855],
            '2': [0.29422, 0.29422, 0.60818, 0.73226, 0.40232, 0.40232, 0.76422, 1.02366, 1.29344, 25, 0.884943, 1.769512, 2.210216],
            '3': [0.313, 0.313, 0.647, 0.779, 0.428, 0.428, 0.813, 1.089, 1.376, 25, 0.951552, 1.902701, 2.376576],
            '4': [0.33804, 0.33804, 0.69876, 0.84132, 0.46224, 0.46224, 0.87804, 1.17612, 1.48608, 25, 1.046707, 2.092971, 2.614234],
            '5': [0.35682, 0.35682, 0.73758, 0.88806, 0.48792, 0.48792, 0.92682, 1.24146, 1.56864, 25, 1.113316, 2.22616, 2.780594],
            '6': [0.37873, 0.37873, 0.78287, 0.94259, 0.51788, 0.51788, 0.98373, 1.31769, 1.66496, 25, 1.18944, 2.378376, 2.97072],
            '7': [0.4069, 0.4069, 0.8411, 1.0127, 0.5564, 0.5564, 1.0569, 1.4157, 1.7888, 25, 1.294111, 2.587673, 3.232143],
            '8': [0.43507, 0.43507, 0.89933, 1.08281, 0.59492, 0.59492, 1.13007, 1.51371, 1.91264, 25, 1.398781, 2.79697, 3.493567],
            '9': [0.46324, 0.46324, 0.95756, 1.15292, 0.63344, 0.63344, 1.20324, 1.61172, 2.03648, 25, 1.503452, 3.006267, 3.75499],
            '10': [0.49141, 0.49141, 1.01579, 1.22303, 0.67196, 0.67196, 1.27641, 1.70973, 2.16032, 25, 1.617638, 3.234591, 4.040179],
            '11': [0.51958, 0.51958, 1.07402, 1.29314, 0.71048, 0.71048, 1.34958, 1.80774, 2.28416, 25, 1.731825, 3.462915, 4.325368],
            '12': [0.54775, 0.54775, 1.13225, 1.36325, 0.749, 0.749, 1.42275, 1.90575, 2.408, 25, 1.846011, 3.69124, 4.610557],
            '13': [0.57592, 0.57592, 1.19048, 1.43336, 0.78752, 0.78752, 1.49592, 2.00376, 2.53184, 25, 1.960197, 3.919564, 4.895747],
            '14': [0.60409, 0.60409, 1.24871, 1.50347, 0.82604, 0.82604, 1.56909, 2.10177, 2.65568, 25, 2.074383, 4.147888, 5.180936],
            '15': [0.63226, 0.63226, 1.30694, 1.57358, 0.86456, 0.86456, 1.64226, 2.19978, 2.77952, 25, 2.18857, 4.376212, 5.466125]}


def Xiao_E(event: Event, inter) -> List[Event]:
    info = {'1': [2.528, 10],
            '2': [2.7176, 10],
            '3': [2.9072, 10],
            '4': [3.16, 10],
            '5': [3.3496, 10],
            '6': [3.5392, 10],
            '7': [3.792, 10],
            '8': [4.0448, 10],
            '9': [4.2976, 10],
            '10': [4.5504, 10],
            '11': [4.8032, 10],
            '12': [5.056, 10],
            '13': [5.372, 10],
            '14': [5.688, 10],
            '15': [6.004, 10]}


def Xiao_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.5845, 0.03, 15, 18, 70],
            '2': [0.6195, 0.03, 15, 18, 70],
            '3': [0.6545, 0.03, 15, 18, 70],
            '4': [0.7, 0.025, 15, 18, 70],
            '5': [0.735, 0.025, 15, 18, 70],
            '6': [0.77, 0.025, 15, 18, 70],
            '7': [0.8155, 0.02, 15, 18, 70],
            '8': [0.861, 0.02, 15, 18, 70],
            '9': [0.9065, 0.02, 15, 18, 70],
            '10': [0.952, 0.02, 15, 18, 70],
            '11': [0.9975, 0.02, 15, 18, 70],
            '12': [1.043, 0.02, 15, 18, 70],
            '13': [1.0885, 0.02, 15, 18, 70],
            '14': [1.134, 0.02, 15, 18, 70],
            '15': [1.1795, 0.02, 15, 18, 70]}


def Ningguang_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.28, 1.7408, 0.496, 50, 0.568288, 1.136335, 1.419344],
            '2': [0.301, 1.87136, 0.5332, 50, 0.614544, 1.228828, 1.534872],
            '3': [0.322, 2.00192, 0.5704, 50, 0.6608, 1.32132, 1.6504],
            '4': [0.35, 2.176, 0.62, 50, 0.72688, 1.453452, 1.81544],
            '5': [0.371, 2.30656, 0.6572, 50, 0.773136, 1.545944, 1.930968],
            '6': [0.392, 2.43712, 0.6944, 50, 0.826, 1.65165, 2.063],
            '7': [0.42, 2.6112, 0.744, 50, 0.898688, 1.796995, 2.244544],
            '8': [0.448, 2.78528, 0.7936, 50, 0.971376, 1.94234, 2.426088],
            '9': [0.476, 2.95936, 0.8432, 50, 1.044064, 2.087686, 2.607632],
            '10': [0.504, 3.13344, 0.8928, 50, 1.12336, 2.246244, 2.80568],
            '11': [0.53312, 3.314483, 0.944384, 50, 1.202656, 2.404802, 3.003728],
            '12': [0.5712, 3.551232, 1.01184, 50, 1.281952, 2.563361, 3.201776],
            '13': [0.60928, 3.787981, 1.079296, 50, 1.361248, 2.721919, 3.399824],
            '14': [0.64736, 4.02473, 1.146752, 50, 1.440544, 2.880478, 3.597872],
            '15': [0.68544, 4.261478, 1.214208, 50, 1.51984, 3.039036, 3.79592]}


def Ningguang_E(event: Event, inter) -> List[Event]:
    info = {'1': [-0.499, 2.304, 0.501, 12],
            '2': [-0.469, 2.4768, 0.531, 12],
            '3': [-0.439, 2.6496, 0.561, 12],
            '4': [-0.4, 2.88, 0.6, 12],
            '5': [-0.37, 3.0528, 0.63, 12],
            '6': [-0.34, 3.2256, 0.66, 12],
            '7': [-0.301, 3.456, 0.699, 12],
            '8': [-0.262, 3.6864, 0.738, 12],
            '9': [-0.223, 3.9168, 0.777, 12],
            '10': [-0.184, 4.1472, 0.816, 12],
            '11': [-0.145, 4.3776, 0.855, 12],
            '12': [-0.106, 4.608, 0.894, 12],
            '13': [-0.067, 4.896, 0.933, 12],
            '14': [-0.028, 5.184, 0.972, 12],
            '15': [0.011, 5.472, 1.011, 12]}


def Ningguang_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.8696, 12, 40],
            '2': [0.93482, 12, 40],
            '3': [1.00004, 12, 40],
            '4': [1.087, 12, 40],
            '5': [1.15222, 12, 40],
            '6': [1.21744, 12, 40],
            '7': [1.3044, 12, 40],
            '8': [1.39136, 12, 40],
            '9': [1.47832, 12, 40],
            '10': [1.56528, 12, 40],
            '11': [1.65224, 12, 40],
            '12': [1.7392, 12, 40],
            '13': [1.8479, 12, 40],
            '14': [1.9566, 12, 40],
            '15': [2.0653, 12, 40]}


def Klee_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.7216, 0.624, 0.8992, 1.5736, 50, 0.568288, 1.136335, 1.419344],
            '2': [0.77572, 0.6708, 0.96664, 1.69162, 50, 0.614544, 1.228828, 1.534872],
            '3': [0.82984, 0.7176, 1.03408, 1.80964, 50, 0.6608, 1.32132, 1.6504],
            '4': [0.902, 0.78, 1.124, 1.967, 50, 0.72688, 1.453452, 1.81544],
            '5': [0.95612, 0.8268, 1.19144, 2.08502, 50, 0.773136, 1.545944, 1.930968],
            '6': [1.01024, 0.8736, 1.25888, 2.20304, 50, 0.826, 1.65165, 2.063],
            '7': [1.0824, 0.936, 1.3488, 2.3604, 50, 0.898688, 1.796995, 2.244544],
            '8': [1.15456, 0.9984, 1.43872, 2.51776, 50, 0.971376, 1.94234, 2.426088],
            '9': [1.22672, 1.0608, 1.52864, 2.67512, 50, 1.044064, 2.087686, 2.607632],
            '10': [1.29888, 1.1232, 1.61856, 2.83248, 50, 1.12336, 2.246244, 2.80568],
            '11': [1.373926, 1.188096, 1.712077, 2.996134, 50, 1.202656, 2.404802, 3.003728],
            '12': [1.472064, 1.27296, 1.834368, 3.210144, 50, 1.281952, 2.563361, 3.201776],
            '13': [1.570202, 1.357824, 1.956659, 3.424154, 50, 1.361248, 2.721919, 3.399824],
            '14': [1.668339, 1.442688, 2.07895, 3.638163, 50, 1.440544, 2.880478, 3.597872],
            '15': [1.766477, 1.527552, 2.201242, 3.852173, 50, 1.51984, 3.039036, 3.79592]}
    # 1, 2, 3, z, sta, p, lp, hp
    lv = str(inter.characters[event.source].attr.normatk_lv)
    keys = __dmg_keys+['damage_type', 'view']
    config = [['A1', 0, 32,      0, '可莉:普攻:第1段', DamageType.NORMAL_ATK, True],
              ['A2', 1, 76-32,   0, '可莉:普攻:第2段', DamageType.NORMAL_ATK, True],
              ['A3', 2, 151-76,  0, '可莉:普攻:第3段', DamageType.NORMAL_ATK, True],
              ['Z0', 3, 50,      0, '可莉:重击',     DamageType.CHARGED_ATK, True],
              ['P',  5, 30,      0, '可莉:下落期间', DamageType.PLUNGING_ATK, False],
              ['LP', 6, 30,      0, '可莉:低空下落', DamageType.PLUNGING_ATK, True],
              ['HP', 7, 30,      0, '可莉:低空下落', DamageType.PLUNGING_ATK, True]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.PYRO, DamageType.NORMAL_ATK)


def Klee_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.952, 0.952, 0.952, 0.328, 15, 20],
            '2': [1.0234, 1.0234, 1.0234, 0.3526, 15, 20],
            '3': [1.0948, 1.0948, 1.0948, 0.3772, 15, 20],
            '4': [1.19, 1.19, 1.19, 0.41, 15, 20],
            '5': [1.2614, 1.2614, 1.2614, 0.4346, 15, 20],
            '6': [1.3328, 1.3328, 1.3328, 0.4592, 15, 20],
            '7': [1.428, 1.428, 1.428, 0.492, 15, 20],
            '8': [1.5232, 1.5232, 1.5232, 0.5248, 15, 20],
            '9': [1.6184, 1.6184, 1.6184, 0.5576, 15, 20],
            '10': [1.7136, 1.7136, 1.7136, 0.5904, 15, 20],
            '11': [1.8088, 1.8088, 1.8088, 0.6232, 15, 20],
            '12': [1.904, 1.904, 1.904, 0.656, 15, 20],
            '13': [2.023, 2.023, 2.023, 0.697, 15, 20],
            '14': [2.142, 2.142, 2.142, 0.738, 15, 20],
            '15': [2.261, 2.261, 2.261, 0.779, 15, 20]}
    # e0, e0, e0, e1, dur, cd
    lv = str(inter.characters[event.source].attr.elemskill_lv)
    keys = __dmg_keys+['view']
    config = [['E0',  0, 67, 20*60, '可莉:元素战技:蹦蹦炸弹伤害', True],
              ['E1',  3, 0,  20*60, '可莉:元素战技:诡雷伤害',     False]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.PYRO, DamageType.ELEM_SKILL)


def Klee_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.4264, 15, 60, 0.51168, 10],
            '2': [0.45838, 15, 60, 0.550056, 10],
            '3': [0.49036, 15, 60, 0.588432, 10],
            '4': [0.533, 15, 60, 0.6396, 10],
            '5': [0.56498, 15, 60, 0.677976, 10],
            '6': [0.59696, 15, 60, 0.716352, 10],
            '7': [0.6396, 15, 60, 0.76752, 10],
            '8': [0.68224, 15, 60, 0.818688, 10],
            '9': [0.72488, 15, 60, 0.869856, 10],
            '10': [0.76752, 15, 60, 0.921024, 10],
            '11': [0.81016, 15, 60, 0.972192, 10],
            '12': [0.8528, 15, 60, 1.02336, 10],
            '13': [0.9061, 15, 60, 1.08732, 10],
            '14': [0.9594, 15, 60, 1.15128, 10],
            '15': [1.0127, 15, 60, 1.21524, 10]}
    # q, cd, energy, ?, dur
    lv = str(inter.characters[event.source].attr.elemburst_lv)
    config = [['Q',  0, 100, 15*60, '可莉:元素爆发']]
    mappings = [dict(zip(__dmg_keys, c)) for c in config]
    info2 = {str(i): [info[str(i)][0]*1.2, 5.55]
             for i in range(1, 16)}
    keys2 = __dmg_keys+['damage_type', 'snapshot']
    config2 = [['CX1', 0, 0, 0, '可莉:一命:连环轰隆', DamageType.ELEM_BURST, 'Klee->Q'],
               ['CX4', 1, 0, 0, '可莉:四命:一触即发', DamageType.NONE, '']]
    mappings2 = [dict(zip(keys2, c)) for c in config2]
    if event.name.startswith('Q'):
        return _auto_generate_dmg(event, info, mappings, lv,
                                  ElementType.PYRO, DamageType.ELEM_BURST, snapshot='Klee->Q')
    elif event.name.startswith('CX'):
        return _auto_generate_dmg(event, info2, mappings2, lv,
                                  ElementType.PYRO, DamageType.ELEM_BURST)


def Zhongli_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.307691, 0.311518, 0.385762, 0.429389, 0.1075, 0.544965, 1.11026, 25, 0.639324, 1.278377, 1.596762],
            '2': [0.332735, 0.336874, 0.417161, 0.46434, 0.11625, 0.589322, 1.20063, 25, 0.691362, 1.382431, 1.726731],
            '3': [0.35778, 0.36223, 0.44856, 0.49929, 0.125, 0.63368, 1.291, 25, 0.7434, 1.486485, 1.8567],
            '4': [0.393558, 0.398453, 0.493416, 0.549219, 0.1375, 0.697048, 1.4201, 25, 0.81774, 1.635134, 2.04237],
            '5': [0.418603, 0.423809, 0.524815, 0.584169, 0.14625, 0.741406, 1.51047, 25, 0.869778, 1.739187, 2.172339],
            '6': [0.447225, 0.452788, 0.5607, 0.624113, 0.15625, 0.7921, 1.61375, 25, 0.92925, 1.858106, 2.320875],
            '7': [0.486581, 0.492633, 0.610042, 0.679034, 0.17, 0.861805, 1.75576, 25, 1.011024, 2.02162, 2.525112],
            '8': [0.525937, 0.532478, 0.659383, 0.733956, 0.18375, 0.93151, 1.89777, 25, 1.092798, 2.185133, 2.729349],
            '9': [0.565292, 0.572323, 0.708725, 0.788878, 0.1975, 1.001214, 2.03978, 25, 1.174572, 2.348646, 2.933586],
            '10': [0.608226, 0.615791, 0.762552, 0.848793, 0.2125, 1.077256, 2.1947, 25, 1.26378, 2.527025, 3.15639],
            '11': [0.657421, 0.665598, 0.824229, 0.917445, 0.229687, 1.164387, 2.372212, 25, 1.352988, 2.705403, 3.379194],
            '12': [0.715274, 0.72417, 0.896761, 0.998181, 0.2499, 1.266853, 2.580967, 25, 1.442196, 2.883781, 3.601998],
            '13': [0.773127, 0.782743, 0.969293, 1.078916, 0.270112, 1.369319, 2.789722, 25, 1.531404, 3.062159, 3.824802],
            '14': [0.83098, 0.841315, 1.041825, 1.159651, 0.290325, 1.471785, 2.998477, 25, 1.620612, 3.240537, 4.047606],
            '15': [0.894092, 0.905213, 1.120951, 1.247726, 0.312375, 1.583566, 3.226209, 25, 1.70982, 3.418915, 4.27041]}
    # 1, 2, 3, 4, 5(4), 6, z, sta, p, lp, hp
    lv = str(inter.characters[event.source].attr.normatk_lv)
    keys = __dmg_keys+['damage_type', 'view']
    config = [['A1', 0, 8,       0, '钟离:普攻:第1段', DamageType.NORMAL_ATK, True],
              ['A2', 1, 29-8,    0, '钟离:普攻:第2段', DamageType.NORMAL_ATK, True],
              ['A3', 2, 45-29,   0, '钟离:普攻:第3段', DamageType.NORMAL_ATK, True],
              ['A4', 3, 71-45,   0, '钟离:普攻:第4段', DamageType.NORMAL_ATK, True],
              ['A5', 4, 91-71,   0, '钟离:普攻:第5段', DamageType.NORMAL_ATK, False],
              ['A5', 4, 97-71,   0, '钟离:普攻:第5段', DamageType.NORMAL_ATK, False],
              ['A5', 4, 103-71,  0, '钟离:普攻:第5段', DamageType.NORMAL_ATK, False],
              ['A5', 4, 109-71,  0, '钟离:普攻:第5段', DamageType.NORMAL_ATK, True],
              ['A6', 5, 153-109, 0, '钟离:普攻:第6段', DamageType.NORMAL_ATK, True],
              ['Z',  6, 50,      0, '钟离:重击',       DamageType.CHARGED_ATK, True],
              ['P',  8, 30,      0, '钟离:下落期间', DamageType.PLUNGING_ATK, False],
              ['LP', 9, 30,      0, '钟离:低空下落', DamageType.PLUNGING_ATK, True],
              ['HP', 10, 30,     0, '钟离:低空下落', DamageType.PLUNGING_ATK, True]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.PHYSICAL, DamageType.NORMAL_ATK)


def Zhongli_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.16, 0.32, 4, 0.8, 1232.4108, 0.128, 20, 12],
            '2': [0.172, 0.344, 4, 0.86, 1355.6691, 0.1376, 20, 12],
            '3': [0.184, 0.368, 4, 0.92, 1489.1987, 0.1472, 20, 12],
            '4': [0.2, 0.4, 4, 1, 1633, 0.16, 20, 12],
            '5': [0.212, 0.424, 4, 1.06, 1787.0728, 0.1696, 20, 12],
            '6': [0.224, 0.448, 4, 1.12, 1951.417, 0.1792, 20, 12],
            '7': [0.24, 0.48, 4, 1.2, 2126.033, 0.192, 20, 12],
            '8': [0.256, 0.512, 4, 1.28, 2310.9202, 0.2048, 20, 12],
            '9': [0.272, 0.544, 4, 1.36, 2506.079, 0.2176, 20, 12],
            '10': [0.288, 0.576, 4, 1.44, 2711.5093, 0.2304, 20, 12],
            '11': [0.304, 0.608, 4, 1.52, 2927.2112, 0.2432, 20, 12],
            '12': [0.32, 0.64, 4, 1.6, 3153.1846, 0.256, 20, 12],
            '13': [0.34, 0.68, 4, 1.7, 3389.4294, 0.272, 20, 12],
            '14': [0.36, 0.72, 4, 1.8, 3635.946, 0.288, 20, 12],
            '15': [0.38, 0.76, 4, 1.9, 3892.734, 0.304, 20, 12]}
    # e0, e1, cd1, e2, sf, ss, stime, cd2
    lv = str(inter.characters[event.source].attr.elemskill_lv)
    keys = __dmg_keys+['view']
    config = [['E0',  0, 39, 4*60,  '钟离:元素战技:点按', True],
              ['E1',  1, 0,  4*60,  '钟离:元素战技:共鸣', False],
              ['E2',  3, 97, 12*60, '钟离:元素战技:长按', True]]
    mappings = [dict(zip(keys, c)) for c in config]
    keys2 = __shield_keys+['snapshot']
    config2 = [['E', 5, 4, 20*60, '钟离:元素战技:玉璋护盾', 'Zhongli->E']]
    mappings2 = [dict(zip(keys2, c)) for c in config2]
    if event.type == EventType.DAMAGE:
        return _auto_generate_dmg(event, info, mappings, lv,
                                  ElementType.GEO, DamageType.ELEM_SKILL)
    elif event.type == EventType.SHIELD:
        return _auto_generate_shield(event, info, mappings2, lv)


def Zhongli_Q(event: Event, inter) -> List[Event]:
    info = {'1': [4.0108, 3.1, 12, 40],
            '2': [4.4444, 3.2, 12, 40],
            '3': [4.878, 3.3, 12, 40],
            '4': [5.42, 3.4, 12, 40],
            '5': [5.9078, 3.5, 12, 40],
            '6': [6.3956, 3.6, 12, 40],
            '7': [7.046, 3.7, 12, 40],
            '8': [7.6964, 3.8, 12, 40],
            '9': [8.3468, 3.9, 12, 40],
            '10': [8.9972, 4, 12, 40],
            '11': [9.6476, 4, 12, 40],
            '12': [10.298, 4, 12, 40],
            '13': [10.84, 4, 12, 40],
            '14': [11.382, 4, 12, 40],
            '15': [11.924, 4, 12, 40]}
    # q, effect, cd, energy
    lv = str(inter.characters[event.source].attr.elemburst_lv)
    config = [['Q', 0, 140, 12*60, '钟离:元素爆发']]
    mappings = [dict(zip(__dmg_keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.GEO, DamageType.ELEM_BURST)


def Fischl_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.44118, 0.46784, 0.58136, 0.57706, 0.72068, 0.4386, 1.24, 0.568288, 1.136335, 1.419344],
            '2': [0.47709, 0.50592, 0.62868, 0.62403, 0.77934, 0.4743, 1.333, 0.614544, 1.228828, 1.534872],
            '3': [0.513, 0.544, 0.676, 0.671, 0.838, 0.51, 1.426, 0.6608, 1.32132, 1.6504],
            '4': [0.5643, 0.5984, 0.7436, 0.7381, 0.9218, 0.561, 1.55, 0.72688, 1.453452, 1.81544],
            '5': [0.60021, 0.63648, 0.79092, 0.78507, 0.98046, 0.5967, 1.643, 0.773136, 1.545944, 1.930968],
            '6': [0.64125, 0.68, 0.845, 0.83875, 1.0475, 0.6375, 1.736, 0.826, 1.65165, 2.063],
            '7': [0.69768, 0.73984, 0.91936, 0.91256, 1.13968, 0.6936, 1.86, 0.898688, 1.796995, 2.244544],
            '8': [0.75411, 0.79968, 0.99372, 0.98637, 1.23186, 0.7497, 1.984, 0.971376, 1.94234, 2.426088],
            '9': [0.81054, 0.85952, 1.06808, 1.06018, 1.32404, 0.8058, 2.108, 1.044064, 2.087686, 2.607632],
            '10': [0.8721, 0.9248, 1.1492, 1.1407, 1.4246, 0.867, 2.232, 1.12336, 2.246244, 2.80568],
            '11': [0.93366, 0.99008, 1.23032, 1.22122, 1.52516, 0.9282, 2.356, 1.202656, 2.404802, 3.003728],
            '12': [0.99522, 1.05536, 1.31144, 1.30174, 1.62572, 0.9894, 2.48, 1.281952, 2.563361, 3.201776],
            '13': [1.05678, 1.12064, 1.39256, 1.38226, 1.72628, 1.0506, 2.635, 1.361248, 2.721919, 3.399824],
            '14': [1.11834, 1.18592, 1.47368, 1.46278, 1.82684, 1.1118, 2.79, 1.440544, 2.880478, 3.597872],
            '15': [1.1799, 1.2512, 1.5548, 1.5433, 1.9274, 1.173, 2.945, 1.51984, 3.039036, 3.79592]}


def Fischl_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.888, 1.1544, 10, 25, 8],
            '2': [0.9546, 1.24098, 10, 25, 8],
            '3': [1.0212, 1.32756, 10, 25, 8],
            '4': [1.11, 1.443, 10, 25, 8],
            '5': [1.1766, 1.52958, 10, 25, 8],
            '6': [1.2432, 1.61616, 10, 25, 8],
            '7': [1.332, 1.7316, 10, 25, 8],
            '8': [1.4208, 1.84704, 10, 25, 8],
            '9': [1.5096, 1.96248, 10, 25, 8],
            '10': [1.5984, 2.07792, 10, 25, 8],
            '11': [1.6872, 2.19336, 10, 25, 8],
            '12': [1.776, 2.3088, 10, 25, 8],
            '13': [1.887, 2.4531, 10, 25, 8],
            '14': [1.998, 2.5974, 10, 25, 8],
            '15': [2.109, 2.7417, 10, 25, 8]}


def Fischl_Q(event: Event, inter) -> List[Event]:
    info = {'1': [2.08, 15, 60],
            '2': [2.236, 15, 60],
            '3': [2.392, 15, 60],
            '4': [2.6, 15, 60],
            '5': [2.756, 15, 60],
            '6': [2.912, 15, 60],
            '7': [3.12, 15, 60],
            '8': [3.328, 15, 60],
            '9': [3.536, 15, 60],
            '10': [3.744, 15, 60],
            '11': [3.952, 15, 60],
            '12': [4.16, 15, 60],
            '13': [4.42, 15, 60],
            '14': [4.68, 15, 60],
            '15': [4.94, 15, 60]}


def Bennett_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.44548, 0.42742, 0.5461, 0.59684, 0.71896, 0.559, 0.60716, 20, 0.639324, 1.278377, 1.596762],
            '2': [0.48174, 0.46221, 0.59055, 0.64542, 0.77748, 0.6045, 0.65658, 20, 0.691362, 1.382431, 1.726731],
            '3': [0.518, 0.497, 0.635, 0.694, 0.836, 0.65, 0.706, 20, 0.7434, 1.486485, 1.8567],
            '4': [0.5698, 0.5467, 0.6985, 0.7634, 0.9196, 0.715, 0.7766, 20, 0.81774, 1.635134, 2.04237],
            '5': [0.60606, 0.58149, 0.74295, 0.81198, 0.97812, 0.7605, 0.82602, 20, 0.869778, 1.739187, 2.172339],
            '6': [0.6475, 0.62125, 0.79375, 0.8675, 1.045, 0.8125, 0.8825, 20, 0.92925, 1.858106, 2.320875],
            '7': [0.70448, 0.67592, 0.8636, 0.94384, 1.13696, 0.884, 0.96016, 20, 1.011024, 2.02162, 2.525112],
            '8': [0.76146, 0.73059, 0.93345, 1.02018, 1.22892, 0.9555, 1.03782, 20, 1.092798, 2.185133, 2.729349],
            '9': [0.81844, 0.78526, 1.0033, 1.09652, 1.32088, 1.027, 1.11548, 20, 1.174572, 2.348646, 2.933586],
            '10': [0.8806, 0.8449, 1.0795, 1.1798, 1.4212, 1.105, 1.2002, 20, 1.26378, 2.527025, 3.15639],
            '11': [0.94276, 0.90454, 1.1557, 1.26308, 1.52152, 1.183, 1.28492, 20, 1.352988, 2.705403, 3.379194],
            '12': [1.00492, 0.96418, 1.2319, 1.34636, 1.62184, 1.261, 1.36964, 20, 1.442196, 2.883781, 3.601998],
            '13': [1.06708, 1.02382, 1.3081, 1.42964, 1.72216, 1.339, 1.45436, 20, 1.531404, 3.062159, 3.824802],
            '14': [1.12924, 1.08346, 1.3843, 1.51292, 1.82248, 1.417, 1.53908, 20, 1.620612, 3.240537, 4.047606],
            '15': [1.1914, 1.1431, 1.4605, 1.5962, 1.9228, 1.495, 1.6238, 20, 1.70982, 3.418915, 4.27041]}
    # 1, 2, 3, 4, 5, z.1, z.2, sta, p, lp, hp
    lv = str(inter.characters[event.source].attr.normatk_lv)
    keys = __dmg_keys+['damage_type', 'view']
    config = [['A1', 0, 12,      0, '班尼特:普攻:第1段', DamageType.NORMAL_ATK, True],
              ['A2', 1, 32-12,   0, '班尼特:普攻:第2段', DamageType.NORMAL_ATK, True],
              ['A3', 2, 63-32,   0, '班尼特:普攻:第3段', DamageType.NORMAL_ATK, True],
              ['A4', 3, 118-63,  0, '班尼特:普攻:第4段', DamageType.NORMAL_ATK, True],
              ['A5', 4, 167-118, 0, '班尼特:普攻:第5段', DamageType.NORMAL_ATK, True],
              ['Z',  6, 80,      0, '班尼特:重击',       DamageType.CHARGED_ATK, True],
              ['P',  8, 30,      0, '班尼特:下落期间', DamageType.PLUNGING_ATK, False],
              ['LP', 9, 30,      0, '班尼特:低空下落', DamageType.PLUNGING_ATK, True],
              ['HP', 10, 30,     0, '班尼特:低空下落', DamageType.PLUNGING_ATK, True]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.PHYSICAL, DamageType.NORMAL_ATK)


def Bennett_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.376, 0.84, 0.92, 0.88, 0.96, 1.32, 5, 7.5, 10],
            '2': [1.4792, 0.903, 0.989, 0.946, 1.032, 1.419, 5, 7.5, 10],
            '3': [1.5824, 0.966, 1.058, 1.012, 1.104, 1.518, 5, 7.5, 10],
            '4': [1.72, 1.05, 1.15, 1.1, 1.2, 1.65, 5, 7.5, 10],
            '5': [1.8232, 1.113, 1.219, 1.166, 1.272, 1.749, 5, 7.5, 10],
            '6': [1.9264, 1.176, 1.288, 1.232, 1.344, 1.848, 5, 7.5, 10],
            '7': [2.064, 1.26, 1.38, 1.32, 1.44, 1.98, 5, 7.5, 10],
            '8': [2.2016, 1.344, 1.472, 1.408, 1.536, 2.112, 5, 7.5, 10],
            '9': [2.3392, 1.428, 1.564, 1.496, 1.632, 2.244, 5, 7.5, 10],
            '10': [2.4768, 1.512, 1.656, 1.584, 1.728, 2.376, 5, 7.5, 10],
            '11': [2.6144, 1.596, 1.748, 1.672, 1.824, 2.508, 5, 7.5, 10],
            '12': [2.752, 1.68, 1.84, 1.76, 1.92, 2.64, 5, 7.5, 10],
            '13': [2.924, 1.785, 1.955, 1.87, 2.04, 2.805, 5, 7.5, 10],
            '14': [3.096, 1.89, 2.07, 1.98, 2.16, 2.97, 5, 7.5, 10],
            '15': [3.268, 1.995, 2.185, 2.09, 2.28, 3.135, 5, 7.5, 10]}
    # e0, e1.1, e1.2, e2.1, e2.2, e2.3, cd1, cd2, cd3
    lv = str(inter.characters[event.source].attr.elemskill_lv)
    keys = __dmg_keys+['view']
    config = [['E0',  0, 52,  5*60,  '班尼特:元素战技:点按', True],
              ['E1',  1, 112, 450,   '班尼特:元素战技:一段', True],
              ['E1',  2, 112, 450,   '班尼特:元素战技:一段', False],
              ['E2',  3, 112, 10*60, '班尼特:元素战技:二段', True],
              ['E2',  4, 197, 10*60, '班尼特:元素战技:二段', False],
              ['E2',  5, 197, 10*60, '班尼特:元素战技:爆炸', False]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.PYRO, DamageType.ELEM_SKILL)


def Bennett_Q(event: Event, inter) -> List[Event]:
    info = {'1': [2.328, 0.06, 577.3388, 0.56, 12, 15, 60],
            '2': [2.5026, 0.0645, 635.0807, 0.602, 12, 15, 60],
            '3': [2.6772, 0.069, 697.63446, 0.644, 12, 15, 60],
            '4': [2.91, 0.075, 765, 0.7, 12, 15, 60],
            '5': [3.0846, 0.0795, 837.17737, 0.742, 12, 15, 60],
            '6': [3.2592, 0.084, 914.16656, 0.784, 12, 15, 60],
            '7': [3.492, 0.09, 995.96765, 0.84, 12, 15, 60],
            '8': [3.7248, 0.096, 1082.5804, 0.896, 12, 15, 60],
            '9': [3.9576, 0.102, 1174.0051, 0.952, 12, 15, 60],
            '10': [4.1904, 0.108, 1270.2417, 1.008, 12, 15, 60],
            '11': [4.4232, 0.114, 1371.29, 1.064, 12, 15, 60],
            '12': [4.656, 0.12, 1477.1501, 1.12, 12, 15, 60],
            '13': [4.947, 0.1275, 1587.8221, 1.19, 12, 15, 60],
            '14': [5.238, 0.135, 1703.3059, 1.26, 12, 15, 60],
            '15': [5.529, 0.1425, 1823.6016, 1.33, 12, 15, 60]}
    # q, h, hf, buff, dur, cd, energy
    lv = str(inter.characters[event.source].attr.elemburst_lv)
    config = [['Q', 0, 51, 12*60, '班尼特:元素爆发']]
    mappings = [dict(zip(__dmg_keys, c)) for c in config]
    config2 = [['Q', 1, 2, 'stage', '班尼特:元素爆发']]
    mappings2 = [dict(zip(__heal_keys, c)) for c in config2]
    if event.type == EventType.DAMAGE:
        return _auto_generate_dmg(event, info, mappings, lv,
                                  ElementType.PYRO, DamageType.ELEM_BURST)
    elif event.type == EventType.HEALTH:
        return _auto_generate_heal(event, info, mappings2, lv,
                                   snapshot='Bennett->Q')


def Tartaglia_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.4128, 0.46268, 0.55384, 0.57018, 0.60888, 0.72756, 0.4386, 1.24, 0.124, 0.62, 0.639324, 1.278377, 1.596762, 10],
            '2': [0.4464, 0.50034, 0.59892, 0.61659, 0.65844, 0.78678, 0.4743, 1.333, 0.1333, 0.6665, 0.691362, 1.382431, 1.726731, 10],
            '3': [0.48, 0.538, 0.644, 0.663, 0.708, 0.846, 0.51, 1.426, 0.1426, 0.713, 0.7434, 1.486485, 1.8567, 10],
            '4': [0.528, 0.5918, 0.7084, 0.7293, 0.7788, 0.9306, 0.561, 1.55, 0.155, 0.775, 0.81774, 1.635134, 2.04237, 10],
            '5': [0.5616, 0.62946, 0.75348, 0.77571, 0.82836, 0.98982, 0.5967, 1.643, 0.1643, 0.8215, 0.869778, 1.739187, 2.172339, 10],
            '6': [0.6, 0.6725, 0.805, 0.82875, 0.885, 1.0575, 0.6375, 1.736, 0.1736, 0.868, 0.92925, 1.858106, 2.320875, 10],
            '7': [0.6528, 0.73168, 0.87584, 0.90168, 0.96288, 1.15056, 0.6936, 1.86, 0.186, 0.93, 1.011024, 2.02162, 2.525112, 10],
            '8': [0.7056, 0.79086, 0.94668, 0.97461, 1.04076, 1.24362, 0.7497, 1.984, 0.1984, 0.992, 1.092798, 2.185133, 2.729349, 10],
            '9': [0.7584, 0.85004, 1.01752, 1.04754, 1.11864, 1.33668, 0.8058, 2.108, 0.2108, 1.054, 1.174572, 2.348646, 2.933586, 10],
            '10': [0.816, 0.9146, 1.0948, 1.1271, 1.2036, 1.4382, 0.867, 2.232, 0.2232, 1.116, 1.26378, 2.527025, 3.15639, 10],
            '11': [0.8736, 0.97916, 1.17208, 1.20666, 1.28856, 1.53972, 0.9282, 2.356, 0.2356, 1.178, 1.352988, 2.705403, 3.379194, 10],
            '12': [0.9312, 1.04372, 1.24936, 1.28622, 1.37352, 1.64124, 0.9894, 2.48, 0.248, 1.24, 1.442196, 2.883781, 3.601998, 10],
            '13': [0.9888, 1.10828, 1.32664, 1.36578, 1.45848, 1.74276, 1.0506, 2.635, 0.2635, 1.3175, 1.531404, 3.062159, 3.824802, 10],
            '14': [1.0464, 1.17284, 1.40392, 1.44534, 1.54344, 1.84428, 1.1118, 2.79, 0.279, 1.395, 1.620612, 3.240537, 4.047606, 10],
            '15': [1.104, 1.2374, 1.4812, 1.5249, 1.6284, 1.9458, 1.173, 2.945, 0.2945, 1.4725, 1.70982, 3.418915, 4.27041, 10]}
    # 1, 2, 3, 4, 5, 6, R, Z, ASP1, ASP2, p, lp, hp, dur
    lv = str(inter.characters[event.source].attr.normatk_lv)
    keys = __dmg_keys+['damage_type', 'view']
    config = [['A1', 0,  17,      0, '达达利亚:普攻:第1段', DamageType.NORMAL_ATK, True],
              ['A2', 1,  30-17,   0, '达达利亚:普攻:第2段', DamageType.NORMAL_ATK, True],
              ['A3', 2,  64-30,   0, '达达利亚:普攻:第3段', DamageType.NORMAL_ATK, True],
              ['A4', 3,  101-64,  0, '达达利亚:普攻:第4段', DamageType.NORMAL_ATK, True],
              ['A5', 4,  123-101, 0, '达达利亚:普攻:第5段', DamageType.NORMAL_ATK, True],
              ['A6', 5,  162-123, 0, '达达利亚:普攻:第6段', DamageType.NORMAL_ATK, True],
              ['R',  6,  15,      0, '达达利亚:瞄准射击', DamageType.CHARGED_ATK, True],
              ['Z',  7,  86,      0, '达达利亚:重击',     DamageType.CHARGED_ATK, True],
              ['ASP1', 8, 0,      0, '达达利亚:断流闪',   DamageType.NORMAL_ATK, False],
              ['ASP2', 9, 0,      0, '达达利亚:断流破',   DamageType.NORMAL_ATK, False],
              ['P',  10, 30,      0, '达达利亚:下落期间', DamageType.PLUNGING_ATK, False],
              ['LP', 11, 30,      0, '达达利亚:低空下落', DamageType.PLUNGING_ATK, True],
              ['HP', 12, 30,      0, '达达利亚:低空下落', DamageType.PLUNGING_ATK, True]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.PHYSICAL, DamageType.NORMAL_ATK)


def Tartaglia_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.72, 0.38872, 0.41624, 0.5633, 0.59942, 0.55298, 0.35432, 0.37668, 0.602, 0.71982, 0.602, 20, 30, 6, 36, 45],
            '2': [0.774, 0.42036, 0.45012, 0.60915, 0.64821, 0.59799, 0.38316, 0.40734, 0.651, 0.77841, 0.651, 20, 30, 6, 36, 45],
            '3': [0.828, 0.452, 0.484, 0.655, 0.697, 0.643, 0.412, 0.438, 0.7, 0.837, 0.7, 20, 30, 6, 36, 45],
            '4': [0.9, 0.4972, 0.5324, 0.7205, 0.7667, 0.7073, 0.4532, 0.4818, 0.77, 0.9207, 0.77, 20, 30, 6, 36, 45],
            '5': [0.954, 0.52884, 0.56628, 0.76635, 0.81549, 0.75231, 0.48204, 0.51246, 0.819, 0.97929, 0.819, 20, 30, 6, 36, 45],
            '6': [1.008, 0.565, 0.605, 0.81875, 0.87125, 0.80375, 0.515, 0.5475, 0.875, 1.04625, 0.875, 20, 30, 6, 36, 45],
            '7': [1.08, 0.61472, 0.65824, 0.8908, 0.94792, 0.87448, 0.56032, 0.59568, 0.952, 1.13832, 0.952, 20, 30, 6, 36, 45],
            '8': [1.152, 0.66444, 0.71148, 0.96285, 1.02459, 0.94521, 0.60564, 0.64386, 1.029, 1.23039, 1.029, 20, 30, 6, 36, 45],
            '9': [1.224, 0.71416, 0.76472, 1.0349, 1.10126, 1.01594, 0.65096, 0.69204, 1.106, 1.32246, 1.106, 20, 30, 6, 36, 45],
            '10': [1.296, 0.7684, 0.8228, 1.1135, 1.1849, 1.0931, 0.7004, 0.7446, 1.19, 1.4229, 1.19, 20, 30, 6, 36, 45],
            '11': [1.368, 0.82264, 0.88088, 1.1921, 1.26854, 1.17026, 0.74984, 0.79716, 1.274, 1.52334, 1.274, 20, 30, 6, 36, 45],
            '12': [1.44, 0.87688, 0.93896, 1.2707, 1.35218, 1.24742, 0.79928, 0.84972, 1.358, 1.62378, 1.358, 20, 30, 6, 36, 45],
            '13': [1.53, 0.93112, 0.99704, 1.3493, 1.43582, 1.32458, 0.84872, 0.90228, 1.442, 1.72422, 1.442, 20, 30, 6, 36, 45],
            '14': [1.62, 0.98536, 1.05512, 1.4279, 1.51946, 1.40174, 0.89816, 0.95484, 1.526, 1.82466, 1.526, 20, 30, 6, 36, 45],
            '15': [1.71, 1.0396, 1.1132, 1.5065, 1.6031, 1.4789, 0.9476, 1.0074, 1.61, 1.9251, 1.61, 20, 30, 6, 36, 45]}
    # e, ea1, ea2, ea3, ea4, ea5, ea6.1, ea6.2, ez.1, ez.2, esp, sta, dur, cd1, cd2, cd3
    lv = str(inter.characters[event.source].attr.elemskill_lv)
    keys = __dmg_keys+['damage_type', 'view']
    config = [['E',   0,  28,   6*60, '达达利亚:元素战技', DamageType.ELEM_SKILL, True],
              ['EA1', 1,  7,       0, '达达利亚:魔王武装:第1段', DamageType.NORMAL_ATK, True],
              ['EA2', 2,  20-7,    0, '达达利亚:魔王武装:第2段', DamageType.NORMAL_ATK, True],
              ['EA3', 3,  48-20,   0, '达达利亚:魔王武装:第3段', DamageType.NORMAL_ATK, True],
              ['EA4', 4,  80-48,   0, '达达利亚:魔王武装:第4段', DamageType.NORMAL_ATK, True],
              ['EA5', 5,  116-80,  0, '达达利亚:魔王武装:第5段', DamageType.NORMAL_ATK, True],
              ['EA6', 6,  165-116, 0, '达达利亚:魔王武装:第6段', DamageType.NORMAL_ATK, True],
              ['EA6', 7,  143-116, 0, '达达利亚:魔王武装:第6段',
                  DamageType.NORMAL_ATK, False],
              ['EZ',  8,  73,      0, '达达利亚:魔王武装:重击',
                  DamageType.CHARGED_ATK, True],
              ['EZ',  9,  73,      0, '达达利亚:魔王武装:重击',
                  DamageType.CHARGED_ATK, False],
              ['ESP', 10, 0,       0, '达达利亚:断流斩', DamageType.ELEM_SKILL, False]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.HYDRO, DamageType.ELEM_SKILL)


def Tartaglia_Q(event: Event, inter) -> List[Event]:
    info = {'1': [4.64, 1.2, 3.784, 20, 15, 60],
            '2': [4.988, 1.29, 4.0678, 20, 15, 60],
            '3': [5.336, 1.38, 4.3516, 20, 15, 60],
            '4': [5.8, 1.5, 4.73, 20, 15, 60],
            '5': [6.148, 1.59, 5.0138, 20, 15, 60],
            '6': [6.496, 1.68, 5.2976, 20, 15, 60],
            '7': [6.96, 1.8, 5.676, 20, 15, 60],
            '8': [7.424, 1.92, 6.0544, 20, 15, 60],
            '9': [7.888, 2.04, 6.4328, 20, 15, 60],
            '10': [8.352, 2.16, 6.8112, 20, 15, 60],
            '11': [8.816, 2.28, 7.1896, 20, 15, 60],
            '12': [9.28, 2.4, 7.568, 20, 15, 60],
            '13': [9.86, 2.55, 8.041, 20, 15, 60],
            '14': [10.44, 2.7, 8.514, 20, 15, 60],
            '15': [11.02, 2.85, 8.987, 20, 15, 60]}
    # Q1, QSP, Q2, return, cd, energy
    lv = str(inter.characters[event.source].attr.elemburst_lv)
    keys = __dmg_keys+['view']
    config = [['Q1',  0, 52, 15*60, '达达利亚:元素爆发:近战', True],
              ['QSP', 1, 0,  0,     '达达利亚:断流爆', False],
              ['Q2',  2, 97, 15*60, '达达利亚:元素爆发:远程', True]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.HYDRO, DamageType.ELEM_BURST)


def Noelle_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.7912, 0.73358, 0.86258, 1.13434, 0.5074, 0.90472, 40, 5, 0.745878, 1.49144, 1.862889],
            '2': [0.8556, 0.79329, 0.93279, 1.22667, 0.5487, 0.97836, 40, 5, 0.806589, 1.612836, 2.01452],
            '3': [0.92, 0.853, 1.003, 1.319, 0.59, 1.052, 40, 5, 0.8673, 1.734233, 2.16615],
            '4': [1.012, 0.9383, 1.1033, 1.4509, 0.649, 1.1572, 40, 5, 0.95403, 1.907656, 2.382765],
            '5': [1.0764, 0.99801, 1.17351, 1.54323, 0.6903, 1.23084, 40, 5, 1.014741, 2.029052, 2.534396],
            '6': [1.15, 1.06625, 1.25375, 1.64875, 0.7375, 1.315, 40, 5, 1.084125, 2.167791, 2.707688],
            '7': [1.2512, 1.16008, 1.36408, 1.79384, 0.8024, 1.43072, 40, 5, 1.179528, 2.358556, 2.945964],
            '8': [1.3524, 1.25391, 1.47441, 1.93893, 0.8673, 1.54644, 40, 5, 1.274931, 2.549322, 3.184241],
            '9': [1.4536, 1.34774, 1.58474, 2.08402, 0.9322, 1.66216, 40, 5, 1.370334, 2.740087, 3.422517],
            '10': [1.564, 1.4501, 1.7051, 2.2423, 1.003, 1.7884, 40, 5, 1.47441, 2.948195, 3.682455],
            '11': [1.6744, 1.55246, 1.82546, 2.40058, 1.0738, 1.91464, 40, 5, 1.578486, 3.156303, 3.942393],
            '12': [1.7848, 1.65482, 1.94582, 2.55886, 1.1446, 2.04088, 40, 5, 1.682562, 3.364411, 4.202331],
            '13': [1.8952, 1.75718, 2.06618, 2.71714, 1.2154, 2.16712, 40, 5, 1.786638, 3.572519, 4.462269],
            '14': [2.0056, 1.85954, 2.18654, 2.87542, 1.2862, 2.29336, 40, 5, 1.890714, 3.780627, 4.722207],
            '15': [2.116, 1.9619, 2.3069, 3.0337, 1.357, 2.4196, 40, 5, 1.99479, 3.988735, 4.982145]}


def Noelle_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.6, 0.2128, 0.5, 12, 24, 1.2, 769.7851, 102.71802],
            '2': [1.72, 0.22876, 0.51, 12, 24, 1.29, 846.7743, 112.99125],
            '3': [1.84, 0.24472, 0.52, 12, 24, 1.38, 930.17926, 124.120575],
            '4': [2, 0.266, 0.53, 12, 24, 1.5, 1020, 136.10602],
            '5': [2.12, 0.28196, 0.54, 12, 24, 1.59, 1116.2365, 148.94756],
            '6': [2.24, 0.29792, 0.55, 12, 24, 1.68, 1218.8888, 162.64519],
            '7': [2.4, 0.3192, 0.56, 12, 24, 1.8, 1327.9568, 177.19893],
            '8': [2.56, 0.34048, 0.57, 12, 24, 1.92, 1443.4407, 192.60878],
            '9': [2.72, 0.36176, 0.58, 12, 24, 2.04, 1565.3402, 208.87473],
            '10': [2.88, 0.38304, 0.59, 12, 24, 2.16, 1693.6555, 225.99677],
            '11': [3.04, 0.40432, 0.59, 12, 24, 2.28, 1828.3867, 243.97491],
            '12': [3.2, 0.4256, 0.6, 12, 24, 2.4, 1969.5336, 262.80917],
            '13': [3.4, 0.4522, 0.6, 12, 24, 2.55, 2117.0962, 282.49954],
            '14': [3.6, 0.4788, 0.6, 12, 24, 2.7, 2271.0747, 303.046],
            '15': [3.8, 0.5054, 0.6, 12, 24, 2.85, 2431.4688, 324.44855]}


def Noelle_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.672, 0.928, 0.4, 15, 15, 60],
            '2': [0.7224, 0.9976, 0.43, 15, 15, 60],
            '3': [0.7728, 1.0672, 0.46, 15, 15, 60],
            '4': [0.84, 1.16, 0.5, 15, 15, 60],
            '5': [0.8904, 1.2296, 0.53, 15, 15, 60],
            '6': [0.9408, 1.2992, 0.56, 15, 15, 60],
            '7': [1.008, 1.392, 0.6, 15, 15, 60],
            '8': [1.0752, 1.4848, 0.64, 15, 15, 60],
            '9': [1.1424, 1.5776, 0.68, 15, 15, 60],
            '10': [1.2096, 1.6704, 0.72, 15, 15, 60],
            '11': [1.2768, 1.7632, 0.76, 15, 15, 60],
            '12': [1.344, 1.856, 0.8, 15, 15, 60],
            '13': [1.428, 1.972, 0.85, 15, 15, 60],
            '14': [1.512, 2.088, 0.9, 15, 15, 60],
            '15': [1.596, 2.204, 0.95, 15, 15, 60]}


def Qiqi_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.37754, 0.38872, 0.24166, 0.24682, 0.63038, 0.64328, 20, 0.639324, 1.278377, 1.596762],
            '2': [0.40827, 0.42036, 0.26133, 0.26691, 0.68169, 0.69564, 20, 0.691362, 1.382431, 1.726731],
            '3': [0.439, 0.452, 0.281, 0.287, 0.733, 0.748, 20, 0.7434, 1.486485, 1.8567],
            '4': [0.4829, 0.4972, 0.3091, 0.3157, 0.8063, 0.8228, 20, 0.81774, 1.635134, 2.04237],
            '5': [0.51363, 0.52884, 0.32877, 0.33579, 0.85761, 0.87516, 20, 0.869778, 1.739187, 2.172339],
            '6': [0.54875, 0.565, 0.35125, 0.35875, 0.91625, 0.935, 20, 0.92925, 1.858106, 2.320875],
            '7': [0.59704, 0.61472, 0.38216, 0.39032, 0.99688, 1.01728, 20, 1.011024, 2.02162, 2.525112],
            '8': [0.64533, 0.66444, 0.41307, 0.42189, 1.07751, 1.09956, 20, 1.092798, 2.185133, 2.729349],
            '9': [0.69362, 0.71416, 0.44398, 0.45346, 1.15814, 1.18184, 20, 1.174572, 2.348646, 2.933586],
            '10': [0.7463, 0.7684, 0.4777, 0.4879, 1.2461, 1.2716, 20, 1.26378, 2.527025, 3.15639],
            '11': [0.79898, 0.82264, 0.51142, 0.52234, 1.33406, 1.36136, 20, 1.352988, 2.705403, 3.379194],
            '12': [0.85166, 0.87688, 0.54514, 0.55678, 1.42202, 1.45112, 20, 1.442196, 2.883781, 3.601998],
            '13': [0.90434, 0.93112, 0.57886, 0.59122, 1.50998, 1.54088, 20, 1.531404, 3.062159, 3.824802],
            '14': [0.95702, 0.98536, 0.61258, 0.62566, 1.59794, 1.63064, 20, 1.620612, 3.240537, 4.047606],
            '15': [1.0097, 1.0396, 0.6463, 0.6601, 1.6859, 1.7204, 20, 1.70982, 3.418915, 4.27041]}


def Qiqi_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.1056, 67.40786, 0.696, 450.5507, 0.36, 15, 30, 0.96],
            '2': [0.11352, 74.149574, 0.7482, 495.612, 0.387, 15, 30, 1.032],
            '3': [0.12144, 81.45311, 0.8004, 544.42847, 0.414, 15, 30, 1.104],
            '4': [0.132, 89.31845, 0.87, 597, 0.45, 15, 30, 1.2],
            '5': [0.13992, 97.745605, 0.9222, 653.32666, 0.477, 15, 30, 1.272],
            '6': [0.14784, 106.73457, 0.9744, 713.40845, 0.504, 15, 30, 1.344],
            '7': [0.1584, 116.28535, 1.044, 777.2453, 0.54, 15, 30, 1.44],
            '8': [0.16896, 126.39793, 1.1136, 844.83734, 0.576, 15, 30, 1.536],
            '9': [0.17952, 137.07233, 1.1832, 916.18445, 0.612, 15, 30, 1.632],
            '10': [0.19008, 148.30853, 1.2528, 991.2866, 0.648, 15, 30, 1.728],
            '11': [0.20064, 160.10654, 1.3224, 1070.1439, 0.684, 15, 30, 1.824],
            '12': [0.2112, 172.46637, 1.392, 1152.7563, 0.72, 15, 30, 1.92],
            '13': [0.2244, 185.388, 1.479, 1239.1239, 0.765, 15, 30, 2.04],
            '14': [0.2376, 198.87144, 1.566, 1329.2466, 0.81, 15, 30, 2.16],
            '15': [0.2508, 212.9167, 1.653, 1423.1244, 0.855, 15, 30, 2.28]}


def Qiqi_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.9, 577.3388, 2.848, 15, 20, 80],
            '2': [0.9675, 635.0807, 3.0616, 15, 20, 80],
            '3': [1.035, 697.63446, 3.2752, 15, 20, 80],
            '4': [1.125, 765, 3.56, 15, 20, 80],
            '5': [1.1925, 837.17737, 3.7736, 15, 20, 80],
            '6': [1.26, 914.16656, 3.9872, 15, 20, 80],
            '7': [1.35, 995.96765, 4.272, 15, 20, 80],
            '8': [1.44, 1082.5804, 4.5568, 15, 20, 80],
            '9': [1.53, 1174.0051, 4.8416, 15, 20, 80],
            '10': [1.62, 1270.2417, 5.1264, 15, 20, 80],
            '11': [1.71, 1371.29, 5.4112, 15, 20, 80],
            '12': [1.8, 1477.1501, 5.696, 15, 20, 80],
            '13': [1.9125, 1587.8221, 6.052, 15, 20, 80],
            '14': [2.025, 1703.3059, 6.408, 15, 20, 80],
            '15': [2.1375, 1823.6016, 6.764, 15, 20, 80]}


def Chongyun_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.70004, 0.63124, 0.80324, 1.01222, 0.562853, 1.01781, 40, 5, 0.745878, 1.49144, 1.862889],
            '2': [0.75702, 0.68262, 0.86862, 1.09461, 0.608666, 1.100655, 40, 5, 0.806589, 1.612836, 2.01452],
            '3': [0.814, 0.734, 0.934, 1.177, 0.65448, 1.1835, 40, 5, 0.8673, 1.734233, 2.16615],
            '4': [0.8954, 0.8074, 1.0274, 1.2947, 0.719928, 1.30185, 40, 5, 0.95403, 1.907656, 2.382765],
            '5': [0.95238, 0.85878, 1.09278, 1.37709, 0.765742, 1.384695, 40, 5, 1.014741, 2.029052, 2.534396],
            '6': [1.0175, 0.9175, 1.1675, 1.47125, 0.8181, 1.479375, 40, 5, 1.084125, 2.167791, 2.707688],
            '7': [1.10704, 0.99824, 1.27024, 1.60072, 0.890093, 1.60956, 40, 5, 1.179528, 2.358556, 2.945964],
            '8': [1.19658, 1.07898, 1.37298, 1.73019, 0.962086, 1.739745, 40, 5, 1.274931, 2.549322, 3.184241],
            '9': [1.28612, 1.15972, 1.47572, 1.85966, 1.034078, 1.86993, 40, 5, 1.370334, 2.740087, 3.422517],
            '10': [1.3838, 1.2478, 1.5878, 2.0009, 1.112616, 2.01195, 40, 5, 1.47441, 2.948195, 3.682455],
            '11': [1.48148, 1.33588, 1.69988, 2.14214, 1.191154, 2.15397, 40, 5, 1.578486, 3.156303, 3.942393],
            '12': [1.57916, 1.42396, 1.81196, 2.28338, 1.269691, 2.29599, 40, 5, 1.682562, 3.364411, 4.202331],
            '13': [1.67684, 1.51204, 1.92404, 2.42462, 1.348229, 2.43801, 40, 5, 1.786638, 3.572519, 4.462269],
            '14': [1.77452, 1.60012, 2.03612, 2.56586, 1.426766, 2.58003, 40, 5, 1.890714, 3.780627, 4.722207],
            '15': [1.8722, 1.6882, 2.1482, 2.7071, 1.505304, 2.72205, 40, 5, 1.99479, 3.988735, 4.982145]}


def Chongyun_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.7204, 2, 15, 10],
            '2': [1.84943, 2.1, 15, 10],
            '3': [1.97846, 2.2, 15, 10],
            '4': [2.1505, 2.3, 15, 10],
            '5': [2.27953, 2.4, 15, 10],
            '6': [2.40856, 2.5, 15, 10],
            '7': [2.5806, 2.6, 15, 10],
            '8': [2.75264, 2.7, 15, 10],
            '9': [2.92468, 2.8, 15, 10],
            '10': [3.09672, 2.9, 15, 10],
            '11': [3.26876, 3, 15, 10],
            '12': [3.4408, 3, 15, 10],
            '13': [3.65585, 3, 15, 10],
            '14': [3.8709, 3, 15, 10],
            '15': [4.08595, 3, 15, 10]}


def Chongyun_Q(event: Event, inter) -> List[Event]:
    info = {'1': [1.424, 12, 40],
            '2': [1.5308, 12, 40],
            '3': [1.6376, 12, 40],
            '4': [1.78, 12, 40],
            '5': [1.8868, 12, 40],
            '6': [1.9936, 12, 40],
            '7': [2.136, 12, 40],
            '8': [2.2784, 12, 40],
            '9': [2.4208, 12, 40],
            '10': [2.5632, 12, 40],
            '11': [2.7056, 12, 40],
            '12': [2.848, 12, 40],
            '13': [3.026, 12, 40],
            '14': [3.204, 12, 40],
            '15': [3.382, 12, 40]}


def Ganyu_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.31734, 0.35604, 0.45494, 0.45494, 0.48246, 0.5762, 0.4386, 1.24, 1.28, 2.176, 0.568288, 1.136335, 1.419344],
            '2': [0.34317, 0.38502, 0.49197, 0.49197, 0.52173, 0.6231, 0.4743, 1.333, 1.376, 2.3392, 0.614544, 1.228828, 1.534872],
            '3': [0.369, 0.414, 0.529, 0.529, 0.561, 0.67, 0.51, 1.426, 1.472, 2.5024, 0.6608, 1.32132, 1.6504],
            '4': [0.4059, 0.4554, 0.5819, 0.5819, 0.6171, 0.737, 0.561, 1.55, 1.6, 2.72, 0.72688, 1.453452, 1.81544],
            '5': [0.43173, 0.48438, 0.61893, 0.61893, 0.65637, 0.7839, 0.5967, 1.643, 1.696, 2.8832, 0.773136, 1.545944, 1.930968],
            '6': [0.46125, 0.5175, 0.66125, 0.66125, 0.70125, 0.8375, 0.6375, 1.736, 1.792, 3.0464, 0.826, 1.65165, 2.063],
            '7': [0.50184, 0.56304, 0.71944, 0.71944, 0.76296, 0.9112, 0.6936, 1.86, 1.92, 3.264, 0.898688, 1.796995, 2.244544],
            '8': [0.54243, 0.60858, 0.77763, 0.77763, 0.82467, 0.9849, 0.7497, 1.984, 2.048, 3.4816, 0.971376, 1.94234, 2.426088],
            '9': [0.58302, 0.65412, 0.83582, 0.83582, 0.88638, 1.0586, 0.8058, 2.108, 2.176, 3.6992, 1.044064, 2.087686, 2.607632],
            '10': [0.6273, 0.7038, 0.8993, 0.8993, 0.9537, 1.139, 0.867, 2.232, 2.304, 3.9168, 1.12336, 2.246244, 2.80568],
            '11': [0.678037, 0.760725, 0.972038, 0.972038, 1.030838, 1.231125, 0.9282, 2.356, 2.432, 4.1344, 1.202656, 2.404802, 3.003728],
            '12': [0.737705, 0.827669, 1.057577, 1.057577, 1.121551, 1.339464, 0.9894, 2.48, 2.56, 4.352, 1.281952, 2.563361, 3.201776],
            '13': [0.797372, 0.894613, 1.143116, 1.143116, 1.212265, 1.447803, 1.0506, 2.635, 2.72, 4.624, 1.361248, 2.721919, 3.399824],
            '14': [0.857039, 0.961556, 1.228655, 1.228655, 1.302979, 1.556142, 1.1118, 2.79, 2.88, 4.896, 1.440544, 2.880478, 3.597872],
            '15': [0.922131, 1.034586, 1.321971, 1.321971, 1.401939, 1.67433, 1.173, 2.945, 3.04, 5.168, 1.51984, 3.039036, 3.79592]}


def Ganyu_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.2, 1.32, 6, 10],
            '2': [1.29, 1.419, 6, 10],
            '3': [1.38, 1.518, 6, 10],
            '4': [1.5, 1.65, 6, 10],
            '5': [1.59, 1.749, 6, 10],
            '6': [1.68, 1.848, 6, 10],
            '7': [1.8, 1.98, 6, 10],
            '8': [1.92, 2.112, 6, 10],
            '9': [2.04, 2.244, 6, 10],
            '10': [2.16, 2.376, 6, 10],
            '11': [2.28, 2.508, 6, 10],
            '12': [2.4, 2.64, 6, 10],
            '13': [2.55, 2.805, 6, 10],
            '14': [2.7, 2.97, 6, 10],
            '15': [2.85, 3.135, 6, 10]}


def Ganyu_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.70272, 15, 15, 60],
            '2': [0.755424, 15, 15, 60],
            '3': [0.808128, 15, 15, 60],
            '4': [0.8784, 15, 15, 60],
            '5': [0.931104, 15, 15, 60],
            '6': [0.983808, 15, 15, 60],
            '7': [1.05408, 15, 15, 60],
            '8': [1.124352, 15, 15, 60],
            '9': [1.194624, 15, 15, 60],
            '10': [1.264896, 15, 15, 60],
            '11': [1.335168, 15, 15, 60],
            '12': [1.40544, 15, 15, 60],
            '13': [1.49328, 15, 15, 60],
            '14': [1.58112, 15, 15, 60],
            '15': [1.66896, 15, 15, 60]}


def Albedo_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.367392, 0.367392, 0.474548, 0.49751, 0.620739, 0.473, 0.602, 20, 0.639324, 1.278377, 1.596762],
            '2': [0.397296, 0.397296, 0.513174, 0.538005, 0.671265, 0.5115, 0.651, 20, 0.691362, 1.382431, 1.726731],
            '3': [0.4272, 0.4272, 0.5518, 0.5785, 0.72179, 0.55, 0.7, 20, 0.7434, 1.486485, 1.8567],
            '4': [0.46992, 0.46992, 0.60698, 0.63635, 0.793969, 0.605, 0.77, 20, 0.81774, 1.635134, 2.04237],
            '5': [0.499824, 0.499824, 0.645606, 0.676845, 0.844494, 0.6435, 0.819, 20, 0.869778, 1.739187, 2.172339],
            '6': [0.534, 0.534, 0.68975, 0.723125, 0.902238, 0.6875, 0.875, 20, 0.92925, 1.858106, 2.320875],
            '7': [0.580992, 0.580992, 0.750448, 0.78676, 0.981634, 0.748, 0.952, 20, 1.011024, 2.02162, 2.525112],
            '8': [0.627984, 0.627984, 0.811146, 0.850395, 1.061031, 0.8085, 1.029, 20, 1.092798, 2.185133, 2.729349],
            '9': [0.674976, 0.674976, 0.871844, 0.91403, 1.140428, 0.869, 1.106, 20, 1.174572, 2.348646, 2.933586],
            '10': [0.72624, 0.72624, 0.93806, 0.98345, 1.227043, 0.935, 1.19, 20, 1.26378, 2.527025, 3.15639],
            '11': [0.78498, 0.78498, 1.013932, 1.062994, 1.326289, 1.010625, 1.28625, 20, 1.352988, 2.705403, 3.379194],
            '12': [0.854058, 0.854058, 1.103159, 1.156537, 1.443003, 1.09956, 1.39944, 20, 1.442196, 2.883781, 3.601998],
            '13': [0.923136, 0.923136, 1.192385, 1.250081, 1.559716, 1.188495, 1.51263, 20, 1.531404, 3.062159, 3.824802],
            '14': [0.992215, 0.992215, 1.281611, 1.343624, 1.676429, 1.27743, 1.62582, 20, 1.620612, 3.240537, 4.047606],
            '15': [1.067573, 1.067573, 1.378948, 1.445671, 1.803753, 1.37445, 1.7493, 20, 1.70982, 3.418915, 4.27041]}


def Albedo_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.304, 1.336, 30, 4],
            '2': [1.4018, 1.4362, 30, 4],
            '3': [1.4996, 1.5364, 30, 4],
            '4': [1.63, 1.67, 30, 4],
            '5': [1.7278, 1.7702, 30, 4],
            '6': [1.8256, 1.8704, 30, 4],
            '7': [1.956, 2.004, 30, 4],
            '8': [2.0864, 2.1376, 30, 4],
            '9': [2.2168, 2.2712, 30, 4],
            '10': [2.3472, 2.4048, 30, 4],
            '11': [2.4776, 2.5384, 30, 4],
            '12': [2.608, 2.672, 30, 4],
            '13': [2.771, 2.839, 30, 4],
            '14': [2.934, 3.006, 30, 4],
            '15': [3.097, 3.173, 30, 4]}


def Albedo_Q(event: Event, inter) -> List[Event]:
    info = {'1': [3.672, 0.72, 12, 40],
            '2': [3.9474, 0.774, 12, 40],
            '3': [4.2228, 0.828, 12, 40],
            '4': [4.59, 0.9, 12, 40],
            '5': [4.8654, 0.954, 12, 40],
            '6': [5.1408, 1.008, 12, 40],
            '7': [5.508, 1.08, 12, 40],
            '8': [5.8752, 1.152, 12, 40],
            '9': [6.2424, 1.224, 12, 40],
            '10': [6.6096, 1.296, 12, 40],
            '11': [6.9768, 1.368, 12, 40],
            '12': [7.344, 1.44, 12, 40],
            '13': [7.803, 1.53, 12, 40],
            '14': [8.262, 1.62, 12, 40],
            '15': [8.721, 1.71, 12, 40]}


def Diona_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.3612, 0.3354, 0.4558, 0.43, 0.5375, 0.4386, 1.24, 0.568288, 1.136335, 1.419344],
            '2': [0.3906, 0.3627, 0.4929, 0.465, 0.58125, 0.4743, 1.333, 0.614544, 1.228828, 1.534872],
            '3': [0.42, 0.39, 0.53, 0.5, 0.625, 0.51, 1.426, 0.6608, 1.32132, 1.6504],
            '4': [0.462, 0.429, 0.583, 0.55, 0.6875, 0.561, 1.55, 0.72688, 1.453452, 1.81544],
            '5': [0.4914, 0.4563, 0.6201, 0.585, 0.73125, 0.5967, 1.643, 0.773136, 1.545944, 1.930968],
            '6': [0.525, 0.4875, 0.6625, 0.625, 0.78125, 0.6375, 1.736, 0.826, 1.65165, 2.063],
            '7': [0.5712, 0.5304, 0.7208, 0.68, 0.85, 0.6936, 1.86, 0.898688, 1.796995, 2.244544],
            '8': [0.6174, 0.5733, 0.7791, 0.735, 0.91875, 0.7497, 1.984, 0.971376, 1.94234, 2.426088],
            '9': [0.6636, 0.6162, 0.8374, 0.79, 0.9875, 0.8058, 2.108, 1.044064, 2.087686, 2.607632],
            '10': [0.714, 0.663, 0.901, 0.85, 1.0625, 0.867, 2.232, 1.12336, 2.246244, 2.80568],
            '11': [0.77175, 0.716625, 0.973875, 0.91875, 1.148438, 0.937125, 2.36096, 1.202656, 2.404802, 3.003728],
            '12': [0.839664, 0.779688, 1.059576, 0.9996, 1.2495, 1.019592, 2.5296, 1.281952, 2.563361, 3.201776],
            '13': [0.907578, 0.842751, 1.145277, 1.08045, 1.350562, 1.102059, 2.69824, 1.361248, 2.721919, 3.399824],
            '14': [0.975492, 0.905814, 1.230978, 1.1613, 1.451625, 1.184526, 2.86688, 1.440544, 2.880478, 3.597872],
            '15': [1.04958, 0.97461, 1.32447, 1.2495, 1.561875, 1.27449, 3.03552, 1.51984, 3.039036, 3.79592]}


def Diona_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.4192, 0.072, 692.8066, 6, 15, 1.8],
            '2': [0.45064, 0.0774, 762.09686, 6, 15, 1.9],
            '3': [0.48208, 0.0828, 837.1613, 6, 15, 2],
            '4': [0.524, 0.09, 918, 6, 15, 2.1],
            '5': [0.55544, 0.0954, 1004.61285, 6, 15, 2.2],
            '6': [0.58688, 0.1008, 1096.9999, 6, 15, 2.3],
            '7': [0.6288, 0.108, 1195.1611, 6, 15, 2.4],
            '8': [0.67072, 0.1152, 1299.0966, 6, 15, 2.4],
            '9': [0.71264, 0.1224, 1408.8062, 6, 15, 2.4],
            '10': [0.75456, 0.1296, 1524.29, 6, 15, 2.4],
            '11': [0.79648, 0.1368, 1645.548, 6, 15, 2.4],
            '12': [0.8384, 0.144, 1772.5802, 6, 15, 2.4],
            '13': [0.8908, 0.153, 1905.3866, 6, 15, 2.4],
            '14': [0.9432, 0.162, 2043.9672, 6, 15, 2.4],
            '15': [0.9956, 0.171, 2188.322, 6, 15, 2.4]}


def Diona_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.8, 0.5264, 0.05336, 513.19006, 20, 80, 12],
            '2': [0.86, 0.56588, 0.057362, 564.5162, 20, 80, 12],
            '3': [0.92, 0.60536, 0.061364, 620.1195, 20, 80, 12],
            '4': [1, 0.658, 0.0667, 680, 20, 80, 12],
            '5': [1.06, 0.69748, 0.070702, 744.15765, 20, 80, 12],
            '6': [1.12, 0.73696, 0.074704, 812.5925, 20, 80, 12],
            '7': [1.2, 0.7896, 0.08004, 885.30457, 20, 80, 12],
            '8': [1.28, 0.84224, 0.085376, 962.29376, 20, 80, 12],
            '9': [1.36, 0.89488, 0.090712, 1043.5602, 20, 80, 12],
            '10': [1.44, 0.94752, 0.096048, 1129.1038, 20, 80, 12],
            '11': [1.52, 1.00016, 0.101384, 1218.9244, 20, 80, 12],
            '12': [1.6, 1.0528, 0.10672, 1313.0223, 20, 80, 12],
            '13': [1.7, 1.1186, 0.11339, 1411.3975, 20, 80, 12],
            '14': [1.8, 1.1844, 0.12006, 1514.0498, 20, 80, 12],
            '15': [1.9, 1.2502, 0.12673, 1620.9792, 20, 80, 12]}


def Mona_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.376, 0.36, 0.448, 0.5616, 1.4972, 50, 0.568288, 1.136335, 1.419344],
            '2': [0.4042, 0.387, 0.4816, 0.60372, 1.60949, 50, 0.614544, 1.228828, 1.534872],
            '3': [0.4324, 0.414, 0.5152, 0.64584, 1.72178, 50, 0.6608, 1.32132, 1.6504],
            '4': [0.47, 0.45, 0.56, 0.702, 1.8715, 50, 0.72688, 1.453452, 1.81544],
            '5': [0.4982, 0.477, 0.5936, 0.74412, 1.98379, 50, 0.773136, 1.545944, 1.930968],
            '6': [0.5264, 0.504, 0.6272, 0.78624, 2.09608, 50, 0.826, 1.65165, 2.063],
            '7': [0.564, 0.54, 0.672, 0.8424, 2.2458, 50, 0.898688, 1.796995, 2.244544],
            '8': [0.6016, 0.576, 0.7168, 0.89856, 2.39552, 50, 0.971376, 1.94234, 2.426088],
            '9': [0.6392, 0.612, 0.7616, 0.95472, 2.54524, 50, 1.044064, 2.087686, 2.607632],
            '10': [0.6768, 0.648, 0.8064, 1.01088, 2.69496, 50, 1.12336, 2.246244, 2.80568],
            '11': [0.7144, 0.684, 0.8512, 1.06704, 2.850669, 50, 1.202656, 2.404802, 3.003728],
            '12': [0.752, 0.72, 0.896, 1.1232, 3.054288, 50, 1.281952, 2.563361, 3.201776],
            '13': [0.799, 0.765, 0.952, 1.1934, 3.257907, 50, 1.361248, 2.721919, 3.399824],
            '14': [0.846, 0.81, 1.008, 1.2636, 3.461526, 50, 1.440544, 2.880478, 3.597872],
            '15': [0.893, 0.855, 1.064, 1.3338, 3.665146, 50, 1.51984, 3.039036, 3.79592]}


def Mona_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.32, 1.328, 12],
            '2': [0.344, 1.4276, 12],
            '3': [0.368, 1.5272, 12],
            '4': [0.4, 1.66, 12],
            '5': [0.424, 1.7596, 12],
            '6': [0.448, 1.8592, 12],
            '7': [0.48, 1.992, 12],
            '8': [0.512, 2.1248, 12],
            '9': [0.544, 2.2576, 12],
            '10': [0.576, 2.3904, 12],
            '11': [0.608, 2.5232, 12],
            '12': [0.64, 2.656, 12],
            '13': [0.68, 2.822, 12],
            '14': [0.72, 2.988, 12],
            '15': [0.76, 3.154, 12]}


def Mona_Q(event: Event, inter) -> List[Event]:
    info = {'1': [8, 4.424, -0.42, 4, 15, 60, 0.42],
            '2': [8, 4.7558, -0.44, 4, 15, 60, 0.44],
            '3': [8, 5.0876, -0.46, 4, 15, 60, 0.46],
            '4': [8, 5.53, -0.48, 4.5, 15, 60, 0.48],
            '5': [8, 5.8618, -0.5, 4.5, 15, 60, 0.5],
            '6': [8, 6.1936, -0.52, 4.5, 15, 60, 0.52],
            '7': [8, 6.636, -0.54, 5, 15, 60, 0.54],
            '8': [8, 7.0784, -0.56, 5, 15, 60, 0.56],
            '9': [8, 7.5208, -0.58, 5, 15, 60, 0.58],
            '10': [8, 7.9632, -0.6, 5, 15, 60, 0.6],
            '11': [8, 8.4056, -0.6, 5, 15, 60, 0.6],
            '12': [8, 8.848, -0.6, 5, 15, 60, 0.6],
            '13': [8, 9.401, -0.6, 5, 15, 60, 0.6],
            '14': [8, 9.954, -0.6, 5, 15, 60, 0.6],
            '15': [8, 10.507, -0.6, 5, 15, 60, 0.6]}


def Mona_sp(event: Event, inter) -> List[Event]:
    info = [10, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]


def Keqing_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.41022, 0.41022, 0.54438, 0.31476, 0.344, 0.66994, 0.76798, 0.86, 25, 0.639324, 1.278377, 1.596762],
            '2': [0.44361, 0.44361, 0.58869, 0.34038, 0.372, 0.72447, 0.83049, 0.93, 25, 0.691362, 1.382431, 1.726731],
            '3': [0.477, 0.477, 0.633, 0.366, 0.4, 0.779, 0.893, 1, 25, 0.7434, 1.486485, 1.8567],
            '4': [0.5247, 0.5247, 0.6963, 0.4026, 0.44, 0.8569, 0.9823, 1.1, 25, 0.81774, 1.635134, 2.04237],
            '5': [0.55809, 0.55809, 0.74061, 0.42822, 0.468, 0.91143, 1.04481, 1.17, 25, 0.869778, 1.739187, 2.172339],
            '6': [0.59625, 0.59625, 0.79125, 0.4575, 0.5, 0.97375, 1.11625, 1.25, 25, 0.92925, 1.858106, 2.320875],
            '7': [0.64872, 0.64872, 0.86088, 0.49776, 0.544, 1.05944, 1.21448, 1.36, 25, 1.011024, 2.02162, 2.525112],
            '8': [0.70119, 0.70119, 0.93051, 0.53802, 0.588, 1.14513, 1.31271, 1.47, 25, 1.092798, 2.185133, 2.729349],
            '9': [0.75366, 0.75366, 1.00014, 0.57828, 0.632, 1.23082, 1.41094, 1.58, 25, 1.174572, 2.348646, 2.933586],
            '10': [0.8109, 0.8109, 1.0761, 0.6222, 0.68, 1.3243, 1.5181, 1.7, 25, 1.26378, 2.527025, 3.15639],
            '11': [0.86814, 0.86814, 1.15206, 0.66612, 0.728, 1.41778, 1.62526, 1.82, 25, 1.352988, 2.705403, 3.379194],
            '12': [0.92538, 0.92538, 1.22802, 0.71004, 0.776, 1.51126, 1.73242, 1.94, 25, 1.442196, 2.883781, 3.601998],
            '13': [0.98262, 0.98262, 1.30398, 0.75396, 0.824, 1.60474, 1.83958, 2.06, 25, 1.531404, 3.062159, 3.824802],
            '14': [1.03986, 1.03986, 1.37994, 0.79788, 0.872, 1.69822, 1.94674, 2.18, 25, 1.620612, 3.240537, 4.047606],
            '15': [1.0971, 1.0971, 1.4559, 0.8418, 0.92, 1.7917, 2.0539, 2.3, 25, 1.70982, 3.418915, 4.27041]}


def Keqing_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.504, 1.68, 0.84, 7.5],
            '2': [0.5418, 1.806, 0.903, 7.5],
            '3': [0.5796, 1.932, 0.966, 7.5],
            '4': [0.63, 2.1, 1.05, 7.5],
            '5': [0.6678, 2.226, 1.113, 7.5],
            '6': [0.7056, 2.352, 1.176, 7.5],
            '7': [0.756, 2.52, 1.26, 7.5],
            '8': [0.8064, 2.688, 1.344, 7.5],
            '9': [0.8568, 2.856, 1.428, 7.5],
            '10': [0.9072, 3.024, 1.512, 7.5],
            '11': [0.9576, 3.192, 1.596, 7.5],
            '12': [1.008, 3.36, 1.68, 7.5],
            '13': [1.071, 3.57, 1.785, 7.5],
            '14': [1.134, 3.78, 1.89, 7.5],
            '15': [1.197, 3.99, 1.995, 7.5]}


def Keqing_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.88, 0.24, 1.888, 12, 40],
            '2': [0.946, 0.258, 2.0296, 12, 40],
            '3': [1.012, 0.276, 2.1712, 12, 40],
            '4': [1.1, 0.3, 2.36, 12, 40],
            '5': [1.166, 0.318, 2.5016, 12, 40],
            '6': [1.232, 0.336, 2.6432, 12, 40],
            '7': [1.32, 0.36, 2.832, 12, 40],
            '8': [1.408, 0.384, 3.0208, 12, 40],
            '9': [1.496, 0.408, 3.2096, 12, 40],
            '10': [1.584, 0.432, 3.3984, 12, 40],
            '11': [1.672, 0.456, 3.5872, 12, 40],
            '12': [1.76, 0.48, 3.776, 12, 40],
            '13': [1.87, 0.51, 4.012, 12, 40],
            '14': [1.98, 0.54, 4.248, 12, 40],
            '15': [2.09, 0.57, 4.484, 12, 40]}


def Sucrose_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.33464, 0.30616, 0.38448, 0.479176, 1.2016, 50, 0.568288, 1.136335, 1.419344],
            '2': [0.359738, 0.329122, 0.413316, 0.515114, 1.29172, 50, 0.614544, 1.228828, 1.534872],
            '3': [0.384836, 0.352084, 0.442152, 0.551052, 1.38184, 50, 0.6608, 1.32132, 1.6504],
            '4': [0.4183, 0.3827, 0.4806, 0.59897, 1.502, 50, 0.72688, 1.453452, 1.81544],
            '5': [0.443398, 0.405662, 0.509436, 0.634908, 1.59212, 50, 0.773136, 1.545944, 1.930968],
            '6': [0.468496, 0.428624, 0.538272, 0.670846, 1.68224, 50, 0.826, 1.65165, 2.063],
            '7': [0.50196, 0.45924, 0.57672, 0.718764, 1.8024, 50, 0.898688, 1.796995, 2.244544],
            '8': [0.535424, 0.489856, 0.615168, 0.766682, 1.92256, 50, 0.971376, 1.94234, 2.426088],
            '9': [0.568888, 0.520472, 0.653616, 0.814599, 2.04272, 50, 1.044064, 2.087686, 2.607632],
            '10': [0.602352, 0.551088, 0.692064, 0.862517, 2.16288, 50, 1.12336, 2.246244, 2.80568],
            '11': [0.635816, 0.581704, 0.730512, 0.910434, 2.28304, 50, 1.202656, 2.404802, 3.003728],
            '12': [0.66928, 0.61232, 0.76896, 0.958352, 2.4032, 50, 1.281952, 2.563361, 3.201776],
            '13': [0.71111, 0.65059, 0.81702, 1.018249, 2.5534, 50, 1.361248, 2.721919, 3.399824],
            '14': [0.75294, 0.68886, 0.86508, 1.078146, 2.7036, 50, 1.440544, 2.880478, 3.597872],
            '15': [0.79477, 0.72713, 0.91314, 1.138043, 2.8538, 50, 1.51984, 3.039036, 3.79592]}


def Sucrose_E(event: Event, inter) -> List[Event]:
    info = {'1': [2.112, 15],
            '2': [2.2704, 15],
            '3': [2.4288, 15],
            '4': [2.64, 15],
            '5': [2.7984, 15],
            '6': [2.9568, 15],
            '7': [3.168, 15],
            '8': [3.3792, 15],
            '9': [3.5904, 15],
            '10': [3.8016, 15],
            '11': [4.0128, 15],
            '12': [4.224, 15],
            '13': [4.488, 15],
            '14': [4.752, 15],
            '15': [5.016, 15]}


def Sucrose_Q(event: Event, inter) -> List[Event]:
    info = {'1': [1.48, 0.44, 6, 20, 80],
            '2': [1.591, 0.473, 6, 20, 80],
            '3': [1.702, 0.506, 6, 20, 80],
            '4': [1.85, 0.55, 6, 20, 80],
            '5': [1.961, 0.583, 6, 20, 80],
            '6': [2.072, 0.616, 6, 20, 80],
            '7': [2.22, 0.66, 6, 20, 80],
            '8': [2.368, 0.704, 6, 20, 80],
            '9': [2.516, 0.748, 6, 20, 80],
            '10': [2.664, 0.792, 6, 20, 80],
            '11': [2.812, 0.836, 6, 20, 80],
            '12': [2.96, 0.88, 6, 20, 80],
            '13': [3.145, 0.935, 6, 20, 80],
            '14': [3.33, 0.99, 6, 20, 80],
            '15': [3.515, 1.045, 6, 20, 80]}


def Xinyan_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.7654, 0.7396, 0.9546, 1.15842, 0.625455, 1.1309, 40, 5, 0.745878, 1.49144, 1.862889],
            '2': [0.8277, 0.7998, 1.0323, 1.25271, 0.676364, 1.22295, 40, 5, 0.806589, 1.612836, 2.01452],
            '3': [0.89, 0.86, 1.11, 1.347, 0.727273, 1.315, 40, 5, 0.8673, 1.734233, 2.16615],
            '4': [0.979, 0.946, 1.221, 1.4817, 0.8, 1.4465, 40, 5, 0.95403, 1.907656, 2.382765],
            '5': [1.0413, 1.0062, 1.2987, 1.57599, 0.850909, 1.53855, 40, 5, 1.014741, 2.029052, 2.534396],
            '6': [1.1125, 1.075, 1.3875, 1.68375, 0.909091, 1.64375, 40, 5, 1.084125, 2.167791, 2.707688],
            '7': [1.2104, 1.1696, 1.5096, 1.83192, 0.989091, 1.7884, 40, 5, 1.179528, 2.358556, 2.945964],
            '8': [1.3083, 1.2642, 1.6317, 1.98009, 1.069091, 1.93305, 40, 5, 1.274931, 2.549322, 3.184241],
            '9': [1.4062, 1.3588, 1.7538, 2.12826, 1.149091, 2.0777, 40, 5, 1.370334, 2.740087, 3.422517],
            '10': [1.513, 1.462, 1.887, 2.2899, 1.236364, 2.2355, 40, 5, 1.47441, 2.948195, 3.682455],
            '11': [1.6198, 1.5652, 2.0202, 2.45154, 1.323636, 2.3933, 40, 5, 1.578486, 3.156303, 3.942393],
            '12': [1.7266, 1.6684, 2.1534, 2.61318, 1.410909, 2.5511, 40, 5, 1.682562, 3.364411, 4.202331],
            '13': [1.8334, 1.7716, 2.2866, 2.77482, 1.498182, 2.7089, 40, 5, 1.786638, 3.572519, 4.462269],
            '14': [1.9402, 1.8748, 2.4198, 2.93646, 1.585455, 2.8667, 40, 5, 1.890714, 3.780627, 4.722207],
            '15': [2.047, 1.978, 2.553, 3.0981, 1.672727, 3.0245, 40, 5, 1.99479, 3.988735, 4.982145]}


def Xinyan_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.696, 1.0404, 500.55273, 1.224, 588.88556, 1.44, 692.8066, 0.336, 12, 18],
            '2': [1.8232, 1.11843, 550.615, 1.3158, 647.78235, 1.548, 762.09686, 0.3612, 12, 18],
            '3': [1.9504, 1.19646, 604.84906, 1.4076, 711.58716, 1.656, 837.1613, 0.3864, 12, 18],
            '4': [2.12, 1.3005, 663.255, 1.53, 780.3, 1.8, 918, 0.42, 12, 18],
            '5': [2.2472, 1.37853, 725.83276, 1.6218, 853.92096, 1.908, 1004.61285, 0.4452, 12, 18],
            '6': [2.3744, 1.45656, 792.58246, 1.7136, 932.44995, 2.016, 1096.9999, 0.4704, 12, 18],
            '7': [2.544, 1.5606, 863.5039, 1.836, 1015.88696, 2.16, 1195.1611, 0.504, 12, 18],
            '8': [2.7136, 1.66464, 938.5973, 1.9584, 1104.232, 2.304, 1299.0966, 0.5376, 12, 18],
            '9': [2.8832, 1.76868, 1017.8625, 2.0808, 1197.4852, 2.448, 1408.8062, 0.5712, 12, 18],
            '10': [3.0528, 1.87272, 1101.2996, 2.2032, 1295.6465, 2.592, 1524.29, 0.6048, 12, 18],
            '11': [3.2224, 1.97676, 1188.9084, 2.3256, 1398.7158, 2.736, 1645.548, 0.6384, 12, 18],
            '12': [3.392, 2.0808, 1280.6892, 2.448, 1506.6931, 2.88, 1772.5802, 0.672, 12, 18],
            '13': [3.604, 2.21085, 1376.6418, 2.601, 1619.5786, 3.06, 1905.3866, 0.714, 12, 18],
            '14': [3.816, 2.3409, 1476.7662, 2.754, 1737.3721, 3.24, 2043.9672, 0.756, 12, 18],
            '15': [4.028, 2.47095, 1581.0626, 2.907, 1860.0736, 3.42, 2188.322, 0.798, 12, 18]}


def Xinyan_Q(event: Event, inter) -> List[Event]:
    info = {'1': [3.408, 0.4, 15, 60, 2],
            '2': [3.6636, 0.43, 15, 60, 2],
            '3': [3.9192, 0.46, 15, 60, 2],
            '4': [4.26, 0.5, 15, 60, 2],
            '5': [4.5156, 0.53, 15, 60, 2],
            '6': [4.7712, 0.56, 15, 60, 2],
            '7': [5.112, 0.6, 15, 60, 2],
            '8': [5.4528, 0.64, 15, 60, 2],
            '9': [5.7936, 0.68, 15, 60, 2],
            '10': [6.1344, 0.72, 15, 60, 2],
            '11': [6.4752, 0.76, 15, 60, 2],
            '12': [6.816, 0.8, 15, 60, 2],
            '13': [7.242, 0.85, 15, 60, 2],
            '14': [7.668, 0.9, 15, 60, 2],
            '15': [8.094, 0.95, 15, 60, 2]}


def Rosaria_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.5246, 0.516, 0.3182, 0.6966, 0.41624, 0.43, 1.3674, 25, 0.639324, 1.278377, 1.596762],
            '2': [0.5673, 0.558, 0.3441, 0.7533, 0.45012, 0.465, 1.4787, 25, 0.691362, 1.382431, 1.726731],
            '3': [0.61, 0.6, 0.37, 0.81, 0.484, 0.5, 1.59, 25, 0.7434, 1.486485, 1.8567],
            '4': [0.671, 0.66, 0.407, 0.891, 0.5324, 0.55, 1.749, 25, 0.81774, 1.635134, 2.04237],
            '5': [0.7137, 0.702, 0.4329, 0.9477, 0.56628, 0.585, 1.8603, 25, 0.869778, 1.739187, 2.172339],
            '6': [0.7625, 0.75, 0.4625, 1.0125, 0.605, 0.625, 1.9875, 25, 0.92925, 1.858106, 2.320875],
            '7': [0.8296, 0.816, 0.5032, 1.1016, 0.65824, 0.68, 2.1624, 25, 1.011024, 2.02162, 2.525112],
            '8': [0.8967, 0.882, 0.5439, 1.1907, 0.71148, 0.735, 2.3373, 25, 1.092798, 2.185133, 2.729349],
            '9': [0.9638, 0.948, 0.5846, 1.2798, 0.76472, 0.79, 2.5122, 25, 1.174572, 2.348646, 2.933586],
            '10': [1.037, 1.02, 0.629, 1.377, 0.8228, 0.85, 2.703, 25, 1.26378, 2.527025, 3.15639],
            '11': [1.1102, 1.092, 0.6734, 1.4742, 0.88088, 0.91, 2.8938, 25, 1.352988, 2.705403, 3.379194],
            '12': [1.1834, 1.164, 0.7178, 1.5714, 0.93896, 0.97, 3.0846, 25, 1.442196, 2.883781, 3.601998],
            '13': [1.2566, 1.236, 0.7622, 1.6686, 0.99704, 1.03, 3.2754, 25, 1.531404, 3.062159, 3.824802],
            '14': [1.3298, 1.308, 0.8066, 1.7658, 1.05512, 1.09, 3.4662, 25, 1.620612, 3.240537, 4.047606],
            '15': [1.403, 1.38, 0.851, 1.863, 1.1132, 1.15, 3.657, 25, 1.70982, 3.418915, 4.27041]}


def Rosaria_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.584, 1.36, 6],
            '2': [0.6278, 1.462, 6],
            '3': [0.6716, 1.564, 6],
            '4': [0.73, 1.7, 6],
            '5': [0.7738, 1.802, 6],
            '6': [0.8176, 1.904, 6],
            '7': [0.876, 2.04, 6],
            '8': [0.9344, 2.176, 6],
            '9': [0.9928, 2.312, 6],
            '10': [1.0512, 2.448, 6],
            '11': [1.1096, 2.584, 6],
            '12': [1.168, 2.72, 6],
            '13': [1.241, 2.89, 6],
            '14': [1.314, 3.06, 6],
            '15': [1.387, 3.23, 6]}


def Rosaria_Q(event: Event, inter) -> List[Event]:
    info = {'1': [1.04, 1.52, 1.32, 8, 15, 60],
            '2': [1.118, 1.634, 1.419, 8, 15, 60],
            '3': [1.196, 1.748, 1.518, 8, 15, 60],
            '4': [1.3, 1.9, 1.65, 8, 15, 60],
            '5': [1.378, 2.014, 1.749, 8, 15, 60],
            '6': [1.456, 2.128, 1.848, 8, 15, 60],
            '7': [1.56, 2.28, 1.98, 8, 15, 60],
            '8': [1.664, 2.432, 2.112, 8, 15, 60],
            '9': [1.768, 2.584, 2.244, 8, 15, 60],
            '10': [1.872, 2.736, 2.376, 8, 15, 60],
            '11': [1.976, 2.888, 2.508, 8, 15, 60],
            '12': [2.08, 3.04, 2.64, 8, 15, 60],
            '13': [2.21, 3.23, 2.805, 8, 15, 60],
            '14': [2.34, 3.42, 2.97, 8, 15, 60],
            '15': [2.47, 3.61, 3.135, 8, 15, 60]}


def Hutao_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.468864, 0.482539, 0.6105, 0.65641, 0.332737, 0.352, 0.859584, 1.3596, 25, 0.654192, 1.308107, 1.633896],
            '2': [0.500832, 0.51544, 0.652125, 0.701165, 0.355423, 0.376, 0.918192, 1.4523, 25, 0.698796, 1.397296, 1.745298],
            '3': [0.5328, 0.54834, 0.69375, 0.74592, 0.37811, 0.4, 0.9768, 1.545, 25, 0.7434, 1.486485, 1.8567],
            '4': [0.575424, 0.592207, 0.74925, 0.805594, 0.408359, 0.432, 1.054944, 1.6686, 25, 0.802872, 1.605404, 2.005236],
            '5': [0.607392, 0.625108, 0.790875, 0.850349, 0.431045, 0.456, 1.113552, 1.7613, 25, 0.847476, 1.694593, 2.116638],
            '6': [0.644688, 0.663491, 0.839438, 0.902563, 0.457513, 0.484, 1.181928, 1.86945, 25, 0.899514, 1.798647, 2.246607],
            '7': [0.69264, 0.712842, 0.901875, 0.969696, 0.491543, 0.52, 1.26984, 2.0085, 25, 0.96642, 1.932431, 2.41371],
            '8': [0.740592, 0.762193, 0.964313, 1.036829, 0.525573, 0.556, 1.357752, 2.14755, 25, 1.033326, 2.066214, 2.580813],
            '9': [0.788544, 0.811543, 1.02675, 1.103962, 0.559603, 0.592, 1.445664, 2.2866, 25, 1.100232, 2.199998, 2.747916],
            '10': [0.836496, 0.860894, 1.089188, 1.171094, 0.593633, 0.628, 1.533576, 2.42565, 25, 1.167138, 2.333781, 2.915019],
            '11': [0.884448, 0.910244, 1.151625, 1.238227, 0.627663, 0.664, 1.621488, 2.5647, 25, 1.234044, 2.467565, 3.082122],
            '12': [0.9324, 0.959595, 1.214063, 1.30536, 0.661693, 0.7, 1.7094, 2.70375, 25, 1.30095, 2.601349, 3.249225],
            '13': [0.980352, 1.008946, 1.2765, 1.372493, 0.695722, 0.736, 1.797312, 2.8428, 25, 1.367856, 2.735132, 3.416328],
            '14': [1.028304, 1.058296, 1.338938, 1.439626, 0.729752, 0.772, 1.885224, 2.98185, 25, 1.434762, 2.868916, 3.583431],
            '15': [1.076256, 1.107647, 1.401375, 1.506758, 0.763782, 0.808, 1.973136, 3.1209, 25, 1.501668, 3.0027, 3.750534]}
    # 1, 2, 3, 4, 5.1, 5.2, 6, z, sta, p, lp, hp
    lv = str(inter.characters[event.source].attr.normatk_lv)
    keys = __dmg_keys+['damage_type', 'view']
    config = [['A1', 0, 13,      0, '胡桃:普攻:第1段', DamageType.NORMAL_ATK, True],
              ['A2', 1, 29-13,   0, '胡桃:普攻:第2段', DamageType.NORMAL_ATK, True],
              ['A3', 2, 54-29,   0, '胡桃:普攻:第3段', DamageType.NORMAL_ATK, True],
              ['A4', 3, 90-54,   0, '胡桃:普攻:第4段', DamageType.NORMAL_ATK, True],
              ['A5', 4, 120-90,  0, '胡桃:普攻:第5段', DamageType.NORMAL_ATK, True],
              ['A5', 5, 134-90,  0, '胡桃:普攻:第5段', DamageType.NORMAL_ATK, False],
              ['A6', 6, 173-234, 0, '胡桃:普攻:第6段', DamageType.NORMAL_ATK, True],
              ['Z',  7, 50,      0, '胡桃:重击',       DamageType.CHARGED_ATK, True],
              ['P',  9, 30,      0, '胡桃:下落期间', DamageType.PLUNGING_ATK, False],
              ['LP', 10, 30,     0, '胡桃:低空下落', DamageType.PLUNGING_ATK, True],
              ['HP', 11, 30,     0, '胡桃:低空下落', DamageType.PLUNGING_ATK, True]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.PHYSICAL, DamageType.NORMAL_ATK)


def Hutao_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.3, 0.03841, 0.64, 8, 9, 16, 4],
            '2': [0.3, 0.04071, 0.688, 8, 9, 16, 4],
            '3': [0.3, 0.04301, 0.736, 8, 9, 16, 4],
            '4': [0.3, 0.046, 0.8, 8, 9, 16, 4],
            '5': [0.3, 0.0483, 0.848, 8, 9, 16, 4],
            '6': [0.3, 0.0506, 0.896, 8, 9, 16, 4],
            '7': [0.3, 0.05359, 0.96, 8, 9, 16, 4],
            '8': [0.3, 0.05658, 1.024, 8, 9, 16, 4],
            '9': [0.3, 0.05957, 1.088, 8, 9, 16, 4],
            '10': [0.3, 0.06256, 1.152, 8, 9, 16, 4],
            '11': [0.3, 0.06555, 1.216, 8, 9, 16, 4],
            '12': [0.3, 0.06854, 1.28, 8, 9, 16, 4],
            '13': [0.3, 0.07153, 1.36, 8, 9, 16, 4],
            '14': [0.3, 0.07452, 1.44, 8, 9, 16, 4],
            '15': [0.3, 0.07751, 1.52, 8, 9, 16, 4]}
    # debuff, buff, e, dur.e, dur, cd, thresh
    lv = str(inter.characters[event.source].attr.elemskill_lv)
    keys = __dmg_keys+['view']
    config = [['E', 2, 42, 16*60, '胡桃:元素战技:血梅香', False]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.PYRO, DamageType.ELEM_SKILL)


def Hutao_Q(event: Event, inter) -> List[Event]:
    info = {'1': [3.03272, 3.7909, 0.062625, 0.0835, 15, 60, 0.5],
            '2': [3.21432, 4.0179, 0.066375, 0.0885, 15, 60, 0.5],
            '3': [3.39592, 4.2449, 0.070125, 0.0935, 15, 60, 0.5],
            '4': [3.632, 4.54, 0.075, 0.1, 15, 60, 0.5],
            '5': [3.8136, 4.767, 0.07875, 0.105, 15, 60, 0.5],
            '6': [3.9952, 4.994, 0.0825, 0.11, 15, 60, 0.5],
            '7': [4.23128, 5.2891, 0.087375, 0.1165, 15, 60, 0.5],
            '8': [4.46736, 5.5842, 0.09225, 0.123, 15, 60, 0.5],
            '9': [4.70344, 5.8793, 0.097125, 0.1295, 15, 60, 0.5],
            '10': [4.93952, 6.1744, 0.102, 0.136, 15, 60, 0.5],
            '11': [5.1756, 6.4695, 0.106875, 0.1425, 15, 60, 0.5],
            '12': [5.41168, 6.7646, 0.11175, 0.149, 15, 60, 0.5],
            '13': [5.64776, 7.0597, 0.116625, 0.1555, 15, 60, 0.5],
            '14': [5.88384, 7.3548, 0.1215, 0.162, 15, 60, 0.5],
            '15': [6.11992, 7.6499, 0.126375, 0.1685, 15, 60, 0.5]}
    # q, q1, h, h1, cd, energy
    lv = str(inter.characters[event.source].attr.elemburst_lv)
    config = [['Q',  0, 130, 15*60, '胡桃:元素爆发'],
              ['Q1', 1, 130, 15*60, '胡桃:元素爆发:低血量']]
    mappings = [dict(zip(__dmg_keys, c)) for c in config]
    config2 = [['Q',  2, None, event.source, '胡桃:元素爆发:安神秘法'],
               ['Q1', 3, None, event.source, '胡桃:元素爆发:安神秘法低血量']]
    mappings2 = [dict(zip(__heal_keys, c)) for c in config2]
    if event.type == EventType.DAMAGE:
        return _auto_generate_dmg(event, info, mappings, lv,
                                  ElementType.PYRO, DamageType.ELEM_BURST)
    elif event.type == EventType.HEALTH:
        return _auto_generate_heal(event, info, mappings2, lv)


def Kazuha_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.44978, 0.45236, 0.258, 0.3096, 0.60716, 0.2537, 0.43, 0.74648, 20, 0.818335, 1.636323, 2.043855],
            '2': [0.48639, 0.48918, 0.279, 0.3348, 0.65658, 0.27435, 0.465, 0.80724, 20, 0.884943, 1.769512, 2.210216],
            '3': [0.523, 0.526, 0.3, 0.36, 0.706, 0.295, 0.5, 0.868, 20, 0.951552, 1.902701, 2.376576],
            '4': [0.5753, 0.5786, 0.33, 0.396, 0.7766, 0.3245, 0.55, 0.9548, 20, 1.046707, 2.092971, 2.614234],
            '5': [0.61191, 0.61542, 0.351, 0.4212, 0.82602, 0.34515, 0.585, 1.01556, 20, 1.113316, 2.22616, 2.780594],
            '6': [0.65375, 0.6575, 0.375, 0.45, 0.8825, 0.36875, 0.625, 1.085, 20, 1.18944, 2.378376, 2.97072],
            '7': [0.71128, 0.71536, 0.408, 0.4896, 0.96016, 0.4012, 0.68, 1.18048, 20, 1.294111, 2.587673, 3.232143],
            '8': [0.76881, 0.77322, 0.441, 0.5292, 1.03782, 0.43365, 0.735, 1.27596, 20, 1.398781, 2.79697, 3.493567],
            '9': [0.82634, 0.83108, 0.474, 0.5688, 1.11548, 0.4661, 0.79, 1.37144, 20, 1.503452, 3.006267, 3.75499],
            '10': [0.8891, 0.8942, 0.51, 0.612, 1.2002, 0.5015, 0.85, 1.4756, 20, 1.617638, 3.234591, 4.040179],
            '11': [0.961013, 0.966525, 0.55125, 0.6615, 1.297275, 0.542063, 0.91875, 1.59495, 20, 1.731825, 3.462915, 4.325368],
            '12': [1.045582, 1.051579, 0.59976, 0.719712, 1.411435, 0.589764, 0.9996, 1.735306, 20, 1.846011, 3.69124, 4.610557],
            '13': [1.130151, 1.136633, 0.64827, 0.777924, 1.525595, 0.637465, 1.08045, 1.875661, 20, 1.960197, 3.919564, 4.895747],
            '14': [1.21472, 1.221688, 0.69678, 0.836136, 1.639756, 0.685167, 1.1613, 2.016017, 20, 2.074383, 4.147888, 5.180936],
            '15': [1.306977, 1.314474, 0.7497, 0.89964, 1.764294, 0.737205, 1.2495, 2.169132, 20, 2.18857, 4.376212, 5.466125]}
    # 1, 2, 3.1, 3.2, 4, 5(3), z.1, z.2, sta, p, lp, hp
    lv = str(inter.characters[event.source].attr.normatk_lv)
    keys = __dmg_keys+['damage_type', 'view']
    config = [['A1', 0, 14,     0, '枫原万叶:普攻:第1段', DamageType.NORMAL_ATK, True],
              ['A2', 1, 34-14,  0, '枫原万叶:普攻:第2段', DamageType.NORMAL_ATK, True],
              ['A3', 2, 60-14,  0, '枫原万叶:普攻:第3段', DamageType.NORMAL_ATK, True],
              ['A3', 3, 70-14,  0, '枫原万叶:普攻:第3段', DamageType.NORMAL_ATK, False],
              ['A4', 4, 97-70,  0, '枫原万叶:普攻:第4段', DamageType.NORMAL_ATK, True],
              ['A5', 5, 126-97, 0, '枫原万叶:普攻:第5段', DamageType.NORMAL_ATK, True],
              ['A5', 5, 138-97, 0, '枫原万叶:普攻:第5段', DamageType.NORMAL_ATK, False],
              ['A5', 5, 140-97, 0, '枫原万叶:普攻:第5段', DamageType.NORMAL_ATK, False],
              ['Z',  6, 14,     0, '枫原万叶:重击',       DamageType.CHARGED_ATK, True],
              ['Z',  7, 44,     0, '枫原万叶:重击',       DamageType.CHARGED_ATK, False],
              ['P',  9, 30,     0, '枫原万叶:下落期间', DamageType.PLUNGING_ATK, False],
              ['LP', 10, 30,    0, '枫原万叶:低空下落', DamageType.PLUNGING_ATK, True],
              ['HP', 11, 30,    0, '枫原万叶:低空下落', DamageType.PLUNGING_ATK, True]]
    mappings = [dict(zip(keys, c)) for c in config]
    info2 = {str(i): [2] for i in range(1, 16)}
    config2 = [['AAB', 0, 0, 0, '枫原万叶:天赋一:相闻之剑法']]
    mappings2 = [dict(zip(__dmg_keys, c)) for c in config2]
    if event.name == 'AAB':
        return _auto_generate_dmg(event, info2, mappings2, lv,
                                  ElementType.ANEMO, DamageType.PLUNGING_ATK, view=False)
    else:
        return _auto_generate_dmg(event, info, mappings, lv,
                                  ElementType.PHYSICAL, DamageType.NORMAL_ATK)


def Kazuha_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.92, 6, 2.608, 9],
            '2': [2.064, 6, 2.8036, 9],
            '3': [2.208, 6, 2.9992, 9],
            '4': [2.4, 6, 3.26, 9],
            '5': [2.544, 6, 3.4556, 9],
            '6': [2.688, 6, 3.6512, 9],
            '7': [2.88, 6, 3.912, 9],
            '8': [3.072, 6, 4.1728, 9],
            '9': [3.264, 6, 4.4336, 9],
            '10': [3.456, 6, 4.6944, 9],
            '11': [3.648, 6, 4.9552, 9],
            '12': [3.84, 6, 5.216, 9],
            '13': [4.08, 6, 5.542, 9],
            '14': [4.32, 6, 5.868, 9],
            '15': [4.56, 6, 6.194, 9]}
    # e, ecd, ee, eecd
    lv = str(inter.characters[event.source].attr.elemskill_lv)
    config = [['E',   0, 36, 6*60, '枫原万叶:元素战技:点按'],
              ['EE',  2, 69, 6*60, '枫原万叶:元素战技:长按']]
    mappings = [dict(zip(__dmg_keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.ANEMO, DamageType.ELEM_SKILL)


def Kazuha_Q(event: Event, inter) -> List[Event]:
    info = {'1': [2.624, 1.2, 0.36, 8, 15, 60],
            '2': [2.8208, 1.29, 0.387, 8, 15, 60],
            '3': [3.0176, 1.38, 0.414, 8, 15, 60],
            '4': [3.28, 1.5, 0.45, 8, 15, 60],
            '5': [3.4768, 1.59, 0.477, 8, 15, 60],
            '6': [3.6736, 1.68, 0.504, 8, 15, 60],
            '7': [3.936, 1.8, 0.54, 8, 15, 60],
            '8': [4.1984, 1.92, 0.576, 8, 15, 60],
            '9': [4.4608, 2.04, 0.612, 8, 15, 60],
            '10': [4.7232, 2.16, 0.648, 8, 15, 60],
            '11': [4.9856, 2.28, 0.684, 8, 15, 60],
            '12': [5.248, 2.4, 0.72, 8, 15, 60],
            '13': [5.576, 2.55, 0.765, 8, 15, 60],
            '14': [5.904, 2.7, 0.81, 8, 15, 60],
            '15': [6.232, 2.85, 0.855, 8, 15, 60]}
    # q0, q1, q2, dur, cd, energy
    lv = str(inter.characters[event.source].attr.elemburst_lv)
    keys = __dmg_keys+['snapshot', 'view']
    config = [['Q',   0, 93, 15*60, '枫原万叶:元素爆发:斩击伤害', 'Kazuha->Q', True],
              ['Q1',  1, 0,  15*60, '枫原万叶:元素爆发:持续伤害', 'Kazuha->Q', False],
              ['QAB', 2, 0,  15*60, '枫原万叶:元素爆发:附加伤害', 'Kazuha->Q', False]]
    mappings = [dict(zip(keys, c)) for c in config]
    if not event.args.get('seq', False):
        return _auto_generate_dmg(event, info, mappings, lv,
                                  ElementType.ANEMO, DamageType.ELEM_BURST)
    elif event.name == 'QAB':
        stack = int(event.args.get('stack', '1'))
        events = []
        for i in range(stack):
            events.extend(_auto_generate_dmg(event, info, mappings, lv,
                                             ElementType.ANEMO, DamageType.ELEM_BURST, time_bias=120*i-1))
        return events
    else:
        events = []
        proto = deepcopy(event)
        proto.name = 'Q'
        events.extend(_auto_generate_dmg(proto, info, mappings, lv,
                                         ElementType.ANEMO, DamageType.ELEM_BURST))
        proto.name = 'Q1'
        for i in range(5):
            t = i*120+60 if i != 4 else 4*120+59
            events.extend(_auto_generate_dmg(proto, info, mappings, lv,
                                             ElementType.ANEMO, DamageType.ELEM_BURST, time_bias=t))
        return events


def Yanfei_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.583416, 0.521256, 0.760128, 0.982294, 1.15564, 1.328986, 1.502332, 1.675678, 2.5, 3, 3.5, 4, 4, 50, 0.15, 0.568288, 1.136335, 1.419344, 10, 10],
            '2': [0.627172, 0.56035, 0.817138, 1.041114, 1.22484, 1.408566, 1.592292, 1.776018, 2.5, 3, 3.5, 4, 4, 50, 0.15, 0.614544, 1.228828, 1.534872, 10, 10],
            '3': [0.670928, 0.599444, 0.874147, 1.099934, 1.29404, 1.488146, 1.682252, 1.876358, 2.5, 3, 3.5, 4, 4, 50, 0.15, 0.6608, 1.32132, 1.6504, 10, 10],
            '4': [0.72927, 0.65157, 0.95016, 1.1764, 1.384, 1.5916, 1.7992, 2.0068, 2.5, 3, 3.5, 4, 4, 50, 0.15, 0.72688, 1.453452, 1.81544, 10, 10],
            '5': [0.773026, 0.690664, 1.00717, 1.23522, 1.4532, 1.67118, 1.88916, 2.10714, 2.5, 3, 3.5, 4, 4, 50, 0.15, 0.773136, 1.545944, 1.930968, 10, 10],
            '6': [0.816782, 0.729758, 1.064179, 1.29404, 1.5224, 1.75076, 1.97912, 2.20748, 2.5, 3, 3.5, 4, 4, 50, 0.15, 0.826, 1.65165, 2.063, 10, 10],
            '7': [0.875124, 0.781884, 1.140192, 1.370506, 1.61236, 1.854214, 2.096068, 2.337922, 2.5, 3, 3.5, 4, 4, 50, 0.15, 0.898688, 1.796995, 2.244544, 10, 10],
            '8': [0.933466, 0.83401, 1.216205, 1.446972, 1.70232, 1.957668, 2.213016, 2.468364, 2.5, 3, 3.5, 4, 4, 50, 0.15, 0.971376, 1.94234, 2.426088, 10, 10],
            '9': [0.991807, 0.886135, 1.292218, 1.523438, 1.79228, 2.061122, 2.329964, 2.598806, 2.5, 3, 3.5, 4, 4, 50, 0.15, 1.044064, 2.087686, 2.607632, 10, 10],
            '10': [1.050149, 0.938261, 1.36823, 1.599904, 1.88224, 2.164576, 2.446912, 2.729248, 2.5, 3, 3.5, 4, 4, 50, 0.15, 1.12336, 2.246244, 2.80568, 10, 10],
            '11': [1.10849, 0.990386, 1.444243, 1.67637, 1.9722, 2.26803, 2.56386, 2.85969, 2.5, 3, 3.5, 4, 4, 50, 0.15, 1.202656, 2.404802, 3.003728, 10, 10],
            '12': [1.166832, 1.042512, 1.520256, 1.752836, 2.06216, 2.371484, 2.680808, 2.990132, 2.5, 3, 3.5, 4, 4, 50, 0.15, 1.281952, 2.563361, 3.201776, 10, 10],
            '13': [1.239759, 1.107669, 1.615272, 1.829302, 2.15212, 2.474938, 2.797756, 3.120574, 2.5, 3, 3.5, 4, 4, 50, 0.15, 1.361248, 2.721919, 3.399824, 10, 10],
            '14': [1.312686, 1.172826, 1.710288, 1.905768, 2.24208, 2.578392, 2.914704, 3.251016, 2.5, 3, 3.5, 4, 4, 50, 0.15, 1.440544, 2.880478, 3.597872, 10, 10],
            '15': [1.385613, 1.237983, 1.805304, 1.982234, 2.33204, 2.681846, 3.031652, 3.381458, 2.5, 3, 3.5, 4, 4, 50, 0.15, 1.51984, 3.039036, 3.79592, 10, 10]}


def Yanfei_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.696, 9],
            '2': [1.8232, 9],
            '3': [1.9504, 9],
            '4': [2.12, 9],
            '5': [2.2472, 9],
            '6': [2.3744, 9],
            '7': [2.544, 9],
            '8': [2.7136, 9],
            '9': [2.8832, 9],
            '10': [3.0528, 9],
            '11': [3.2224, 9],
            '12': [3.392, 9],
            '13': [3.604, 9],
            '14': [3.816, 9],
            '15': [4.028, 9]}


def Yanfei_Q(event: Event, inter) -> List[Event]:
    info = {'1': [1.824, 0.334, 15, 1, 20, 80],
            '2': [1.9608, 0.354, 15, 1, 20, 80],
            '3': [2.0976, 0.374, 15, 1, 20, 80],
            '4': [2.28, 0.4, 15, 1, 20, 80],
            '5': [2.4168, 0.42, 15, 1, 20, 80],
            '6': [2.5536, 0.44, 15, 1, 20, 80],
            '7': [2.736, 0.466, 15, 1, 20, 80],
            '8': [2.9184, 0.492, 15, 1, 20, 80],
            '9': [3.1008, 0.518, 15, 1, 20, 80],
            '10': [3.2832, 0.544, 15, 1, 20, 80],
            '11': [3.4656, 0.57, 15, 1, 20, 80],
            '12': [3.648, 0.596, 15, 1, 20, 80],
            '13': [3.876, 0.622, 15, 1, 20, 80],
            '14': [4.104, 0.648, 15, 1, 20, 80],
            '15': [4.332, 0.674, 15, 1, 20, 80]}


def Yoimiya_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.3564, 0.68376, 0.888888, 0.4642, 1.05864, 0.4386, 1.24, 0.164, 0.568288, 1.136335, 1.419344],
            '2': [0.3807, 0.73038, 0.949494, 0.49585, 1.13082, 0.4743, 1.333, 0.1763, 0.614544, 1.228828, 1.534872],
            '3': [0.405, 0.777, 1.0101, 0.5275, 1.203, 0.51, 1.426, 0.1886, 0.6608, 1.32132, 1.6504],
            '4': [0.4374, 0.83916, 1.090908, 0.5697, 1.29924, 0.561, 1.55, 0.205, 0.72688, 1.453452, 1.81544],
            '5': [0.4617, 0.88578, 1.151514, 0.60135, 1.37142, 0.5967, 1.643, 0.2173, 0.773136, 1.545944, 1.930968],
            '6': [0.49005, 0.94017, 1.222221, 0.638275, 1.45563, 0.6375, 1.736, 0.2296, 0.826, 1.65165, 2.063],
            '7': [0.5265, 1.0101, 1.31313, 0.68575, 1.5639, 0.6936, 1.86, 0.246, 0.898688, 1.796995, 2.244544],
            '8': [0.56295, 1.08003, 1.404039, 0.733225, 1.67217, 0.7497, 1.984, 0.2624, 0.971376, 1.94234, 2.426088],
            '9': [0.5994, 1.14996, 1.494948, 0.7807, 1.78044, 0.8058, 2.108, 0.2788, 1.044064, 2.087686, 2.607632],
            '10': [0.63585, 1.21989, 1.585857, 0.828175, 1.88871, 0.867, 2.232, 0.2952, 1.12336, 2.246244, 2.80568],
            '11': [0.6723, 1.28982, 1.676766, 0.87565, 1.99698, 0.9282, 2.356, 0.3116, 1.202656, 2.404802, 3.003728],
            '12': [0.70875, 1.35975, 1.767675, 0.923125, 2.10525, 0.9894, 2.48, 0.328, 1.281952, 2.563361, 3.201776],
            '13': [0.7452, 1.42968, 1.858584, 0.9706, 2.21352, 1.0506, 2.635, 0.3485, 1.361248, 2.721919, 3.399824],
            '14': [0.78165, 1.49961, 1.949493, 1.018075, 2.32179, 1.1118, 2.79, 0.369, 1.440544, 2.880478, 3.597872],
            '15': [0.8181, 1.56954, 2.040402, 1.06555, 2.43006, 1.173, 2.945, 0.3895, 1.51984, 3.039036, 3.79592]}


def Yoimiya_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.37909, 10, 18, 1.37909],
            '2': [0.40179, 10, 18, 1.40179],
            '3': [0.42449, 10, 18, 1.42449],
            '4': [0.454, 10, 18, 1.454],
            '5': [0.4767, 10, 18, 1.4767],
            '6': [0.4994, 10, 18, 1.4994],
            '7': [0.52891, 10, 18, 1.52891],
            '8': [0.55842, 10, 18, 1.55842],
            '9': [0.58793, 10, 18, 1.58793],
            '10': [0.61744, 10, 18, 1.61744],
            '11': [0.64695, 10, 18, 1.64695],
            '12': [0.67646, 10, 18, 1.67646],
            '13': [0.70597, 10, 18, 1.70597],
            '14': [0.73548, 10, 18, 1.73548],
            '15': [0.76499, 10, 18, 1.76499]}


def Yoimiya_Q(event: Event, inter) -> List[Event]:
    info = {'1': [1.272, 1.22, 2, 10, 15, 60],
            '2': [1.3674, 1.3115, 2, 10, 15, 60],
            '3': [1.4628, 1.403, 2, 10, 15, 60],
            '4': [1.59, 1.525, 2, 10, 15, 60],
            '5': [1.6854, 1.6165, 2, 10, 15, 60],
            '6': [1.7808, 1.708, 2, 10, 15, 60],
            '7': [1.908, 1.83, 2, 10, 15, 60],
            '8': [2.0352, 1.952, 2, 10, 15, 60],
            '9': [2.1624, 2.074, 2, 10, 15, 60],
            '10': [2.2896, 2.196, 2, 10, 15, 60],
            '11': [2.4168, 2.318, 2, 10, 15, 60],
            '12': [2.544, 2.44, 2, 10, 15, 60],
            '13': [2.703, 2.5925, 2, 10, 15, 60],
            '14': [2.862, 2.745, 2, 10, 15, 60],
            '15': [3.021, 2.8975, 2, 10, 15, 60]}


def Thoma_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.443932, 0.436278, 0.26789, 0.673552, 1.12746, 25, 0.639324, 1.278377, 1.596762],
            '2': [0.480066, 0.471789, 0.289695, 0.728376, 1.21923, 25, 0.691362, 1.382431, 1.726731],
            '3': [0.5162, 0.5073, 0.3115, 0.7832, 1.311, 25, 0.7434, 1.486485, 1.8567],
            '4': [0.56782, 0.55803, 0.34265, 0.86152, 1.4421, 25, 0.81774, 1.635134, 2.04237],
            '5': [0.603954, 0.593541, 0.364455, 0.916344, 1.53387, 25, 0.869778, 1.739187, 2.172339],
            '6': [0.64525, 0.634125, 0.389375, 0.979, 1.63875, 25, 0.92925, 1.858106, 2.320875],
            '7': [0.702032, 0.689928, 0.42364, 1.065152, 1.78296, 25, 1.011024, 2.02162, 2.525112],
            '8': [0.758814, 0.745731, 0.457905, 1.151304, 1.92717, 25, 1.092798, 2.185133, 2.729349],
            '9': [0.815596, 0.801534, 0.49217, 1.237456, 2.07138, 25, 1.174572, 2.348646, 2.933586],
            '10': [0.87754, 0.86241, 0.52955, 1.33144, 2.2287, 25, 1.26378, 2.527025, 3.15639],
            '11': [0.939484, 0.923286, 0.56693, 1.425424, 2.38602, 25, 1.352988, 2.705403, 3.379194],
            '12': [1.001428, 0.984162, 0.60431, 1.519408, 2.54334, 25, 1.442196, 2.883781, 3.601998],
            '13': [1.063372, 1.045038, 0.64169, 1.613392, 2.70066, 25, 1.531404, 3.062159, 3.824802],
            '14': [1.125316, 1.105914, 0.67907, 1.707376, 2.85798, 25, 1.620612, 3.240537, 4.047606],
            '15': [1.18726, 1.16679, 0.71645, 1.80136, 3.0153, 25, 1.70982, 3.418915, 4.27041]}


def Thoma_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.464, 0.072, 693.33484, 8, 0.196, 1887.4199, 15],
            '2': [1.5738, 0.0774, 762.678, 8, 0.2107, 2076.1882, 15],
            '3': [1.6836, 0.0828, 837.7997, 8, 0.2254, 2280.687, 15],
            '4': [1.83, 0.09, 918.7, 8, 0.245, 2500.9167, 15],
            '5': [1.9398, 0.0954, 1005.3789, 8, 0.2597, 2736.877, 15],
            '6': [2.0496, 0.1008, 1097.8364, 8, 0.2744, 2988.5679, 15],
            '7': [2.196, 0.108, 1196.0725, 8, 0.294, 3255.9897, 15],
            '8': [2.3424, 0.1152, 1300.0872, 8, 0.3136, 3539.142, 15],
            '9': [2.4888, 0.1224, 1409.8805, 8, 0.3332, 3838.025, 15],
            '10': [2.6352, 0.1296, 1525.4523, 8, 0.3528, 4152.6387, 15],
            '11': [2.7816, 0.1368, 1646.8027, 8, 0.3724, 4482.983, 15],
            '12': [2.928, 0.144, 1773.9319, 8, 0.392, 4829.058, 15],
            '13': [3.111, 0.153, 1906.8395, 8, 0.4165, 5190.8643, 15],
            '14': [3.294, 0.162, 2045.5258, 8, 0.441, 5568.4004, 15],
            '15': [3.477, 0.171, 2189.9905, 8, 0.4655, 5961.6675, 15]}


def Thoma_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.88, 0.58, 0.01144, 110.03398, 8, 1, 15, 20, 80],
            '2': [0.946, 0.6235, 0.012298, 121.03891, 8, 1, 15, 20, 80],
            '3': [1.012, 0.667, 0.013156, 132.96092, 8, 1, 15, 20, 80],
            '4': [1.1, 0.725, 0.0143, 145.8, 8, 1, 15, 20, 80],
            '5': [1.166, 0.7685, 0.015158, 159.55617, 8, 1, 15, 20, 80],
            '6': [1.232, 0.812, 0.016016, 174.2294, 8, 1, 15, 20, 80],
            '7': [1.32, 0.87, 0.01716, 189.81972, 8, 1, 15, 20, 80],
            '8': [1.408, 0.928, 0.018304, 206.3271, 8, 1, 15, 20, 80],
            '9': [1.496, 0.986, 0.019448, 223.75157, 8, 1, 15, 20, 80],
            '10': [1.584, 1.044, 0.020592, 242.09312, 8, 1, 15, 20, 80],
            '11': [1.672, 1.102, 0.021736, 261.35175, 8, 1, 15, 20, 80],
            '12': [1.76, 1.16, 0.02288, 281.52744, 8, 1, 15, 20, 80],
            '13': [1.87, 1.2325, 0.02431, 302.6202, 8, 1, 15, 20, 80],
            '14': [1.98, 1.305, 0.02574, 324.63007, 8, 1, 15, 20, 80],
            '15': [2.09, 1.3775, 0.02717, 347.557, 8, 1, 15, 20, 80]}


def Eula_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.897324, 0.935508, 0.567987, 1.126428, 0.718336, 0.688, 1.24399, 40, 5, 0.745878, 1.49144, 1.862889],
            '2': [0.970362, 1.011654, 0.614219, 1.218114, 0.776806, 0.744, 1.345245, 40, 5, 0.806589, 1.612836, 2.01452],
            '3': [1.0434, 1.0878, 0.66045, 1.3098, 0.835275, 0.8, 1.4465, 40, 5, 0.8673, 1.734233, 2.16615],
            '4': [1.14774, 1.19658, 0.726495, 1.44078, 0.918803, 0.88, 1.59115, 40, 5, 0.95403, 1.907656, 2.382765],
            '5': [1.220778, 1.272726, 0.772726, 1.532466, 0.977272, 0.936, 1.692405, 40, 5, 1.014741, 2.029052, 2.534396],
            '6': [1.30425, 1.35975, 0.825562, 1.63725, 1.044094, 1, 1.808125, 40, 5, 1.084125, 2.167791, 2.707688],
            '7': [1.419024, 1.479408, 0.898212, 1.781328, 1.135974, 1.088, 1.96724, 40, 5, 1.179528, 2.358556, 2.945964],
            '8': [1.533798, 1.599066, 0.970861, 1.925406, 1.227854, 1.176, 2.126355, 40, 5, 1.274931, 2.549322, 3.184241],
            '9': [1.648572, 1.718724, 1.043511, 2.069484, 1.319735, 1.264, 2.28547, 40, 5, 1.370334, 2.740087, 3.422517],
            '10': [1.77378, 1.84926, 1.122765, 2.22666, 1.419968, 1.36, 2.45905, 40, 5, 1.47441, 2.948195, 3.682455],
            '11': [1.917248, 1.998833, 1.213577, 2.406758, 1.534818, 1.47, 2.657944, 40, 5, 1.593664, 3.186652, 3.980301],
            '12': [2.085965, 2.17473, 1.320372, 2.618552, 1.669882, 1.59936, 2.891843, 40, 5, 1.733906, 3.467078, 4.330567],
            '13': [2.254683, 2.350627, 1.427166, 2.830347, 1.804946, 1.72872, 3.125742, 40, 5, 1.874149, 3.747503, 4.680834],
            '14': [2.423401, 2.526524, 1.533961, 3.042141, 1.94001, 1.85808, 3.359641, 40, 5, 2.014391, 4.027928, 5.0311],
            '15': [2.607457, 2.718412, 1.650465, 3.27319, 2.087352, 1.9992, 3.614804, 40, 5, 2.167383, 4.333847, 5.413209]}


def Eula_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.464, 2.456, 0.96, 0.16, 0.16, 7, 4, 10, 0.3, 14, -0.16, -0.16, 18],
            '2': [1.5738, 2.6402, 1.032, 0.17, 0.17, 7, 4, 10, 0.3, 14, -0.17, -0.17, 18],
            '3': [1.6836, 2.8244, 1.104, 0.18, 0.18, 7, 4, 10, 0.3, 14, -0.18, -0.18, 18],
            '4': [1.83, 3.07, 1.2, 0.19, 0.19, 7, 4, 10, 0.3, 14, -0.19, -0.19, 18],
            '5': [1.9398, 3.2542, 1.272, 0.2, 0.2, 7, 4, 10, 0.3, 14, -0.2, -0.2, 18],
            '6': [2.0496, 3.4384, 1.344, 0.21, 0.21, 7, 4, 10, 0.3, 14, -0.21, -0.21, 18],
            '7': [2.196, 3.684, 1.44, 0.22, 0.22, 7, 4, 10, 0.3, 14, -0.22, -0.22, 18],
            '8': [2.3424, 3.9296, 1.536, 0.23, 0.23, 7, 4, 10, 0.3, 14, -0.23, -0.23, 18],
            '9': [2.4888, 4.1752, 1.632, 0.24, 0.24, 7, 4, 10, 0.3, 14, -0.24, -0.24, 18],
            '10': [2.6352, 4.4208, 1.728, 0.25, 0.25, 7, 4, 10, 0.3, 14, -0.25, -0.25, 18],
            '11': [2.7816, 4.6664, 1.824, 0.25, 0.25, 7, 4, 10, 0.3, 14, -0.25, -0.25, 18],
            '12': [2.928, 4.912, 1.92, 0.25, 0.25, 7, 4, 10, 0.3, 14, -0.25, -0.25, 18],
            '13': [3.111, 5.219, 2.04, 0.25, 0.25, 7, 4, 10, 0.3, 14, -0.25, -0.25, 18],
            '14': [3.294, 5.526, 2.16, 0.25, 0.25, 7, 4, 10, 0.3, 14, -0.25, -0.25, 18],
            '15': [3.477, 5.833, 2.28, 0.25, 0.25, 7, 4, 10, 0.3, 14, -0.25, -0.25, 18]}


def Eula_Q(event: Event, inter) -> List[Event]:
    info = {'1': [2.456, 3.67048, 0.74992, 30, 20, 80],
            '2': [2.6402, 3.96924, 0.81096, 30, 20, 80],
            '3': [2.8244, 4.268, 0.872, 30, 20, 80],
            '4': [3.07, 4.6948, 0.9592, 30, 20, 80],
            '5': [3.2542, 4.99356, 1.02024, 30, 20, 80],
            '6': [3.4384, 5.335, 1.09, 30, 20, 80],
            '7': [3.684, 5.80448, 1.18592, 30, 20, 80],
            '8': [3.9296, 6.27396, 1.28184, 30, 20, 80],
            '9': [4.1752, 6.74344, 1.37776, 30, 20, 80],
            '10': [4.4208, 7.2556, 1.4824, 30, 20, 80],
            '11': [4.6664, 7.84245, 1.6023, 30, 20, 80],
            '12': [4.912, 8.532586, 1.743302, 30, 20, 80],
            '13': [5.219, 9.222721, 1.884305, 30, 20, 80],
            '14': [5.526, 9.912857, 2.025307, 30, 20, 80],
            '15': [5.833, 10.665732, 2.179128, 30, 20, 80]}


def Shogun_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.39646, 0.39732, 0.4988, 0.28982, 0.28982, 0.65446, 0.99588, 25, 0.639324, 1.278377, 1.596762],
            '2': [0.42873, 0.42966, 0.5394, 0.31341, 0.31341, 0.70773, 1.07694, 25, 0.691362, 1.382431, 1.726731],
            '3': [0.461, 0.462, 0.58, 0.337, 0.337, 0.761, 1.158, 25, 0.7434, 1.486485, 1.8567],
            '4': [0.5071, 0.5082, 0.638, 0.3707, 0.3707, 0.8371, 1.2738, 25, 0.81774, 1.635134, 2.04237],
            '5': [0.53937, 0.54054, 0.6786, 0.39429, 0.39429, 0.89037, 1.35486, 25, 0.869778, 1.739187, 2.172339],
            '6': [0.57625, 0.5775, 0.725, 0.42125, 0.42125, 0.95125, 1.4475, 25, 0.92925, 1.858106, 2.320875],
            '7': [0.62696, 0.62832, 0.7888, 0.45832, 0.45832, 1.03496, 1.57488, 25, 1.011024, 2.02162, 2.525112],
            '8': [0.67767, 0.67914, 0.8526, 0.49539, 0.49539, 1.11867, 1.70226, 25, 1.092798, 2.185133, 2.729349],
            '9': [0.72838, 0.72996, 0.9164, 0.53246, 0.53246, 1.20238, 1.82964, 25, 1.174572, 2.348646, 2.933586],
            '10': [0.7837, 0.7854, 0.986, 0.5729, 0.5729, 1.2937, 1.9686, 25, 1.26378, 2.527025, 3.15639],
            '11': [0.847087, 0.848925, 1.06575, 0.619237, 0.619237, 1.398338, 2.127825, 25, 1.352988, 2.705403, 3.379194],
            '12': [0.921631, 0.92363, 1.159536, 0.67373, 0.67373, 1.521391, 2.315074, 25, 1.442196, 2.883781, 3.601998],
            '13': [0.996175, 0.998336, 1.253322, 0.728223, 0.728223, 1.644445, 2.502322, 25, 1.531404, 3.062159, 3.824802],
            '14': [1.070719, 1.073041, 1.347108, 0.782716, 0.782716, 1.767499, 2.689571, 25, 1.620612, 3.240537, 4.047606],
            '15': [1.152039, 1.154538, 1.44942, 0.842163, 0.842163, 1.901739, 2.893842, 25, 1.70982, 3.418915, 4.27041]}
    # 1, 2, 3, 4.1, 4.2, 5, z, sta, p, lp, hp
    lv = str(inter.characters[event.source].attr.normatk_lv)
    keys = __dmg_keys+['damage_type', 'view']
    config = [['A1', 0, 14,      0, '雷电将军:普攻:第1段', DamageType.NORMAL_ATK, True],
              ['A2', 1, 31-14,   0, '雷电将军:普攻:第2段', DamageType.NORMAL_ATK, True],
              ['A3', 2, 56-31,   0, '雷电将军:普攻:第3段', DamageType.NORMAL_ATK, True],
              ['A4', 3, 102-56,  0, '雷电将军:普攻:第4段', DamageType.NORMAL_ATK, True],
              ['A4', 4, 102-56,  0, '雷电将军:普攻:第4段', DamageType.NORMAL_ATK, False],
              ['A5', 5, 151-102, 0, '雷电将军:普攻:第5段', DamageType.NORMAL_ATK, True],
              ['Z',  6, 44,      0, '雷电将军:重击',       DamageType.CHARGED_ATK, True],
              ['P',  8, 30,      0, '雷电将军:下落期间', DamageType.PLUNGING_ATK, False],
              ['LP', 9, 30,      0, '雷电将军:低空下落', DamageType.PLUNGING_ATK, True],
              ['HP', 10, 30,     0, '雷电将军:低空下落', DamageType.PLUNGING_ATK, True]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.PHYSICAL, DamageType.NORMAL_ATK)


def Shogun_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.172, 0.42, 25, 0.0022, 10],
            '2': [1.2599, 0.4515, 25, 0.0023, 10],
            '3': [1.3478, 0.483, 25, 0.0024, 10],
            '4': [1.465, 0.525, 25, 0.0025, 10],
            '5': [1.5529, 0.5565, 25, 0.0026, 10],
            '6': [1.6408, 0.588, 25, 0.0027, 10],
            '7': [1.758, 0.63, 25, 0.0028, 10],
            '8': [1.8752, 0.672, 25, 0.0029, 10],
            '9': [1.9924, 0.714, 25, 0.003, 10],
            '10': [2.1096, 0.756, 25, 0.003, 10],
            '11': [2.2268, 0.798, 25, 0.003, 10],
            '12': [2.344, 0.84, 25, 0.003, 10],
            '13': [2.4905, 0.8925, 25, 0.003, 10],
            '14': [2.637, 0.945, 25, 0.003, 10],
            '15': [2.7835, 0.9975, 25, 0.003, 10]}
    # e0, e1, dur, buff, cd
    lv = str(inter.characters[event.source].attr.elemskill_lv)
    keys = __dmg_keys+['view']
    config = [['E0', 0, 35, 10*60, '雷电将军:元素战技:释放', True],
              ['E1', 1, 35, 10*60, '雷电将军:元素战技:协同', False]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.ELECTRO, DamageType.ELEM_SKILL)


def Shogun_Q(event: Event, inter) -> List[Event]:
    info = {'1': [4.008, 0.03888, 0.007262, 0.15, 0.447374, 0.43956, 0.538217, 0.30888, 0.30976, 0.739438, 0.616, 0.7436, 20, 0.639324, 1.278377, 1.596762, 1.6, 7, 18, 90],
            '2': [4.3086, 0.041796, 0.007806, 0.16, 0.477877, 0.46953, 0.574913, 0.32994, 0.33088, 0.789854, 0.658, 0.7943, 20, 0.691362, 1.382431, 1.726731, 1.7, 7, 18, 90],
            '3': [4.6092, 0.044712, 0.008351, 0.16, 0.50838, 0.4995, 0.61161, 0.351, 0.352, 0.84027, 0.7, 0.845, 20, 0.7434, 1.486485, 1.8567, 1.8, 7, 18, 90],
            '4': [5.01, 0.0486, 0.009077, 0.17, 0.54905, 0.53946, 0.660539, 0.37908, 0.38016, 0.907492, 0.756, 0.9126, 20, 0.81774, 1.635134, 2.04237, 1.9, 7, 18, 90],
            '5': [5.3106, 0.051516, 0.009622, 0.17, 0.579553, 0.56943, 0.697235, 0.40014, 0.40128, 0.957908, 0.798, 0.9633, 20, 0.869778, 1.739187, 2.172339, 2, 7, 18, 90],
            '6': [5.6112, 0.054432, 0.010166, 0.18, 0.61514, 0.604395, 0.740048, 0.42471, 0.42592, 1.016727, 0.847, 1.02245, 20, 0.92925, 1.858106, 2.320875, 2.1, 7, 18, 90],
            '7': [6.012, 0.05832, 0.010892, 0.18, 0.660894, 0.64935, 0.795093, 0.4563, 0.4576, 1.092351, 0.91, 1.0985, 20, 1.011024, 2.02162, 2.525112, 2.2, 7, 18, 90],
            '8': [6.4128, 0.062208, 0.011619, 0.19, 0.706648, 0.694305, 0.850138, 0.48789, 0.48928, 1.167975, 0.973, 1.17455, 20, 1.092798, 2.185133, 2.729349, 2.3, 7, 18, 90],
            '9': [6.8136, 0.066096, 0.012345, 0.19, 0.752402, 0.73926, 0.905183, 0.51948, 0.52096, 1.2436, 1.036, 1.2506, 20, 1.174572, 2.348646, 2.933586, 2.4, 7, 18, 90],
            '10': [7.2144, 0.069984, 0.013071, 0.2, 0.798157, 0.784215, 0.960228, 0.55107, 0.55264, 1.319224, 1.099, 1.32665, 20, 1.26378, 2.527025, 3.15639, 2.5, 7, 18, 90],
            '11': [7.6152, 0.073872, 0.013797, 0.2, 0.843911, 0.82917, 1.015273, 0.58266, 0.58432, 1.394848, 1.162, 1.4027, 20, 1.352988, 2.705403, 3.379194, 2.5, 7, 18, 90],
            '12': [8.016, 0.07776, 0.014523, 0.2, 0.889665, 0.874125, 1.070318, 0.61425, 0.616, 1.470473, 1.225, 1.47875, 20, 1.442196, 2.883781, 3.601998, 2.5, 7, 18, 90],
            '13': [8.517, 0.08262, 0.015431, 0.2, 0.935419, 0.91908, 1.125362, 0.64584, 0.64768, 1.546097, 1.288, 1.5548, 20, 1.531404, 3.062159, 3.824802, 2.5, 7, 18, 90],
            '14': [9.018, 0.08748, 0.016339, 0.2, 0.981173, 0.964035, 1.180407, 0.67743, 0.67936, 1.621721, 1.351, 1.63085, 20, 1.620612, 3.240537, 4.047606, 2.5, 7, 18, 90],
            '15': [9.519, 0.09234, 0.017246, 0.2, 1.026928, 1.00899, 1.235452, 0.70902, 0.71104, 1.697345, 1.414, 1.7069, 20, 1.70982, 3.418915, 4.27041, 2.5, 7, 18, 90]}
    # q, buff1, buff2, stack, qa1, qa2, qa3, qa4.1, qa4.2, qa5, qz1, qz2, sta, p, lp, hp, e_restore, dur, cd, energy
    lv = str(inter.characters[event.source].attr.elemburst_lv)
    stack = int(event.args.get('stack', '0'))
    info2, data = {}, []
    for i in range(len(info[lv])):
        if i == 0:
            data.append(info[lv][i]+info[lv][1]*stack)
        else:
            data.append(info[lv][i]+info[lv][2]*stack)
    info2[lv] = data
    keys = __dmg_keys+['view']
    config = [['Q',   0, 115, 18*60, '雷电将军:梦想一刀', True],
              ['QA1', 4, 12,      0, '雷电将军:梦想一心:第1段', True],
              ['QA2', 5, 32-12,   0, '雷电将军:梦想一心:第2段', True],
              ['QA3', 6, 54-32,   0, '雷电将军:梦想一心:第3段', True],
              ['QA4', 7, 95-54,   0, '雷电将军:梦想一心:第4段', True],
              ['QA4', 8, 95-54,   0, '雷电将军:梦想一心:第4段', False],
              ['QA5', 9, 139-95,  0, '雷电将军:梦想一心:第5段', True],
              ['QZ',  10, 50,     0, '雷电将军:梦想一心:重击', True],
              ['QZ',  11, 50,     0, '雷电将军:梦想一心:重击', False],
              ['QP',  13, 30,     0, '雷电将军:梦想一心:下落期间', False],
              ['QLP', 14, 30,     0, '雷电将军:梦想一心:低空下落', True],
              ['QHP', 15, 30,     0, '雷电将军:梦想一心:低空下落', True]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info2, mappings, lv,
                              ElementType.ELECTRO, DamageType.ELEM_BURST)


def Sayu_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.7224, 0.7138, 0.4343, 0.4343, 0.98126, 0.625455, 1.1309, 40, 5, 0.745878, 1.49144, 1.862889],
            '2': [0.7812, 0.7719, 0.46965, 0.46965, 1.06113, 0.676364, 1.22295, 40, 5, 0.806589, 1.612836, 2.01452],
            '3': [0.84, 0.83, 0.505, 0.505, 1.141, 0.727273, 1.315, 40, 5, 0.8673, 1.734233, 2.16615],
            '4': [0.924, 0.913, 0.5555, 0.5555, 1.2551, 0.8, 1.4465, 40, 5, 0.95403, 1.907656, 2.382765],
            '5': [0.9828, 0.9711, 0.59085, 0.59085, 1.33497, 0.850909, 1.53855, 40, 5, 1.014741, 2.029052, 2.534396],
            '6': [1.05, 1.0375, 0.63125, 0.63125, 1.42625, 0.909091, 1.64375, 40, 5, 1.084125, 2.167791, 2.707688],
            '7': [1.1424, 1.1288, 0.6868, 0.6868, 1.55176, 0.989091, 1.7884, 40, 5, 1.179528, 2.358556, 2.945964],
            '8': [1.2348, 1.2201, 0.74235, 0.74235, 1.67727, 1.069091, 1.93305, 40, 5, 1.274931, 2.549322, 3.184241],
            '9': [1.3272, 1.3114, 0.7979, 0.7979, 1.80278, 1.149091, 2.0777, 40, 5, 1.370334, 2.740087, 3.422517],
            '10': [1.428, 1.411, 0.8585, 0.8585, 1.9397, 1.236364, 2.2355, 40, 5, 1.47441, 2.948195, 3.682455],
            '11': [1.5435, 1.525125, 0.927937, 0.927937, 2.096588, 1.336364, 2.416313, 40, 5, 1.578486, 3.156303, 3.942393],
            '12': [1.679328, 1.659336, 1.009596, 1.009596, 2.281087, 1.453964, 2.628948, 40, 5, 1.682562, 3.364411, 4.202331],
            '13': [1.815156, 1.793547, 1.091255, 1.091255, 2.465587, 1.571564, 2.841584, 40, 5, 1.786638, 3.572519, 4.462269],
            '14': [1.950984, 1.927758, 1.172913, 1.172913, 2.650087, 1.689164, 3.054219, 40, 5, 1.890714, 3.780627, 4.722207],
            '15': [2.09916, 2.07417, 1.261995, 1.261995, 2.851359, 1.817455, 3.286185, 40, 5, 1.99479, 3.988735, 4.982145]}


def Sayu_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.36, 0.168, 1.584, 2.176, 0.7616, 10, 6, 11],
            '2': [0.387, 0.1806, 1.7028, 2.3392, 0.81872, 10, 6, 11],
            '3': [0.414, 0.1932, 1.8216, 2.5024, 0.87584, 10, 6, 11],
            '4': [0.45, 0.21, 1.98, 2.72, 0.952, 10, 6, 11],
            '5': [0.477, 0.2226, 2.0988, 2.8832, 1.00912, 10, 6, 11],
            '6': [0.504, 0.2352, 2.2176, 3.0464, 1.06624, 10, 6, 11],
            '7': [0.54, 0.252, 2.376, 3.264, 1.1424, 10, 6, 11],
            '8': [0.576, 0.2688, 2.5344, 3.4816, 1.21856, 10, 6, 11],
            '9': [0.612, 0.2856, 2.6928, 3.6992, 1.29472, 10, 6, 11],
            '10': [0.648, 0.3024, 2.8512, 3.9168, 1.37088, 10, 6, 11],
            '11': [0.684, 0.3192, 3.0096, 4.1344, 1.44704, 10, 6, 11],
            '12': [0.72, 0.336, 3.168, 4.352, 1.5232, 10, 6, 11],
            '13': [0.765, 0.357, 3.366, 4.624, 1.6184, 10, 6, 11],
            '14': [0.81, 0.378, 3.564, 4.896, 1.7136, 10, 6, 11],
            '15': [0.855, 0.399, 3.762, 5.168, 1.8088, 10, 6, 11]}


def Sayu_Q(event: Event, inter) -> List[Event]:
    info = {'1': [1.168, 577.3388, 0.9216, 0.52, 500.3603, 0.79872, 12, 20, 80],
            '2': [1.2556, 635.0807, 0.99072, 0.559, 550.40326, 0.858624, 12, 20, 80],
            '3': [1.3432, 697.63446, 1.05984, 0.598, 604.6165, 0.918528, 12, 20, 80],
            '4': [1.46, 765, 1.152, 0.65, 663, 0.9984, 12, 20, 80],
            '5': [1.5476, 837.17737, 1.22112, 0.689, 725.5537, 1.058304, 12, 20, 80],
            '6': [1.6352, 914.16656, 1.29024, 0.728, 792.2777, 1.118208, 12, 20, 80],
            '7': [1.752, 995.96765, 1.3824, 0.78, 863.17194, 1.19808, 12, 20, 80],
            '8': [1.8688, 1082.5804, 1.47456, 0.832, 938.2364, 1.277952, 12, 20, 80],
            '9': [1.9856, 1174.0051, 1.56672, 0.884, 1017.4711, 1.357824, 12, 20, 80],
            '10': [2.1024, 1270.2417, 1.65888, 0.936, 1100.8761, 1.437696, 12, 20, 80],
            '11': [2.2192, 1371.29, 1.75104, 0.988, 1188.4513, 1.517568, 12, 20, 80],
            '12': [2.336, 1477.1501, 1.8432, 1.04, 1280.1968, 1.59744, 12, 20, 80],
            '13': [2.482, 1587.8221, 1.9584, 1.105, 1376.1125, 1.69728, 12, 20, 80],
            '14': [2.628, 1703.3059, 2.0736, 1.17, 1476.1985, 1.79712, 12, 20, 80],
            '15': [2.774, 1823.6016, 2.1888, 1.235, 1580.4547, 1.89696, 12, 20, 80]}


def Kokomi_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.68376, 0.615384, 0.943056, 1.4832, 50, 0.568288, 1.136335, 1.419344],
            '2': [0.735042, 0.661538, 1.013785, 1.59444, 50, 0.614544, 1.228828, 1.534872],
            '3': [0.786324, 0.707692, 1.084514, 1.70568, 50, 0.6608, 1.32132, 1.6504],
            '4': [0.8547, 0.76923, 1.17882, 1.854, 50, 0.72688, 1.453452, 1.81544],
            '5': [0.905982, 0.815384, 1.249549, 1.96524, 50, 0.773136, 1.545944, 1.930968],
            '6': [0.957264, 0.861538, 1.320278, 2.07648, 50, 0.826, 1.65165, 2.063],
            '7': [1.02564, 0.923076, 1.414584, 2.2248, 50, 0.898688, 1.796995, 2.244544],
            '8': [1.094016, 0.984614, 1.50889, 2.37312, 50, 0.971376, 1.94234, 2.426088],
            '9': [1.162392, 1.046153, 1.603195, 2.52144, 50, 1.044064, 2.087686, 2.607632],
            '10': [1.230768, 1.107691, 1.697501, 2.66976, 50, 1.12336, 2.246244, 2.80568],
            '11': [1.299144, 1.16923, 1.791806, 2.81808, 50, 1.202656, 2.404802, 3.003728],
            '12': [1.36752, 1.230768, 1.886112, 2.9664, 50, 1.281952, 2.563361, 3.201776],
            '13': [1.45299, 1.307691, 2.003994, 3.1518, 50, 1.361248, 2.721919, 3.399824],
            '14': [1.53846, 1.384614, 2.121876, 3.3372, 50, 1.440544, 2.880478, 3.597872],
            '15': [1.62393, 1.461537, 2.239758, 3.5226, 50, 1.51984, 3.039036, 3.79592]}
    # 1, 2, 3, z, sta, p, lp, hp
    lv = str(inter.characters[event.source].attr.normatk_lv)
    keys = __dmg_keys+['damage_type', 'view']
    config = [['A1', 0, 10,     0, '珊瑚宫心海:普攻:第1段', DamageType.NORMAL_ATK, True],
              ['A2', 1, 36-10,  0, '珊瑚宫心海:普攻:第2段', DamageType.NORMAL_ATK, True],
              ['A3', 2, 82-36,  0, '珊瑚宫心海:普攻:第3段', DamageType.NORMAL_ATK, True],
              ['Z',  3, 45,     0, '珊瑚宫心海:重击',       DamageType.CHARGED_ATK, True],
              ['P',  5, 30,     0, '珊瑚宫心海:下落期间', DamageType.PLUNGING_ATK, False],
              ['LP', 6, 30,     0, '珊瑚宫心海:低空下落', DamageType.PLUNGING_ATK, True],
              ['HP', 7, 30,     0, '珊瑚宫心海:低空下落', DamageType.PLUNGING_ATK, True]]
    mappings = [dict(zip(keys, c)) for c in config]
    info2 = {str(i): [0.3] for i in range(1, 16)}
    config2 = [['CX1', 0, 0, 0, '珊瑚宫心海:一命:决水于溪']]
    mappings2 = [dict(zip(__dmg_keys, c)) for c in config2]
    if event.name == 'CX1':
        return _auto_generate_dmg(event, info2, mappings2, lv,
                                  ElementType.HYDRO, DamageType.NONE, depend='HP', view=False)
    else:
        return _auto_generate_dmg(event, info, mappings, lv,
                                  ElementType.HYDRO, DamageType.NORMAL_ATK)


def Kokomi_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.044, 423.7063, 1.091904, 12, 20],
            '2': [0.0473, 466.08282, 1.173797, 12, 20],
            '3': [0.0506, 511.99072, 1.25569, 12, 20],
            '4': [0.055, 561.43, 1.36488, 12, 20],
            '5': [0.0583, 614.40063, 1.446773, 12, 20],
            '6': [0.0616, 670.90265, 1.528666, 12, 20],
            '7': [0.066, 730.9361, 1.637856, 12, 20],
            '8': [0.0704, 794.50085, 1.747046, 12, 20],
            '9': [0.0748, 861.59705, 1.856237, 12, 20],
            '10': [0.0792, 932.22455, 1.965427, 12, 20],
            '11': [0.0836, 1006.3835, 2.074618, 12, 20],
            '12': [0.088, 1084.0737, 2.183808, 12, 20],
            '13': [0.0935, 1165.2954, 2.320296, 12, 20],
            '14': [0.099, 1250.0485, 2.456784, 12, 20],
            '15': [0.1045, 1338.3329, 2.593272, 12, 20]}
    # h, hf, e, dur, cd
    lv = str(inter.characters[event.source].attr.elemskill_lv)
    config = [['E', 2, 51, 20*60, '珊瑚宫心海:元素战技']]
    mappings = [dict(zip(__dmg_keys, c)) for c in config]
    config2 = [['E', 0, 1, 'stage', '珊瑚宫心海:一命:决水于溪']]
    mappings2 = [dict(zip(__heal_keys, c)) for c in config2]
    if event.type == EventType.DAMAGE:
        if not event.args.get('seq', False):
            return _auto_generate_dmg(event, info, mappings, lv,
                                      ElementType.HYDRO, DamageType.ELEM_SKILL, snapshot='Kokomi->E', view=False)
        else:
            events = []
            for i in range(7):
                if i == 0:
                    event.args['view'] = True
                t = i*120-1 if i else 0
                events.extend(_auto_generate_dmg(event, info, mappings, lv,
                                                 ElementType.HYDRO, DamageType.ELEM_SKILL, snapshot='Kokomi->E', view=False, time_bias=t))
                if i == 0:
                    event.args.pop('view')
            return events
    elif event.type == EventType.HEALTH:
        if not event.args.get('seq', False):
            return _auto_generate_heal(event, info, mappings2, lv, snapshot='Kokomi->E')
        else:
            events = []
            for i in range(7):
                t = i*120-1 if i else 0
                events.extend(_auto_generate_heal(event, info, mappings2, lv,
                                                  snapshot='Kokomi->E', time_bias=t))
            return events


def Kokomi_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.10416, 0.00808, 77.03738, 0.0484, 0.06776, 10, 18, 70, 0.070963],
            '2': [0.111972, 0.008686, 84.74218, 0.05203, 0.072842, 10, 18, 70, 0.076285],
            '3': [0.119784, 0.009292, 93.08906, 0.05566, 0.077924, 10, 18, 70, 0.081608],
            '4': [0.1302, 0.0101, 102.078, 0.0605, 0.0847, 10, 18, 70, 0.088704],
            '5': [0.138012, 0.010706, 111.70901, 0.06413, 0.089782, 10, 18, 70, 0.094026],
            '6': [0.145824, 0.011312, 121.982086, 0.06776, 0.094864, 10, 18, 70, 0.099348],
            '7': [0.15624, 0.01212, 132.89723, 0.0726, 0.10164, 10, 18, 70, 0.106445],
            '8': [0.166656, 0.012928, 144.45445, 0.07744, 0.108416, 10, 18, 70, 0.113541],
            '9': [0.177072, 0.013736, 156.65373, 0.08228, 0.115192, 10, 18, 70, 0.120637],
            '10': [0.187488, 0.014544, 169.49507, 0.08712, 0.121968, 10, 18, 70, 0.127734],
            '11': [0.197904, 0.015352, 182.97849, 0.09196, 0.128744, 10, 18, 70, 0.13483],
            '12': [0.20832, 0.01616, 197.10397, 0.0968, 0.13552, 10, 18, 70, 0.141926],
            '13': [0.22134, 0.01717, 211.87152, 0.10285, 0.14399, 10, 18, 70, 0.150797],
            '14': [0.23436, 0.01818, 227.28113, 0.1089, 0.15246, 10, 18, 70, 0.159667],
            '15': [0.24738, 0.01919, 243.33281, 0.11495, 0.16093, 10, 18, 70, 0.168538]}
    # q, h, hf, na, ca, dur, cd, energy, e
    lv = str(inter.characters[event.source].attr.elemburst_lv)
    config = [['Q', 0, 75, 18*60, '珊瑚宫心海:元素爆发']]
    mappings = [dict(zip(__dmg_keys, c)) for c in config]
    config2 = [['Q', 1, 2, 'all', '珊瑚宫心海:元素爆发']]
    mappings2 = [dict(zip(__heal_keys, c)) for c in config2]
    if event.type == EventType.DAMAGE:
        return _auto_generate_dmg(event, info, mappings, lv,
                                  ElementType.HYDRO, DamageType.ELEM_BURST, depend='HP')
    elif event.type == EventType.HEALTH:
        return _auto_generate_heal(event, info, mappings2, lv)


def Gorou_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.37754, 0.37152, 0.4945, 0.58996, 0.4386, 1.24, 0.568288, 1.136335, 1.419344],
            '2': [0.40827, 0.40176, 0.53475, 0.63798, 0.4743, 1.333, 0.614544, 1.228828, 1.534872],
            '3': [0.439, 0.432, 0.575, 0.686, 0.51, 1.426, 0.6608, 1.32132, 1.6504],
            '4': [0.4829, 0.4752, 0.6325, 0.7546, 0.561, 1.55, 0.72688, 1.453452, 1.81544],
            '5': [0.51363, 0.50544, 0.67275, 0.80262, 0.5967, 1.643, 0.773136, 1.545944, 1.930968],
            '6': [0.54875, 0.54, 0.71875, 0.8575, 0.6375, 1.736, 0.826, 1.65165, 2.063],
            '7': [0.59704, 0.58752, 0.782, 0.93296, 0.6936, 1.86, 0.898688, 1.796995, 2.244544],
            '8': [0.64533, 0.63504, 0.84525, 1.00842, 0.7497, 1.984, 0.971376, 1.94234, 2.426088],
            '9': [0.69362, 0.68256, 0.9085, 1.08388, 0.8058, 2.108, 1.044064, 2.087686, 2.607632],
            '10': [0.7463, 0.7344, 0.9775, 1.1662, 0.867, 2.232, 1.12336, 2.246244, 2.80568],
            '11': [0.79898, 0.78624, 1.0465, 1.24852, 0.9282, 2.356, 1.202656, 2.404802, 3.003728],
            '12': [0.85166, 0.83808, 1.1155, 1.33084, 0.9894, 2.48, 1.281952, 2.563361, 3.201776],
            '13': [0.90434, 0.88992, 1.1845, 1.41316, 1.0506, 2.635, 1.361248, 2.721919, 3.399824],
            '14': [0.95702, 0.94176, 1.2535, 1.49548, 1.1118, 2.79, 1.440544, 2.880478, 3.597872],
            '15': [1.0097, 0.9936, 1.3225, 1.5778, 1.173, 2.945, 1.51984, 3.039036, 3.79592]}


def Gorou_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.072, 206.16, 0.15, 10, 10],
            '2': [1.1524, 221.622, 0.15, 10, 10],
            '3': [1.2328, 237.084, 0.15, 10, 10],
            '4': [1.34, 257.7, 0.15, 10, 10],
            '5': [1.4204, 273.162, 0.15, 10, 10],
            '6': [1.5008, 288.624, 0.15, 10, 10],
            '7': [1.608, 309.24, 0.15, 10, 10],
            '8': [1.7152, 329.856, 0.15, 10, 10],
            '9': [1.8224, 350.472, 0.15, 10, 10],
            '10': [1.9296, 371.088, 0.15, 10, 10],
            '11': [2.0368, 391.704, 0.15, 10, 10],
            '12': [2.144, 412.32, 0.15, 10, 10],
            '13': [2.278, 438.09, 0.15, 10, 10],
            '14': [2.412, 463.86, 0.15, 10, 10],
            '15': [2.546, 489.63, 0.15, 10, 10]}


def Gorou_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.98216, 0.613, 9, 20, 80],
            '2': [1.055822, 0.658975, 9, 20, 80],
            '3': [1.129484, 0.70495, 9, 20, 80],
            '4': [1.2277, 0.76625, 9, 20, 80],
            '5': [1.301362, 0.812225, 9, 20, 80],
            '6': [1.375024, 0.8582, 9, 20, 80],
            '7': [1.47324, 0.9195, 9, 20, 80],
            '8': [1.571456, 0.9808, 9, 20, 80],
            '9': [1.669672, 1.0421, 9, 20, 80],
            '10': [1.767888, 1.1034, 9, 20, 80],
            '11': [1.866104, 1.1647, 9, 20, 80],
            '12': [1.96432, 1.226, 9, 20, 80],
            '13': [2.08709, 1.302625, 9, 20, 80],
            '14': [2.20986, 1.37925, 9, 20, 80],
            '15': [2.33263, 1.455875, 9, 20, 80]}


def Sara_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.36894, 0.387, 0.48504, 0.50396, 0.5805, 0.4386, 1.24, 0.568288, 1.136335, 1.419344],
            '2': [0.39897, 0.4185, 0.52452, 0.54498, 0.62775, 0.4743, 1.333, 0.614544, 1.228828, 1.534872],
            '3': [0.429, 0.45, 0.564, 0.586, 0.675, 0.51, 1.426, 0.6608, 1.32132, 1.6504],
            '4': [0.4719, 0.495, 0.6204, 0.6446, 0.7425, 0.561, 1.55, 0.72688, 1.453452, 1.81544],
            '5': [0.50193, 0.5265, 0.65988, 0.68562, 0.78975, 0.5967, 1.643, 0.773136, 1.545944, 1.930968],
            '6': [0.53625, 0.5625, 0.705, 0.7325, 0.84375, 0.6375, 1.736, 0.826, 1.65165, 2.063],
            '7': [0.58344, 0.612, 0.76704, 0.79696, 0.918, 0.6936, 1.86, 0.898688, 1.796995, 2.244544],
            '8': [0.63063, 0.6615, 0.82908, 0.86142, 0.99225, 0.7497, 1.984, 0.971376, 1.94234, 2.426088],
            '9': [0.67782, 0.711, 0.89112, 0.92588, 1.0665, 0.8058, 2.108, 1.044064, 2.087686, 2.607632],
            '10': [0.7293, 0.765, 0.9588, 0.9962, 1.1475, 0.867, 2.232, 1.12336, 2.246244, 2.80568],
            '11': [0.78078, 0.819, 1.02648, 1.06652, 1.2285, 0.9282, 2.356, 1.202656, 2.404802, 3.003728],
            '12': [0.83226, 0.873, 1.09416, 1.13684, 1.3095, 0.9894, 2.48, 1.281952, 2.563361, 3.201776],
            '13': [0.88374, 0.927, 1.16184, 1.20716, 1.3905, 1.0506, 2.635, 1.361248, 2.721919, 3.399824],
            '14': [0.93522, 0.981, 1.22952, 1.27748, 1.4715, 1.1118, 2.79, 1.440544, 2.880478, 3.597872],
            '15': [0.9867, 1.035, 1.2972, 1.3478, 1.5525, 1.173, 2.945, 1.51984, 3.039036, 3.79592]}
    # 1, 2, 3, 4, 5, R, Z, p, lp, hp
    lv = str(inter.characters[event.source].attr.normatk_lv)
    keys = __dmg_keys+['damage_type', 'view']
    config = [['A1', 0,  19,      0, '九条裟罗:普攻:第1段', DamageType.NORMAL_ATK, True],
              ['A2', 1,  44-19,   0, '九条裟罗:普攻:第2段', DamageType.NORMAL_ATK, True],
              ['A3', 2,  82-44,   0, '九条裟罗:普攻:第3段', DamageType.NORMAL_ATK, True],
              ['A4', 3,  123-82,  0, '九条裟罗:普攻:第4段', DamageType.NORMAL_ATK, True],
              ['A5', 4,  181-123, 0, '九条裟罗:普攻:第5段', DamageType.NORMAL_ATK, True],
              ['R',  5,  15,      0, '九条裟罗:瞄准射击', DamageType.CHARGED_ATK, True],
              ['Z',  6,  50,      0, '九条裟罗:重击',     DamageType.CHARGED_ATK, True],
              ['P',  7,  30,      0, '九条裟罗:下落期间', DamageType.PLUNGING_ATK, False],
              ['LP', 8,  30,      0, '九条裟罗:低空下落', DamageType.PLUNGING_ATK, True],
              ['HP', 9,  30,      0, '九条裟罗:低空下落', DamageType.PLUNGING_ATK, True]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.PHYSICAL, DamageType.NORMAL_ATK)


def Sara_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.2576, 0.4296, 6, 10],
            '2': [1.35192, 0.46182, 6, 10],
            '3': [1.44624, 0.49404, 6, 10],
            '4': [1.572, 0.537, 6, 10],
            '5': [1.66632, 0.56922, 6, 10],
            '6': [1.76064, 0.60144, 6, 10],
            '7': [1.8864, 0.6444, 6, 10],
            '8': [2.01216, 0.68736, 6, 10],
            '9': [2.13792, 0.73032, 6, 10],
            '10': [2.26368, 0.77328, 6, 10],
            '11': [2.38944, 0.81624, 6, 10],
            '12': [2.5152, 0.8592, 6, 10],
            '13': [2.6724, 0.9129, 6, 10],
            '14': [2.8296, 0.9666, 6, 10],
            '15': [2.9868, 1.0203, 6, 10]}
    # e, buff, dur, cd
    lv = str(inter.characters[event.source].attr.elemskill_lv)
    cx = event.args.get('cx', False)
    info2, data = {}, []
    for i in range(len(info[lv])):
        if i == 0:
            data.append(info[lv][i]*0.3)
        else:
            data.append(info[lv][i])
    info2[lv] = data
    config = [['E', 0, 50, 10*60, '九条裟罗:元素战技']]
    mappings = [dict(zip(__dmg_keys, c)) for c in config]
    if not cx:
        return _auto_generate_dmg(event, info, mappings, lv,
                                  ElementType.ELECTRO, DamageType.ELEM_SKILL, snapshot='Sara->E')
    else:
        return _auto_generate_dmg(event, info2, mappings, lv,
                                  ElementType.ELECTRO, DamageType.ELEM_SKILL, snapshot='Sara->E')


def Sara_Q(event: Event, inter) -> List[Event]:
    info = {'1': [4.096, 0.3412, 20, 80],
            '2': [4.4032, 0.36679, 20, 80],
            '3': [4.7104, 0.39238, 20, 80],
            '4': [5.12, 0.4265, 20, 80],
            '5': [5.4272, 0.45209, 20, 80],
            '6': [5.7344, 0.47768, 20, 80],
            '7': [6.144, 0.5118, 20, 80],
            '8': [6.5536, 0.54592, 20, 80],
            '9': [6.9632, 0.58004, 20, 80],
            '10': [7.3728, 0.61416, 20, 80],
            '11': [7.7824, 0.64828, 20, 80],
            '12': [8.192, 0.6824, 20, 80],
            '13': [8.704, 0.72505, 20, 80],
            '14': [9.216, 0.7677, 20, 80],
            '15': [9.728, 0.81035, 20, 80]}
    # q, q1, cd, energy
    lv = str(inter.characters[event.source].attr.elemburst_lv)
    keys = __dmg_keys+['view']
    config = [['Q',   0, 60, 20*60, '九条裟罗:元素爆发:金刚坏', True],
              ['Q1',  1, 0,  20*60, '九条裟罗:元素爆发:雷砾', False]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.ELECTRO, DamageType.ELEM_BURST, snapshot='Sara->Q')


def Itto_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.792318, 0.76368, 0.916416, 1.172249, 0.90472, 0.9116, 1.9092, 20, 0.818335, 1.636323, 2.043855, 60],
            '2': [0.856809, 0.82584, 0.991008, 1.267664, 0.97836, 0.9858, 2.0646, 20, 0.884943, 1.769512, 2.210216, 60],
            '3': [0.9213, 0.888, 1.0656, 1.36308, 1.052, 1.06, 2.22, 20, 0.951552, 1.902701, 2.376576, 60],
            '4': [1.01343, 0.9768, 1.17216, 1.499388, 1.1572, 1.166, 2.442, 20, 1.046707, 2.092971, 2.614234, 60],
            '5': [1.077921, 1.03896, 1.246752, 1.594804, 1.23084, 1.2402, 2.5974, 20, 1.113316, 2.22616, 2.780594, 60],
            '6': [1.151625, 1.11, 1.332, 1.70385, 1.315, 1.325, 2.775, 20, 1.18944, 2.378376, 2.97072, 60],
            '7': [1.252968, 1.20768, 1.449216, 1.853789, 1.43072, 1.4416, 3.0192, 20, 1.294111, 2.587673, 3.232143, 60],
            '8': [1.354311, 1.30536, 1.566432, 2.003728, 1.54644, 1.5582, 3.2634, 20, 1.398781, 2.79697, 3.493567, 60],
            '9': [1.455654, 1.40304, 1.683648, 2.153666, 1.66216, 1.6748, 3.5076, 20, 1.503452, 3.006267, 3.75499, 60],
            '10': [1.56621, 1.5096, 1.81152, 2.317236, 1.7884, 1.802, 3.774, 20, 1.617638, 3.234591, 4.040179, 60],
            '11': [1.692889, 1.6317, 1.95804, 2.504659, 1.93305, 1.94775, 4.07925, 20, 1.731825, 3.462915, 4.325368, 60],
            '12': [1.841863, 1.77529, 2.130348, 2.72507, 2.103158, 2.119152, 4.438224, 20, 1.846011, 3.69124, 4.610557, 60],
            '13': [1.990837, 1.918879, 2.302655, 2.94548, 2.273267, 2.290554, 4.797198, 20, 1.960197, 3.919564, 4.895747, 60],
            '14': [2.139811, 2.062469, 2.474963, 3.16589, 2.443375, 2.461956, 5.156172, 20, 2.074383, 4.147888, 5.180936, 60],
            '15': [2.302329, 2.219112, 2.662934, 3.406337, 2.628948, 2.64894, 5.54778, 20, 2.18857, 4.376212, 5.466125, 60]}


def Itto_E(event: Event, inter) -> List[Event]:
    info = {'1': [3.072, 1, 6, 2, 10],
            '2': [3.3024, 1, 6, 2, 10],
            '3': [3.5328, 1, 6, 2, 10],
            '4': [3.84, 1, 6, 2, 10],
            '5': [4.0704, 1, 6, 2, 10],
            '6': [4.3008, 1, 6, 2, 10],
            '7': [4.608, 1, 6, 2, 10],
            '8': [4.9152, 1, 6, 2, 10],
            '9': [5.2224, 1, 6, 2, 10],
            '10': [5.5296, 1, 6, 2, 10],
            '11': [5.8368, 1, 6, 2, 10],
            '12': [6.144, 1, 6, 2, 10],
            '13': [6.528, 1, 6, 2, 10],
            '14': [6.912, 1, 6, 2, 10],
            '15': [7.296, 1, 6, 2, 10]}


def Itto_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.1, 0.576, 0.2, 11, 18, 70],
            '2': [0.1, 0.6192, 0.2, 11, 18, 70],
            '3': [0.1, 0.6624, 0.2, 11, 18, 70],
            '4': [0.1, 0.72, 0.2, 11, 18, 70],
            '5': [0.1, 0.7632, 0.2, 11, 18, 70],
            '6': [0.1, 0.8064, 0.2, 11, 18, 70],
            '7': [0.1, 0.864, 0.2, 11, 18, 70],
            '8': [0.1, 0.9216, 0.2, 11, 18, 70],
            '9': [0.1, 0.9792, 0.2, 11, 18, 70],
            '10': [0.1, 1.0368, 0.2, 11, 18, 70],
            '11': [0.1, 1.0944, 0.2, 11, 18, 70],
            '12': [0.1, 1.152, 0.2, 11, 18, 70],
            '13': [0.1, 1.224, 0.2, 11, 18, 70],
            '14': [0.1, 1.296, 0.2, 11, 18, 70],
            '15': [0.1, 1.368, 0.2, 11, 18, 70]}


def Yae_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.396584, 0.385192, 0.568888, 1.428948, 50, 0.568288, 1.136335, 1.419344],
            '2': [0.426328, 0.414081, 0.611555, 1.53612, 50, 0.614544, 1.228828, 1.534872],
            '3': [0.456072, 0.442971, 0.654221, 1.643291, 50, 0.6608, 1.32132, 1.6504],
            '4': [0.49573, 0.48149, 0.71111, 1.786185, 50, 0.72688, 1.453452, 1.81544],
            '5': [0.525474, 0.510379, 0.753777, 1.893357, 50, 0.773136, 1.545944, 1.930968],
            '6': [0.555218, 0.539269, 0.796443, 2.000528, 50, 0.826, 1.65165, 2.063],
            '7': [0.594876, 0.577788, 0.853332, 2.143423, 50, 0.898688, 1.796995, 2.244544],
            '8': [0.634534, 0.616307, 0.910221, 2.286317, 50, 0.971376, 1.94234, 2.426088],
            '9': [0.674193, 0.654826, 0.96711, 2.429212, 50, 1.044064, 2.087686, 2.607632],
            '10': [0.713851, 0.693346, 1.023998, 2.572107, 50, 1.12336, 2.246244, 2.80568],
            '11': [0.75351, 0.731865, 1.080887, 2.715002, 50, 1.202656, 2.404802, 3.003728],
            '12': [0.793168, 0.770384, 1.137776, 2.857897, 50, 1.281952, 2.563361, 3.201776],
            '13': [0.842741, 0.818533, 1.208887, 3.036515, 50, 1.361248, 2.721919, 3.399824],
            '14': [0.892314, 0.866682, 1.279998, 3.215134, 50, 1.440544, 2.880478, 3.597872],
            '15': [0.941887, 0.914831, 1.351109, 3.393752, 50, 1.51984, 3.039036, 3.79592]}


def Yae_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.60672, 0.7584, 0.948, 1.185, 14, 4],
            '2': [0.652224, 0.81528, 1.0191, 1.273875, 14, 4],
            '3': [0.697728, 0.87216, 1.0902, 1.36275, 14, 4],
            '4': [0.7584, 0.948, 1.185, 1.48125, 14, 4],
            '5': [0.803904, 1.00488, 1.2561, 1.570125, 14, 4],
            '6': [0.849408, 1.06176, 1.3272, 1.659, 14, 4],
            '7': [0.91008, 1.1376, 1.422, 1.7775, 14, 4],
            '8': [0.970752, 1.21344, 1.5168, 1.896, 14, 4],
            '9': [1.031424, 1.28928, 1.6116, 2.0145, 14, 4],
            '10': [1.092096, 1.36512, 1.7064, 2.133, 14, 4],
            '11': [1.152768, 1.44096, 1.8012, 2.2515, 14, 4],
            '12': [1.21344, 1.5168, 1.896, 2.37, 14, 4],
            '13': [1.28928, 1.6116, 2.0145, 2.518125, 14, 4],
            '14': [1.36512, 1.7064, 2.133, 2.66625, 14, 4],
            '15': [1.44096, 1.8012, 2.2515, 2.814375, 14, 4]}


def Yae_Q(event: Event, inter) -> List[Event]:
    info = {'1': [2.6, 3.33816, 22, 90],
            '2': [2.795, 3.588522, 22, 90],
            '3': [2.99, 3.838884, 22, 90],
            '4': [3.25, 4.1727, 22, 90],
            '5': [3.445, 4.423062, 22, 90],
            '6': [3.64, 4.673424, 22, 90],
            '7': [3.9, 5.00724, 22, 90],
            '8': [4.16, 5.341056, 22, 90],
            '9': [4.42, 5.674872, 22, 90],
            '10': [4.68, 6.008688, 22, 90],
            '11': [4.94, 6.342504, 22, 90],
            '12': [5.2, 6.67632, 22, 90],
            '13': [5.525, 7.09359, 22, 90],
            '14': [5.85, 7.51086, 22, 90],
            '15': [6.175, 7.92813, 22, 90]}


def Heizou_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.374736, 0.36852, 0.5106, 0.147824, 0.162608, 0.192176, 0.614496, 0.73, 25, 0.568288, 1.136335, 1.419344],
            '2': [0.402841, 0.396159, 0.548895, 0.158911, 0.174804, 0.206589, 0.660583, 0.78475, 25, 0.614544, 1.228828, 1.534872],
            '3': [0.430946, 0.423798, 0.58719, 0.169998, 0.186999, 0.221002, 0.70667, 0.8395, 25, 0.6608, 1.32132, 1.6504],
            '4': [0.46842, 0.46065, 0.63825, 0.18478, 0.20326, 0.24022, 0.76812, 0.9125, 25, 0.72688, 1.453452, 1.81544],
            '5': [0.496525, 0.488289, 0.676545, 0.195867, 0.215456, 0.254633, 0.814207, 0.96725, 25, 0.773136, 1.545944, 1.930968],
            '6': [0.52463, 0.515928, 0.71484, 0.206954, 0.227651, 0.269046, 0.860294, 1.022, 25, 0.826, 1.65165, 2.063],
            '7': [0.562104, 0.55278, 0.7659, 0.221736, 0.243912, 0.288264, 0.921744, 1.095, 25, 0.898688, 1.796995, 2.244544],
            '8': [0.599578, 0.589632, 0.81696, 0.236518, 0.260173, 0.307482, 0.983194, 1.168, 25, 0.971376, 1.94234, 2.426088],
            '9': [0.637051, 0.626484, 0.86802, 0.251301, 0.276434, 0.326699, 1.044643, 1.241, 25, 1.044064, 2.087686, 2.607632],
            '10': [0.674525, 0.663336, 0.91908, 0.266083, 0.292694, 0.345917, 1.106093, 1.314, 25, 1.12336, 2.246244, 2.80568],
            '11': [0.711998, 0.700188, 0.97014, 0.280866, 0.308955, 0.365134, 1.167542, 1.387, 25, 1.202656, 2.404802, 3.003728],
            '12': [0.749472, 0.73704, 1.0212, 0.295648, 0.325216, 0.384352, 1.228992, 1.46, 25, 1.281952, 2.563361, 3.201776],
            '13': [0.796314, 0.783105, 1.085025, 0.314126, 0.345542, 0.408374, 1.305804, 1.55125, 25, 1.361248, 2.721919, 3.399824],
            '14': [0.843156, 0.82917, 1.14885, 0.332604, 0.365868, 0.432396, 1.382616, 1.6425, 25, 1.440544, 2.880478, 3.597872],
            '15': [0.889998, 0.875235, 1.212675, 0.351082, 0.386194, 0.456418, 1.459428, 1.73375, 25, 1.51984, 3.039036, 3.79592]}


def Heizou_E(event: Event, inter) -> List[Event]:
    info = {'1': [2.2752, 0.5688, 1.1376, 10, 60],
            '2': [2.44584, 0.61146, 1.22292, 10, 60],
            '3': [2.61648, 0.65412, 1.30824, 10, 60],
            '4': [2.844, 0.711, 1.422, 10, 60],
            '5': [3.01464, 0.75366, 1.50732, 10, 60],
            '6': [3.18528, 0.79632, 1.59264, 10, 60],
            '7': [3.4128, 0.8532, 1.7064, 10, 60],
            '8': [3.64032, 0.91008, 1.82016, 10, 60],
            '9': [3.86784, 0.96696, 1.93392, 10, 60],
            '10': [4.09536, 1.02384, 2.04768, 10, 60],
            '11': [4.32288, 1.08072, 2.16144, 10, 60],
            '12': [4.5504, 1.1376, 2.2752, 10, 60],
            '13': [4.8348, 1.2087, 2.4174, 10, 60],
            '14': [5.1192, 1.2798, 2.5596, 10, 60],
            '15': [5.4036, 1.3509, 2.7018, 10, 60]}


def Heizou_Q(event: Event, inter) -> List[Event]:
    info = {'1': [3.14688, 0.21456, 12, 40],
            '2': [3.382896, 0.230652, 12, 40],
            '3': [3.618912, 0.246744, 12, 40],
            '4': [3.9336, 0.2682, 12, 40],
            '5': [4.169616, 0.284292, 12, 40],
            '6': [4.405632, 0.300384, 12, 40],
            '7': [4.72032, 0.32184, 12, 40],
            '8': [5.035008, 0.343296, 12, 40],
            '9': [5.349696, 0.364752, 12, 40],
            '10': [5.664384, 0.386208, 12, 40],
            '11': [5.979072, 0.407664, 12, 40],
            '12': [6.29376, 0.42912, 12, 40],
            '13': [6.68712, 0.45594, 12, 40],
            '14': [7.08048, 0.48276, 12, 40],
            '15': [7.47384, 0.50958, 12, 40]}


def Yelan_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.40678, 0.39044, 0.516, 0.32508, 0.4386, 1.24, 0.11576, 0.568288, 1.136335, 1.419344],
            '2': [0.43989, 0.42222, 0.558, 0.35154, 0.4743, 1.333, 0.124442, 0.614544, 1.228828, 1.534872],
            '3': [0.473, 0.454, 0.6, 0.378, 0.51, 1.426, 0.133124, 0.6608, 1.32132, 1.6504],
            '4': [0.5203, 0.4994, 0.66, 0.4158, 0.561, 1.55, 0.1447, 0.72688, 1.453452, 1.81544],
            '5': [0.55341, 0.53118, 0.702, 0.44226, 0.5967, 1.643, 0.153382, 0.773136, 1.545944, 1.930968],
            '6': [0.59125, 0.5675, 0.75, 0.4725, 0.6375, 1.736, 0.162064, 0.826, 1.65165, 2.063],
            '7': [0.64328, 0.61744, 0.816, 0.51408, 0.6936, 1.86, 0.17364, 0.898688, 1.796995, 2.244544],
            '8': [0.69531, 0.66738, 0.882, 0.55566, 0.7497, 1.984, 0.185216, 0.971376, 1.94234, 2.426088],
            '9': [0.74734, 0.71732, 0.948, 0.59724, 0.8058, 2.108, 0.196792, 1.044064, 2.087686, 2.607632],
            '10': [0.8041, 0.7718, 1.02, 0.6426, 0.867, 2.232, 0.208368, 1.12336, 2.246244, 2.80568],
            '11': [0.86086, 0.82628, 1.092, 0.68796, 0.9282, 2.356, 0.219944, 1.202656, 2.404802, 3.003728],
            '12': [0.91762, 0.88076, 1.164, 0.73332, 0.9894, 2.48, 0.23152, 1.281952, 2.563361, 3.201776],
            '13': [0.97438, 0.93524, 1.236, 0.77868, 1.0506, 2.635, 0.24599, 1.361248, 2.721919, 3.399824],
            '14': [1.03114, 0.98972, 1.308, 0.82404, 1.1118, 2.79, 0.26046, 1.440544, 2.880478, 3.597872],
            '15': [1.0879, 1.0442, 1.38, 0.8694, 1.173, 2.945, 0.27493, 1.51984, 3.039036, 3.79592]}
    # 1, 2, 3, 4, R, Z, asp, p, lp, hp
    lv = str(inter.characters[event.source].attr.normatk_lv)
    keys = __dmg_keys+['damage_type', 'view', 'elem_type', 'depend']
    config = [['A1',  0,  14,      0, '夜兰:普攻:第1段', DamageType.NORMAL_ATK, True, ElementType.PHYSICAL],
              ['A2',  1,  29-14,   0, '夜兰:普攻:第2段',
                  DamageType.NORMAL_ATK, True, ElementType.PHYSICAL, 'ATK'],
              ['A3',  2,  54-29,   0, '夜兰:普攻:第3段',
                  DamageType.NORMAL_ATK, True, ElementType.PHYSICAL, 'ATK'],
              ['A4',  3,  88-54,   0, '夜兰:普攻:第4段',
                  DamageType.NORMAL_ATK, True, ElementType.PHYSICAL, 'ATK'],
              ['A4',  3,  102-54,  0, '夜兰:普攻:第4段',
                  DamageType.NORMAL_ATK, False, ElementType.PHYSICAL, 'ATK'],
              ['R',   4,  15,      0, '夜兰:瞄准射击',
                  DamageType.CHARGED_ATK, True, ElementType.PHYSICAL, 'ATK'],
              ['Z',   5,  86,      0, '夜兰:重击',
                  DamageType.CHARGED_ATK, True, ElementType.HYDRO, 'ATK'],
              ['ASP', 6,  32,      0, '夜兰:破局矢',
                  DamageType.CHARGED_ATK, True, ElementType.HYDRO, 'HP'],
              ['P',   7,  30,      0, '夜兰:下落期间',
                  DamageType.PLUNGING_ATK, False, ElementType.PHYSICAL, 'ATK'],
              ['LP',  8,  30,      0, '夜兰:低空下落',
                  DamageType.PLUNGING_ATK, True, ElementType.PHYSICAL, 'ATK'],
              ['HP',  9,  30,      0, '夜兰:低空下落',
                  DamageType.PLUNGING_ATK, True, ElementType.PHYSICAL, 'ATK']]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.PHYSICAL, DamageType.NORMAL_ATK)


def Yelan_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.226136, 0.34, 3, 10],
            '2': [0.243096, 0.34, 3, 10],
            '3': [0.260056, 0.34, 3, 10],
            '4': [0.28267, 0.34, 3, 10],
            '5': [0.29963, 0.34, 3, 10],
            '6': [0.31659, 0.34, 3, 10],
            '7': [0.339204, 0.34, 3, 10],
            '8': [0.361818, 0.34, 3, 10],
            '9': [0.384431, 0.34, 3, 10],
            '10': [0.407045, 0.34, 3, 10],
            '11': [0.429658, 0.34, 3, 10],
            '12': [0.452272, 0.34, 3, 10],
            '13': [0.480539, 0.34, 3, 10],
            '14': [0.508806, 0.34, 3, 10],
            '15': [0.537073, 0.34, 3, 10]}
    # e, buff, dur, cd
    lv = str(inter.characters[event.source].attr.elemskill_lv)
    config = [['E', 0, 40, 10*60, '夜兰:元素战技']]
    mappings = [dict(zip(__dmg_keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.HYDRO, DamageType.ELEM_SKILL, depend='HP')


def Yelan_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.07308, 0.04872, 15, 18, 70],
            '2': [0.078561, 0.052374, 15, 18, 70],
            '3': [0.084042, 0.056028, 15, 18, 70],
            '4': [0.09135, 0.0609, 15, 18, 70],
            '5': [0.096831, 0.064554, 15, 18, 70],
            '6': [0.102312, 0.068208, 15, 18, 70],
            '7': [0.10962, 0.07308, 15, 18, 70],
            '8': [0.116928, 0.077952, 15, 18, 70],
            '9': [0.124236, 0.082824, 15, 18, 70],
            '10': [0.131544, 0.087696, 15, 18, 70],
            '11': [0.138852, 0.092568, 15, 18, 70],
            '12': [0.14616, 0.09744, 15, 18, 70],
            '13': [0.155295, 0.10353, 15, 18, 70],
            '14': [0.16443, 0.10962, 15, 18, 70],
            '15': [0.173565, 0.11571, 15, 18, 70]}
    # q, q1, dur, cd, energy
    lv = str(inter.characters[event.source].attr.elemburst_lv)
    keys = __dmg_keys+['view']
    config = [['Q',   0, 91, 18*60, '夜兰:元素爆发', True],
              ['Q1',  1, 0,  18*60, '夜兰:玄掷玲珑', False],
              ['Q1',  1, 0,  18*60, '夜兰:玄掷玲珑', False],
              ['Q1',  1, 0,  18*60, '夜兰:玄掷玲珑', False]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.HYDRO, DamageType.ELEM_BURST, depend='HP')


def Yelan_CXDMG(event: Event, inter) -> List[Event]:
    info = {'1':  [1.56*0.11576, 0.14],
            '2':  [1.56*0.124442, 0.14],
            '3':  [1.56*0.133124, 0.14],
            '4':  [1.56*0.1447, 0.14],
            '5':  [1.56*0.153382, 0.14],
            '6':  [1.56*0.162064, 0.14],
            '7':  [1.56*0.17364, 0.14],
            '8':  [1.56*0.185216, 0.14],
            '9':  [1.56*0.196792, 0.14],
            '10': [1.56*0.208368, 0.14],
            '11': [1.56*0.219944, 0.14],
            '12': [1.56*0.23152, 0.14],
            '13': [1.56*0.24599, 0.14],
            '14': [1.56*0.26046, 0.14],
            '15': [1.56*0.27493, 0.14]}
    lv = str(inter.characters[event.source].attr.normatk_lv)
    keys = __dmg_keys+['damage_type']
    config = [['CX6',  0, 0, 0, '夜兰:六命:破局矢', DamageType.CHARGED_ATK],
              ['CX2',  1, 0, 0, '夜兰:二命:玄掷玲珑', DamageType.ELEM_BURST]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.HYDRO, DamageType.CHARGED_ATK, depend='HP', view=False)


def Aloy_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.2112, 0.2376, 0.4312, 0.528, 0.65648, 0.4386, 1.24, 0.568288, 1.136335, 1.419344],
            '2': [0.2256, 0.2538, 0.4606, 0.564, 0.70124, 0.4743, 1.333, 0.614544, 1.228828, 1.534872],
            '3': [0.24, 0.27, 0.49, 0.6, 0.746, 0.51, 1.426, 0.6608, 1.32132, 1.6504],
            '4': [0.2592, 0.2916, 0.5292, 0.648, 0.80568, 0.561, 1.55, 0.72688, 1.453452, 1.81544],
            '5': [0.2736, 0.3078, 0.5586, 0.684, 0.85044, 0.5967, 1.643, 0.773136, 1.545944, 1.930968],
            '6': [0.2904, 0.3267, 0.5929, 0.726, 0.90266, 0.6375, 1.736, 0.826, 1.65165, 2.063],
            '7': [0.312, 0.351, 0.637, 0.78, 0.9698, 0.6936, 1.86, 0.898688, 1.796995, 2.244544],
            '8': [0.3336, 0.3753, 0.6811, 0.834, 1.03694, 0.7497, 1.984, 0.971376, 1.94234, 2.426088],
            '9': [0.3552, 0.3996, 0.7252, 0.888, 1.10408, 0.8058, 2.108, 1.044064, 2.087686, 2.607632],
            '10': [0.3768, 0.4239, 0.7693, 0.942, 1.17122, 0.867, 2.232, 1.12336, 2.246244, 2.80568],
            '11': [0.3984, 0.4482, 0.8134, 0.996, 1.23836, 0.9282, 2.356, 1.202656, 2.404802, 3.003728],
            '12': [0.42, 0.4725, 0.8575, 1.05, 1.3055, 0.9894, 2.48, 1.281952, 2.563361, 3.201776],
            '13': [0.4416, 0.4968, 0.9016, 1.104, 1.37264, 1.0506, 2.635, 1.361248, 2.721919, 3.399824],
            '14': [0.4632, 0.5211, 0.9457, 1.158, 1.43978, 1.1118, 2.79, 1.440544, 2.880478, 3.597872],
            '15': [0.4848, 0.5454, 0.9898, 1.212, 1.50692, 1.173, 2.945, 1.51984, 3.039036, 3.79592]}


def Aloy_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.776, 0.4, 0.12, 6, 0.05845, 0.1169, 0.17535, 0.29225, 10, 20],
            '2': [1.9092, 0.43, 0.12, 6, 0.06195, 0.1239, 0.18585, 0.30975, 10, 20],
            '3': [2.0424, 0.46, 0.12, 6, 0.06545, 0.1309, 0.19635, 0.32725, 10, 20],
            '4': [2.22, 0.5, 0.13, 6, 0.07, 0.14, 0.21, 0.35, 10, 20],
            '5': [2.3532, 0.53, 0.13, 6, 0.0735, 0.147, 0.2205, 0.3675, 10, 20],
            '6': [2.4864, 0.56, 0.13, 6, 0.077, 0.154, 0.231, 0.385, 10, 20],
            '7': [2.664, 0.6, 0.14, 6, 0.08155, 0.1631, 0.24465, 0.40775, 10, 20],
            '8': [2.8416, 0.64, 0.14, 6, 0.0861, 0.1722, 0.2583, 0.4305, 10, 20],
            '9': [3.0192, 0.68, 0.14, 6, 0.09065, 0.1813, 0.27195, 0.45325, 10, 20],
            '10': [3.1968, 0.72, 0.15, 6, 0.0952, 0.1904, 0.2856, 0.476, 10, 20],
            '11': [3.3744, 0.76, 0.15, 6, 0.09975, 0.1995, 0.29925, 0.49875, 10, 20],
            '12': [3.552, 0.8, 0.15, 6, 0.1043, 0.2086, 0.3129, 0.5215, 10, 20],
            '13': [3.774, 0.85, 0.15, 6, 0.10885, 0.2177, 0.32655, 0.54425, 10, 20],
            '14': [3.996, 0.9, 0.15, 6, 0.1134, 0.2268, 0.3402, 0.567, 10, 20],
            '15': [4.218, 0.95, 0.15, 6, 0.11795, 0.2359, 0.35385, 0.58975, 10, 20]}


def Aloy_Q(event: Event, inter) -> List[Event]:
    info = {'1': [3.592, 12, 40],
            '2': [3.8614, 12, 40],
            '3': [4.1308, 12, 40],
            '4': [4.49, 12, 40],
            '5': [4.7594, 12, 40],
            '6': [5.0288, 12, 40],
            '7': [5.388, 12, 40],
            '8': [5.7472, 12, 40],
            '9': [6.1064, 12, 40],
            '10': [6.4656, 12, 40],
            '11': [6.8248, 12, 40],
            '12': [7.184, 12, 40],
            '13': [7.633, 12, 40],
            '14': [8.082, 12, 40],
            '15': [8.531, 12, 40]}


def Shenhe_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.43258, 0.40248, 0.5332, 0.26316, 0.26316, 0.65618, 1.106734, 25, 0.639324, 1.278377, 1.596762],
            '2': [0.46779, 0.43524, 0.5766, 0.28458, 0.28458, 0.70959, 1.196817, 25, 0.691362, 1.382431, 1.726731],
            '3': [0.503, 0.468, 0.62, 0.306, 0.306, 0.763, 1.2869, 25, 0.7434, 1.486485, 1.8567],
            '4': [0.5533, 0.5148, 0.682, 0.3366, 0.3366, 0.8393, 1.41559, 25, 0.81774, 1.635134, 2.04237],
            '5': [0.58851, 0.54756, 0.7254, 0.35802, 0.35802, 0.89271, 1.505673, 25, 0.869778, 1.739187, 2.172339],
            '6': [0.62875, 0.585, 0.775, 0.3825, 0.3825, 0.95375, 1.608625, 25, 0.92925, 1.858106, 2.320875],
            '7': [0.68408, 0.63648, 0.8432, 0.41616, 0.41616, 1.03768, 1.750184, 25, 1.011024, 2.02162, 2.525112],
            '8': [0.73941, 0.68796, 0.9114, 0.44982, 0.44982, 1.12161, 1.891743, 25, 1.092798, 2.185133, 2.729349],
            '9': [0.79474, 0.73944, 0.9796, 0.48348, 0.48348, 1.20554, 2.033302, 25, 1.174572, 2.348646, 2.933586],
            '10': [0.8551, 0.7956, 1.054, 0.5202, 0.5202, 1.2971, 2.18773, 25, 1.26378, 2.527025, 3.15639],
            '11': [0.91546, 0.85176, 1.1284, 0.55692, 0.55692, 1.38866, 2.342158, 25, 1.352988, 2.705403, 3.379194],
            '12': [0.97582, 0.90792, 1.2028, 0.59364, 0.59364, 1.48022, 2.496586, 25, 1.442196, 2.883781, 3.601998],
            '13': [1.03618, 0.96408, 1.2772, 0.63036, 0.63036, 1.57178, 2.651014, 25, 1.531404, 3.062159, 3.824802],
            '14': [1.09654, 1.02024, 1.3516, 0.66708, 0.66708, 1.66334, 2.805442, 25, 1.620612, 3.240537, 4.047606],
            '15': [1.1569, 1.0764, 1.426, 0.7038, 0.7038, 1.7549, 2.95987, 25, 1.70982, 3.418915, 4.27041]}
    # 1, 2, 3, 4.1, 4.2, 5, z, sta, p, lp, hp
    lv = str(inter.characters[event.source].attr.normatk_lv)
    keys = __dmg_keys+['damage_type', 'view']
    config = [['A1', 0, 13,      0, '申鹤:普攻:第1段', DamageType.NORMAL_ATK, True],
              ['A2', 1, 44-13,   0, '申鹤:普攻:第2段', DamageType.NORMAL_ATK, True],
              ['A3', 2, 68-44,   0, '申鹤:普攻:第3段', DamageType.NORMAL_ATK, True],
              ['A4', 3, 97-68,   0, '申鹤:普攻:第4段', DamageType.NORMAL_ATK, True],
              ['A4', 4, 103-68,  0, '申鹤:普攻:第4段', DamageType.NORMAL_ATK, False],
              ['A5', 5, 135-103, 0, '申鹤:普攻:第5段', DamageType.NORMAL_ATK, True],
              ['Z',  6, 54,      0, '申鹤:重击',       DamageType.CHARGED_ATK, True],
              ['P',  8, 30,      0, '申鹤:下落期间', DamageType.PLUNGING_ATK, False],
              ['LP', 9, 30,      0, '申鹤:低空下落', DamageType.PLUNGING_ATK, True],
              ['HP', 10, 30,     0, '申鹤:低空下落', DamageType.PLUNGING_ATK, True]]
    mappings = [dict(zip(keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.PHYSICAL, DamageType.NORMAL_ATK)


def Shenhe_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.392, 1.888, 0.45656, 10, 15, 5, 7, 10, 15],
            '2': [1.4964, 2.0296, 0.490802, 10, 15, 5, 7, 10, 15],
            '3': [1.6008, 2.1712, 0.525044, 10, 15, 5, 7, 10, 15],
            '4': [1.74, 2.36, 0.5707, 10, 15, 5, 7, 10, 15],
            '5': [1.8444, 2.5016, 0.604942, 10, 15, 5, 7, 10, 15],
            '6': [1.9488, 2.6432, 0.639184, 10, 15, 5, 7, 10, 15],
            '7': [2.088, 2.832, 0.68484, 10, 15, 5, 7, 10, 15],
            '8': [2.2272, 3.0208, 0.730496, 10, 15, 5, 7, 10, 15],
            '9': [2.3664, 3.2096, 0.776152, 10, 15, 5, 7, 10, 15],
            '10': [2.5056, 3.3984, 0.821808, 10, 15, 5, 7, 10, 15],
            '11': [2.6448, 3.5872, 0.867464, 10, 15, 5, 7, 10, 15],
            '12': [2.784, 3.776, 0.91312, 10, 15, 5, 7, 10, 15],
            '13': [2.958, 4.012, 0.97019, 10, 15, 5, 7, 10, 15],
            '14': [3.132, 4.248, 1.02726, 10, 15, 5, 7, 10, 15],
            '15': [3.306, 4.484, 1.08433, 10, 15, 5, 7, 10, 15]}
    # e, ee, b, dur1, dur2, times1, times2, cd1, cd2
    lv = str(inter.characters[event.source].attr.elemskill_lv)
    config = [['E',   0, 29, 10*60, '申鹤:元素战技:点按'],
              ['EE',  1, 44, 15*60, '申鹤:元素战技:长按']]
    mappings = [dict(zip(__dmg_keys, c)) for c in config]
    return _auto_generate_dmg(event, info, mappings, lv,
                              ElementType.CRYO, DamageType.ELEM_SKILL)


def Shenhe_Q(event: Event, inter) -> List[Event]:
    info = {'1': [1.008, 0.06, 0.3312, 12, 20, 80],
            '2': [1.0836, 0.07, 0.35604, 12, 20, 80],
            '3': [1.1592, 0.08, 0.38088, 12, 20, 80],
            '4': [1.26, 0.09, 0.414, 12, 20, 80],
            '5': [1.3356, 0.1, 0.43884, 12, 20, 80],
            '6': [1.4112, 0.11, 0.46368, 12, 20, 80],
            '7': [1.512, 0.12, 0.4968, 12, 20, 80],
            '8': [1.6128, 0.13, 0.52992, 12, 20, 80],
            '9': [1.7136, 0.14, 0.56304, 12, 20, 80],
            '10': [1.8144, 0.15, 0.59616, 12, 20, 80],
            '11': [1.9152, 0.15, 0.62928, 12, 20, 80],
            '12': [2.016, 0.15, 0.6624, 12, 20, 80],
            '13': [2.142, 0.15, 0.7038, 12, 20, 80],
            '14': [2.268, 0.15, 0.7452, 12, 20, 80],
            '15': [2.394, 0.15, 0.7866, 12, 20, 80]}
    # q0, res, q1, dur, cd, energy
    lv = str(inter.characters[event.source].attr.elemburst_lv)
    keys = __dmg_keys+['snapshot', 'view']
    config = [['Q',   0, 75, 20*60, '申鹤:元素爆发:技能伤害', '',          True],
              ['Q1',  2, 0,  20*60, '申鹤:元素爆发:持续伤害', 'Shenhe->Q', False]]
    mappings = [dict(zip(keys, c)) for c in config]
    if not event.args.get('seq', False):
        return _auto_generate_dmg(event, info, mappings, lv,
                                  ElementType.CRYO, DamageType.ELEM_BURST)
    else:
        events = []
        proto = deepcopy(event)
        proto.name = 'Q'
        events.extend(_auto_generate_dmg(proto, info, mappings, lv,
                                         ElementType.CRYO, DamageType.ELEM_BURST))
        proto.name = 'Q1'
        dur = 6 if not event.args.get(
            'cx', inter.characters[event.source].attr.cx_lv >= 2) else 9
        for i in range(dur):
            t1 = i*120+59
            events.extend(_auto_generate_dmg(proto, info, mappings, lv,
                                             ElementType.CRYO, DamageType.ELEM_BURST, time_bias=t1))
            t2 = i*120+89
            events.extend(_auto_generate_dmg(proto, info, mappings, lv,
                                             ElementType.CRYO, DamageType.ELEM_BURST, time_bias=t2))
        return events


def Yunjin_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.40506, 0.40248, 0.22962, 0.2752, 0.23994, 0.2881, 0.67338, 1.2169, 25, 0.639324, 1.278377, 1.596762],
            '2': [0.43803, 0.43524, 0.24831, 0.2976, 0.25947, 0.31155, 0.72819, 1.31595, 25, 0.691362, 1.382431, 1.726731],
            '3': [0.471, 0.468, 0.267, 0.32, 0.279, 0.335, 0.783, 1.415, 25, 0.7434, 1.486485, 1.8567],
            '4': [0.5181, 0.5148, 0.2937, 0.352, 0.3069, 0.3685, 0.8613, 1.5565, 25, 0.81774, 1.635134, 2.04237],
            '5': [0.55107, 0.54756, 0.31239, 0.3744, 0.32643, 0.39195, 0.91611, 1.65555, 25, 0.869778, 1.739187, 2.172339],
            '6': [0.58875, 0.585, 0.33375, 0.4, 0.34875, 0.41875, 0.97875, 1.76875, 25, 0.92925, 1.858106, 2.320875],
            '7': [0.64056, 0.63648, 0.36312, 0.4352, 0.37944, 0.4556, 1.06488, 1.9244, 25, 1.011024, 2.02162, 2.525112],
            '8': [0.69237, 0.68796, 0.39249, 0.4704, 0.41013, 0.49245, 1.15101, 2.08005, 25, 1.092798, 2.185133, 2.729349],
            '9': [0.74418, 0.73944, 0.42186, 0.5056, 0.44082, 0.5293, 1.23714, 2.2357, 25, 1.174572, 2.348646, 2.933586],
            '10': [0.8007, 0.7956, 0.4539, 0.544, 0.4743, 0.5695, 1.3311, 2.4055, 25, 1.26378, 2.527025, 3.15639],
            '11': [0.85722, 0.85176, 0.48594, 0.5824, 0.50778, 0.6097, 1.42506, 2.600062, 25, 1.352988, 2.705403, 3.379194],
            '12': [0.91374, 0.90792, 0.51798, 0.6208, 0.54126, 0.6499, 1.51902, 2.828868, 25, 1.442196, 2.883781, 3.601998],
            '13': [0.97026, 0.96408, 0.55002, 0.6592, 0.57474, 0.6901, 1.61298, 3.057673, 25, 1.531404, 3.062159, 3.824802],
            '14': [1.02678, 1.02024, 0.58206, 0.6976, 0.60822, 0.7303, 1.70694, 3.286479, 25, 1.620612, 3.240537, 4.047606],
            '15': [1.0833, 1.0764, 0.6141, 0.736, 0.6417, 0.7705, 1.8009, 3.536085, 25, 1.70982, 3.418915, 4.27041]}


def Yunjin_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.12, 1155.4323, 1.4912, 2.6096, 3.728, 9],
            '2': [0.129, 1270.9916, 1.60304, 2.80532, 4.0076, 9],
            '3': [0.138, 1396.1808, 1.71488, 3.00104, 4.2872, 9],
            '4': [0.15, 1531, 1.864, 3.262, 4.66, 9],
            '5': [0.159, 1675.4491, 1.97584, 3.45772, 4.9396, 9],
            '6': [0.168, 1829.5282, 2.08768, 3.65344, 5.2192, 9],
            '7': [0.18, 1993.2372, 2.2368, 3.9144, 5.592, 9],
            '8': [0.192, 2166.5762, 2.38592, 4.17536, 5.9648, 9],
            '9': [0.204, 2349.545, 2.53504, 4.43632, 6.3376, 9],
            '10': [0.216, 2542.1438, 2.68416, 4.69728, 6.7104, 9],
            '11': [0.228, 2744.3726, 2.83328, 4.95824, 7.0832, 9],
            '12': [0.24, 2956.2312, 2.9824, 5.2192, 7.456, 9],
            '13': [0.255, 3177.72, 3.1688, 5.5454, 7.922, 9],
            '14': [0.27, 3408.8384, 3.3552, 5.8716, 8.388, 9],
            '15': [0.285, 3649.587, 3.5416, 6.1978, 8.854, 9]}


def Yunjin_Q(event: Event, inter) -> List[Event]:
    info = {'1': [2.44, 0.3216, 12, 15, 60, 30],
            '2': [2.623, 0.34572, 12, 15, 60, 30],
            '3': [2.806, 0.36984, 12, 15, 60, 30],
            '4': [3.05, 0.402, 12, 15, 60, 30],
            '5': [3.233, 0.42612, 12, 15, 60, 30],
            '6': [3.416, 0.45024, 12, 15, 60, 30],
            '7': [3.66, 0.4824, 12, 15, 60, 30],
            '8': [3.904, 0.51456, 12, 15, 60, 30],
            '9': [4.148, 0.54672, 12, 15, 60, 30],
            '10': [4.392, 0.57888, 12, 15, 60, 30],
            '11': [4.636, 0.61104, 12, 15, 60, 30],
            '12': [4.88, 0.6432, 12, 15, 60, 30],
            '13': [5.185, 0.6834, 12, 15, 60, 30],
            '14': [5.49, 0.7236, 12, 15, 60, 30],
            '15': [5.795, 0.7638, 12, 15, 60, 30]}


def Shinobu_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.48762, 0.44548, 0.5934, 0.7611, 0.556334, 0.667652, 20, 0.639324, 1.278377, 1.596762],
            '2': [0.52731, 0.48174, 0.6417, 0.82305, 0.601617, 0.721996, 20, 0.691362, 1.382431, 1.726731],
            '3': [0.567, 0.518, 0.69, 0.885, 0.6469, 0.77634, 20, 0.7434, 1.486485, 1.8567],
            '4': [0.6237, 0.5698, 0.759, 0.9735, 0.71159, 0.853974, 20, 0.81774, 1.635134, 2.04237],
            '5': [0.66339, 0.60606, 0.8073, 1.03545, 0.756873, 0.908318, 20, 0.869778, 1.739187, 2.172339],
            '6': [0.70875, 0.6475, 0.8625, 1.10625, 0.808625, 0.970425, 20, 0.92925, 1.858106, 2.320875],
            '7': [0.77112, 0.70448, 0.9384, 1.2036, 0.879784, 1.055822, 20, 1.011024, 2.02162, 2.525112],
            '8': [0.83349, 0.76146, 1.0143, 1.30095, 0.950943, 1.14122, 20, 1.092798, 2.185133, 2.729349],
            '9': [0.89586, 0.81844, 1.0902, 1.3983, 1.022102, 1.226617, 20, 1.174572, 2.348646, 2.933586],
            '10': [0.9639, 0.8806, 1.173, 1.5045, 1.09973, 1.319778, 20, 1.26378, 2.527025, 3.15639],
            '11': [1.03194, 0.94276, 1.2558, 1.6107, 1.177358, 1.412939, 20, 1.352988, 2.705403, 3.379194],
            '12': [1.09998, 1.00492, 1.3386, 1.7169, 1.254986, 1.5061, 20, 1.442196, 2.883781, 3.601998],
            '13': [1.16802, 1.06708, 1.4214, 1.8231, 1.332614, 1.59926, 20, 1.531404, 3.062159, 3.824802],
            '14': [1.23606, 1.12924, 1.5042, 1.9293, 1.410242, 1.692421, 20, 1.620612, 3.240537, 4.047606],
            '15': [1.3041, 1.1914, 1.587, 2.0355, 1.48787, 1.785582, 20, 1.70982, 3.418915, 4.27041]}


def Shinobu_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.75712, 0.03, 288.8908, 0.2524, 0.3, 12, 15],
            '2': [0.813904, 0.03225, 317.7839, 0.27133, 0.3, 12, 15],
            '3': [0.870688, 0.0345, 349.08475, 0.29026, 0.3, 12, 15],
            '4': [0.9464, 0.0375, 382.79337, 0.3155, 0.3, 12, 15],
            '5': [1.003184, 0.03975, 418.90976, 0.33443, 0.3, 12, 15],
            '6': [1.059968, 0.042, 457.43387, 0.35336, 0.3, 12, 15],
            '7': [1.13568, 0.045, 498.36575, 0.3786, 0.3, 12, 15],
            '8': [1.211392, 0.048, 541.7054, 0.40384, 0.3, 12, 15],
            '9': [1.287104, 0.051, 587.4528, 0.42908, 0.3, 12, 15],
            '10': [1.362816, 0.054, 635.608, 0.45432, 0.3, 12, 15],
            '11': [1.438528, 0.057, 686.1709, 0.47956, 0.3, 12, 15],
            '12': [1.51424, 0.06, 739.14154, 0.5048, 0.3, 12, 15],
            '13': [1.60888, 0.06375, 794.52, 0.53635, 0.3, 12, 15],
            '14': [1.70352, 0.0675, 852.3062, 0.5679, 0.3, 12, 15],
            '15': [1.79816, 0.07125, 912.5001, 0.59945, 0.3, 12, 15]}


def Shinobu_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.036048, 0.252336, 0.432576, 2, 3.5, 15, 60],
            '2': [0.038752, 0.271261, 0.465019, 2, 3.5, 15, 60],
            '3': [0.041455, 0.290186, 0.497462, 2, 3.5, 15, 60],
            '4': [0.04506, 0.31542, 0.54072, 2, 3.5, 15, 60],
            '5': [0.047764, 0.334345, 0.573163, 2, 3.5, 15, 60],
            '6': [0.050467, 0.35327, 0.605606, 2, 3.5, 15, 60],
            '7': [0.054072, 0.378504, 0.648864, 2, 3.5, 15, 60],
            '8': [0.057677, 0.403738, 0.692122, 2, 3.5, 15, 60],
            '9': [0.061282, 0.428971, 0.735379, 2, 3.5, 15, 60],
            '10': [0.064886, 0.454205, 0.778637, 2, 3.5, 15, 60],
            '11': [0.068491, 0.479438, 0.821894, 2, 3.5, 15, 60],
            '12': [0.072096, 0.504672, 0.865152, 2, 3.5, 15, 60],
            '13': [0.076602, 0.536214, 0.919224, 2, 3.5, 15, 60],
            '14': [0.081108, 0.567756, 0.973296, 2, 3.5, 15, 60],
            '15': [0.085614, 0.599298, 1.027368, 2, 3.5, 15, 60]}


def Ayato_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.449617, 0.471572, 0.586124, 0.294485, 0.756043, 1.295297, 20, 0.639324, 1.278377, 1.596762],
            '2': [0.486213, 0.509956, 0.633832, 0.318455, 0.817582, 1.400728, 20, 0.691362, 1.382431, 1.726731],
            '3': [0.52281, 0.54834, 0.68154, 0.342425, 0.87912, 1.506159, 20, 0.7434, 1.486485, 1.8567],
            '4': [0.575091, 0.603174, 0.749694, 0.376667, 0.967032, 1.656775, 20, 0.81774, 1.635134, 2.04237],
            '5': [0.611688, 0.641558, 0.797402, 0.400637, 1.02857, 1.762206, 20, 0.869778, 1.739187, 2.172339],
            '6': [0.653512, 0.685425, 0.851925, 0.428031, 1.0989, 1.882699, 20, 0.92925, 1.858106, 2.320875],
            '7': [0.711022, 0.745742, 0.926894, 0.465698, 1.195603, 2.048376, 20, 1.011024, 2.02162, 2.525112],
            '8': [0.768531, 0.80606, 1.001864, 0.503365, 1.292306, 2.214054, 20, 1.092798, 2.185133, 2.729349],
            '9': [0.82604, 0.866377, 1.076833, 0.541031, 1.38901, 2.379731, 20, 1.174572, 2.348646, 2.933586],
            '10': [0.888777, 0.932178, 1.158618, 0.582122, 1.494504, 2.56047, 20, 1.26378, 2.527025, 3.15639],
            '11': [0.951514, 0.997979, 1.240403, 0.623213, 1.599998, 2.741209, 20, 1.352988, 2.705403, 3.379194],
            '12': [1.014251, 1.06378, 1.322188, 0.664304, 1.705493, 2.921948, 20, 1.442196, 2.883781, 3.601998],
            '13': [1.076989, 1.12958, 1.403972, 0.705395, 1.810987, 3.102688, 20, 1.531404, 3.062159, 3.824802],
            '14': [1.139726, 1.195381, 1.485757, 0.746487, 1.916482, 3.283427, 20, 1.620612, 3.240537, 4.047606],
            '15': [1.202463, 1.261182, 1.567542, 0.787577, 2.021976, 3.464166, 20, 1.70982, 3.418915, 4.27041]}


def Ayato_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.5289, 0.5891, 0.6493, 6, 0.005611, 1.0148, 6, 12],
            '2': [0.57195, 0.63705, 0.70215, 6, 0.006067, 1.0974, 6, 12],
            '3': [0.615, 0.685, 0.755, 6, 0.006524, 1.18, 6, 12],
            '4': [0.6765, 0.7535, 0.8305, 6, 0.007176, 1.298, 6, 12],
            '5': [0.71955, 0.80145, 0.88335, 6, 0.007633, 1.3806, 6, 12],
            '6': [0.76875, 0.85625, 0.94375, 6, 0.008155, 1.475, 6, 12],
            '7': [0.8364, 0.9316, 1.0268, 6, 0.008873, 1.6048, 6, 12],
            '8': [0.90405, 1.00695, 1.10985, 6, 0.00959, 1.7346, 6, 12],
            '9': [0.9717, 1.0823, 1.1929, 6, 0.010308, 1.8644, 6, 12],
            '10': [1.0455, 1.1645, 1.2835, 6, 0.011091, 2.006, 6, 12],
            '11': [1.1193, 1.2467, 1.3741, 6, 0.011874, 2.1476, 6, 12],
            '12': [1.1931, 1.3289, 1.4647, 6, 0.012657, 2.2892, 6, 12],
            '13': [1.2669, 1.4111, 1.5553, 6, 0.013439, 2.4308, 6, 12],
            '14': [1.3407, 1.4933, 1.6459, 6, 0.014222, 2.5724, 6, 12],
            '15': [1.4145, 1.5755, 1.7365, 6, 0.015005, 2.714, 6, 12]}


def Ayato_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.66456, 0.11, 18, 20, 80],
            '2': [0.714402, 0.12, 18, 20, 80],
            '3': [0.764244, 0.13, 18, 20, 80],
            '4': [0.8307, 0.14, 18, 20, 80],
            '5': [0.880542, 0.15, 18, 20, 80],
            '6': [0.930384, 0.16, 18, 20, 80],
            '7': [0.99684, 0.17, 18, 20, 80],
            '8': [1.063296, 0.18, 18, 20, 80],
            '9': [1.129752, 0.19, 18, 20, 80],
            '10': [1.196208, 0.2, 18, 20, 80],
            '11': [1.262664, 0.2, 18, 20, 80],
            '12': [1.32912, 0.2, 18, 20, 80],
            '13': [1.41219, 0.2, 18, 20, 80],
            '14': [1.49526, 0.2, 18, 20, 80],
            '15': [1.57833, 0.2, 18, 20, 80]}


def Collei_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.43602, 0.42656, 0.54094, 0.68026, 0.4386, 1.24, 0.568288, 1.136335, 1.419344],
            '2': [0.47151, 0.46128, 0.58497, 0.73563, 0.4743, 1.333, 0.614544, 1.228828, 1.534872],
            '3': [0.507, 0.496, 0.629, 0.791, 0.51, 1.426, 0.6608, 1.32132, 1.6504],
            '4': [0.5577, 0.5456, 0.6919, 0.8701, 0.561, 1.55, 0.72688, 1.453452, 1.81544],
            '5': [0.59319, 0.58032, 0.73593, 0.92547, 0.5967, 1.643, 0.773136, 1.545944, 1.930968],
            '6': [0.63375, 0.62, 0.78625, 0.98875, 0.6375, 1.736, 0.826, 1.65165, 2.063],
            '7': [0.68952, 0.67456, 0.85544, 1.07576, 0.6936, 1.86, 0.898688, 1.796995, 2.244544],
            '8': [0.74529, 0.72912, 0.92463, 1.16277, 0.7497, 1.984, 0.971376, 1.94234, 2.426088],
            '9': [0.80106, 0.78368, 0.99382, 1.24978, 0.8058, 2.108, 1.044064, 2.087686, 2.607632],
            '10': [0.8619, 0.8432, 1.0693, 1.3447, 0.867, 2.232, 1.12336, 2.246244, 2.80568],
            '11': [0.92274, 0.90272, 1.14478, 1.43962, 0.9282, 2.356, 1.202656, 2.404802, 3.003728],
            '12': [0.98358, 0.96224, 1.22026, 1.53454, 0.9894, 2.48, 1.281952, 2.563361, 3.201776],
            '13': [1.04442, 1.02176, 1.29574, 1.62946, 1.0506, 2.635, 1.361248, 2.721919, 3.399824],
            '14': [1.10526, 1.08128, 1.37122, 1.72438, 1.1118, 2.79, 1.440544, 2.880478, 3.597872],
            '15': [1.1661, 1.1408, 1.4467, 1.8193, 1.173, 2.945, 1.51984, 3.039036, 3.79592]}


def Collei_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.512, 12],
            '2': [1.6254, 12],
            '3': [1.7388, 12],
            '4': [1.89, 12],
            '5': [2.0034, 12],
            '6': [2.1168, 12],
            '7': [2.268, 12],
            '8': [2.4192, 12],
            '9': [2.5704, 12],
            '10': [2.7216, 12],
            '11': [2.8728, 12],
            '12': [3.024, 12],
            '13': [3.213, 12],
            '14': [3.402, 12],
            '15': [3.591, 12]}


def Collei_Q(event: Event, inter) -> List[Event]:
    info = {'1': [2.01824, 0.43248, 6, 15, 60],
            '2': [2.169608, 0.464916, 6, 15, 60],
            '3': [2.320976, 0.497352, 6, 15, 60],
            '4': [2.5228, 0.5406, 6, 15, 60],
            '5': [2.674168, 0.573036, 6, 15, 60],
            '6': [2.825536, 0.605472, 6, 15, 60],
            '7': [3.02736, 0.64872, 6, 15, 60],
            '8': [3.229184, 0.691968, 6, 15, 60],
            '9': [3.431008, 0.735216, 6, 15, 60],
            '10': [3.632832, 0.778464, 6, 15, 60],
            '11': [3.834656, 0.821712, 6, 15, 60],
            '12': [4.03648, 0.86496, 6, 15, 60],
            '13': [4.28876, 0.91902, 6, 15, 60],
            '14': [4.54104, 0.97308, 6, 15, 60],
            '15': [4.79332, 1.02714, 6, 15, 60]}


def Dori_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.90214, 0.410736, 0.431204, 1.28398, 0.625455, 1.1309, 40, 5, 0.745878, 1.49144, 1.862889],
            '2': [0.97557, 0.444168, 0.466302, 1.38849, 0.676364, 1.22295, 40, 5, 0.806589, 1.612836, 2.01452],
            '3': [1.049, 0.4776, 0.5014, 1.493, 0.727273, 1.315, 40, 5, 0.8673, 1.734233, 2.16615],
            '4': [1.1539, 0.52536, 0.55154, 1.6423, 0.8, 1.4465, 40, 5, 0.95403, 1.907656, 2.382765],
            '5': [1.22733, 0.558792, 0.586638, 1.74681, 0.850909, 1.53855, 40, 5, 1.014741, 2.029052, 2.534396],
            '6': [1.31125, 0.597, 0.62675, 1.86625, 0.909091, 1.64375, 40, 5, 1.084125, 2.167791, 2.707688],
            '7': [1.42664, 0.649536, 0.681904, 2.03048, 0.989091, 1.7884, 40, 5, 1.179528, 2.358556, 2.945964],
            '8': [1.54203, 0.702072, 0.737058, 2.19471, 1.069091, 1.93305, 40, 5, 1.274931, 2.549322, 3.184241],
            '9': [1.65742, 0.754608, 0.792212, 2.35894, 1.149091, 2.0777, 40, 5, 1.370334, 2.740087, 3.422517],
            '10': [1.7833, 0.81192, 0.85238, 2.5381, 1.236364, 2.2355, 40, 5, 1.47441, 2.948195, 3.682455],
            '11': [1.90918, 0.869232, 0.912548, 2.71726, 1.336364, 2.416313, 40, 5, 1.578486, 3.156303, 3.942393],
            '12': [2.03506, 0.926544, 0.972716, 2.89642, 1.453964, 2.628948, 40, 5, 1.682562, 3.364411, 4.202331],
            '13': [2.16094, 0.983856, 1.032884, 3.07558, 1.571564, 2.841584, 40, 5, 1.786638, 3.572519, 4.462269],
            '14': [2.28682, 1.041168, 1.093052, 3.25474, 1.689164, 3.054219, 40, 5, 1.890714, 3.780627, 4.722207],
            '15': [2.4127, 1.09848, 1.15322, 3.4339, 1.817455, 3.286185, 40, 5, 1.99479, 3.988735, 4.982145]}


def Dori_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.4728, 0.3156, 9],
            '2': [1.58326, 0.33927, 9],
            '3': [1.69372, 0.36294, 9],
            '4': [1.841, 0.3945, 9],
            '5': [1.95146, 0.41817, 9],
            '6': [2.06192, 0.44184, 9],
            '7': [2.2092, 0.4734, 9],
            '8': [2.35648, 0.50496, 9],
            '9': [2.50376, 0.53652, 9],
            '10': [2.65104, 0.56808, 9],
            '11': [2.79832, 0.59964, 9],
            '12': [2.9456, 0.6312, 9],
            '13': [3.1297, 0.67065, 9],
            '14': [3.3138, 0.7101, 9],
            '15': [3.4979, 0.74955, 9]}


def Dori_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.158824, 0.0667, 641.97955, 1.6, 12, 20, 80],
            '2': [0.170736, 0.071702, 706.18646, 1.7, 12, 20, 80],
            '3': [0.182648, 0.076705, 775.7439, 1.8, 12, 20, 80],
            '4': [0.19853, 0.083375, 850.6519, 1.9, 12, 20, 80],
            '5': [0.210442, 0.088377, 930.9105, 2, 12, 20, 80],
            '6': [0.222354, 0.09338, 1016.5197, 2.1, 12, 20, 80],
            '7': [0.238236, 0.10005, 1107.4795, 2.2, 12, 20, 80],
            '8': [0.254118, 0.10672, 1203.7898, 2.3, 12, 20, 80],
            '9': [0.270001, 0.11339, 1305.4507, 2.4, 12, 20, 80],
            '10': [0.285883, 0.12006, 1412.4622, 2.5, 12, 20, 80],
            '11': [0.301766, 0.12673, 1524.8242, 2.5, 12, 20, 80],
            '12': [0.317648, 0.1334, 1642.5369, 2.5, 12, 20, 80],
            '13': [0.337501, 0.141737, 1765.6, 2.5, 12, 20, 80],
            '14': [0.357354, 0.150075, 1894.0138, 2.5, 12, 20, 80],
            '15': [0.377207, 0.158412, 2027.7781, 2.5, 12, 20, 80]}


def Tighnari_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.44634, 0.41968, 0.26445, 0.68628, 0.4386, 1.24, 0.872, 0.386, 0.568288, 1.136335, 1.419344],
            '2': [0.48267, 0.45384, 0.285975, 0.74214, 0.4743, 1.333, 0.9374, 0.41495, 0.614544, 1.228828, 1.534872],
            '3': [0.519, 0.488, 0.3075, 0.798, 0.51, 1.426, 1.0028, 0.4439, 0.6608, 1.32132, 1.6504],
            '4': [0.5709, 0.5368, 0.33825, 0.8778, 0.561, 1.55, 1.09, 0.4825, 0.72688, 1.453452, 1.81544],
            '5': [0.60723, 0.57096, 0.359775, 0.93366, 0.5967, 1.643, 1.1554, 0.51145, 0.773136, 1.545944, 1.930968],
            '6': [0.64875, 0.61, 0.384375, 0.9975, 0.6375, 1.736, 1.2208, 0.5404, 0.826, 1.65165, 2.063],
            '7': [0.70584, 0.66368, 0.4182, 1.08528, 0.6936, 1.86, 1.308, 0.579, 0.898688, 1.796995, 2.244544],
            '8': [0.76293, 0.71736, 0.452025, 1.17306, 0.7497, 1.984, 1.3952, 0.6176, 0.971376, 1.94234, 2.426088],
            '9': [0.82002, 0.77104, 0.48585, 1.26084, 0.8058, 2.108, 1.4824, 0.6562, 1.044064, 2.087686, 2.607632],
            '10': [0.8823, 0.8296, 0.52275, 1.3566, 0.867, 2.232, 1.5696, 0.6948, 1.12336, 2.246244, 2.80568],
            '11': [0.94458, 0.88816, 0.55965, 1.45236, 0.9282, 2.356, 1.6568, 0.7334, 1.202656, 2.404802, 3.003728],
            '12': [1.00686, 0.94672, 0.59655, 1.54812, 0.9894, 2.48, 1.744, 0.772, 1.281952, 2.563361, 3.201776],
            '13': [1.06914, 1.00528, 0.63345, 1.64388, 1.0506, 2.635, 1.853, 0.82025, 1.361248, 2.721919, 3.399824],
            '14': [1.13142, 1.06384, 0.67035, 1.73964, 1.1118, 2.79, 1.962, 0.8685, 1.440544, 2.880478, 3.597872],
            '15': [1.1937, 1.1224, 0.70725, 1.8354, 1.173, 2.945, 2.071, 0.91675, 1.51984, 3.039036, 3.79592]}


def Tighnari_E(event: Event, inter) -> List[Event]:
    info = {'1': [1.496, 8, 12, 12],
            '2': [1.6082, 8, 12, 12],
            '3': [1.7204, 8, 12, 12],
            '4': [1.87, 8, 12, 12],
            '5': [1.9822, 8, 12, 12],
            '6': [2.0944, 8, 12, 12],
            '7': [2.244, 8, 12, 12],
            '8': [2.3936, 8, 12, 12],
            '9': [2.5432, 8, 12, 12],
            '10': [2.6928, 8, 12, 12],
            '11': [2.8424, 8, 12, 12],
            '12': [2.992, 8, 12, 12],
            '13': [3.179, 8, 12, 12],
            '14': [3.366, 8, 12, 12],
            '15': [3.553, 8, 12, 12]}


def Tighnari_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.5562, 0.6798, 12, 40],
            '2': [0.597915, 0.730785, 12, 40],
            '3': [0.63963, 0.78177, 12, 40],
            '4': [0.69525, 0.84975, 12, 40],
            '5': [0.736965, 0.900735, 12, 40],
            '6': [0.77868, 0.95172, 12, 40],
            '7': [0.8343, 1.0197, 12, 40],
            '8': [0.88992, 1.08768, 12, 40],
            '9': [0.94554, 1.15566, 12, 40],
            '10': [1.00116, 1.22364, 12, 40],
            '11': [1.05678, 1.29162, 12, 40],
            '12': [1.1124, 1.3596, 12, 40],
            '13': [1.181925, 1.444575, 12, 40],
            '14': [1.25145, 1.52955, 12, 40],
            '15': [1.320975, 1.614525, 12, 40]}


def PlayerGirl_Wind_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.44462, 0.4343, 0.52976, 0.58308, 0.70778, 0.559, 0.7224, 20, 0.639324, 1.278377, 1.596762],
            '2': [0.48081, 0.46965, 0.57288, 0.63054, 0.76539, 0.6045, 0.7812, 20, 0.691362, 1.382431, 1.726731],
            '3': [0.517, 0.505, 0.616, 0.678, 0.823, 0.65, 0.84, 20, 0.7434, 1.486485, 1.8567],
            '4': [0.5687, 0.5555, 0.6776, 0.7458, 0.9053, 0.715, 0.924, 20, 0.81774, 1.635134, 2.04237],
            '5': [0.60489, 0.59085, 0.72072, 0.79326, 0.96291, 0.7605, 0.9828, 20, 0.869778, 1.739187, 2.172339],
            '6': [0.64625, 0.63125, 0.77, 0.8475, 1.02875, 0.8125, 1.05, 20, 0.92925, 1.858106, 2.320875],
            '7': [0.70312, 0.6868, 0.83776, 0.92208, 1.11928, 0.884, 1.1424, 20, 1.011024, 2.02162, 2.525112],
            '8': [0.75999, 0.74235, 0.90552, 0.99666, 1.20981, 0.9555, 1.2348, 20, 1.092798, 2.185133, 2.729349],
            '9': [0.81686, 0.7979, 0.97328, 1.07124, 1.30034, 1.027, 1.3272, 20, 1.174572, 2.348646, 2.933586],
            '10': [0.8789, 0.8585, 1.0472, 1.1526, 1.3991, 1.105, 1.428, 20, 1.26378, 2.527025, 3.15639],
            '11': [0.94094, 0.9191, 1.12112, 1.23396, 1.49786, 1.183, 1.5288, 20, 1.352988, 2.705403, 3.379194],
            '12': [1.00298, 0.9797, 1.19504, 1.31532, 1.59662, 1.261, 1.6296, 20, 1.442196, 2.883781, 3.601998],
            '13': [1.06502, 1.0403, 1.26896, 1.39668, 1.69538, 1.339, 1.7304, 20, 1.531404, 3.062159, 3.824802],
            '14': [1.12706, 1.1009, 1.34288, 1.47804, 1.79414, 1.417, 1.8312, 20, 1.620612, 3.240537, 4.047606],
            '15': [1.1891, 1.1615, 1.4168, 1.5594, 1.8929, 1.495, 1.932, 20, 1.70982, 3.418915, 4.27041]}


def PlayerGirl_Wind_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.12, 0.168, 1.76, 1.92, 5, 8],
            '2': [0.129, 0.1806, 1.892, 2.064, 5, 8],
            '3': [0.138, 0.1932, 2.024, 2.208, 5, 8],
            '4': [0.15, 0.21, 2.2, 2.4, 5, 8],
            '5': [0.159, 0.2226, 2.332, 2.544, 5, 8],
            '6': [0.168, 0.2352, 2.464, 2.688, 5, 8],
            '7': [0.18, 0.252, 2.64, 2.88, 5, 8],
            '8': [0.192, 0.2688, 2.816, 3.072, 5, 8],
            '9': [0.204, 0.2856, 2.992, 3.264, 5, 8],
            '10': [0.216, 0.3024, 3.168, 3.456, 5, 8],
            '11': [0.228, 0.3192, 3.344, 3.648, 5, 8],
            '12': [0.24, 0.336, 3.52, 3.84, 5, 8],
            '13': [0.255, 0.357, 3.74, 4.08, 5, 8],
            '14': [0.27, 0.378, 3.96, 4.32, 5, 8],
            '15': [0.285, 0.399, 4.18, 4.56, 5, 8]}


def PlayerGirl_Wind_Q(event: Event, inter) -> List[Event]:
    info = {'1': [0.808, 0.248, 6, 15, 60],
            '2': [0.8686, 0.2666, 6, 15, 60],
            '3': [0.9292, 0.2852, 6, 15, 60],
            '4': [1.01, 0.31, 6, 15, 60],
            '5': [1.0706, 0.3286, 6, 15, 60],
            '6': [1.1312, 0.3472, 6, 15, 60],
            '7': [1.212, 0.372, 6, 15, 60],
            '8': [1.2928, 0.3968, 6, 15, 60],
            '9': [1.3736, 0.4216, 6, 15, 60],
            '10': [1.4544, 0.4464, 6, 15, 60],
            '11': [1.5352, 0.4712, 6, 15, 60],
            '12': [1.616, 0.496, 6, 15, 60],
            '13': [1.717, 0.527, 6, 15, 60],
            '14': [1.818, 0.558, 6, 15, 60],
            '15': [1.919, 0.589, 6, 15, 60]}


def PlayerGirl_Rock_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.44462, 0.4343, 0.52976, 0.58308, 0.70778, 0.559, 0.7224, 20, 0.639324, 1.278377, 1.596762],
            '2': [0.48081, 0.46965, 0.57288, 0.63054, 0.76539, 0.6045, 0.7812, 20, 0.691362, 1.382431, 1.726731],
            '3': [0.517, 0.505, 0.616, 0.678, 0.823, 0.65, 0.84, 20, 0.7434, 1.486485, 1.8567],
            '4': [0.5687, 0.5555, 0.6776, 0.7458, 0.9053, 0.715, 0.924, 20, 0.81774, 1.635134, 2.04237],
            '5': [0.60489, 0.59085, 0.72072, 0.79326, 0.96291, 0.7605, 0.9828, 20, 0.869778, 1.739187, 2.172339],
            '6': [0.64625, 0.63125, 0.77, 0.8475, 1.02875, 0.8125, 1.05, 20, 0.92925, 1.858106, 2.320875],
            '7': [0.70312, 0.6868, 0.83776, 0.92208, 1.11928, 0.884, 1.1424, 20, 1.011024, 2.02162, 2.525112],
            '8': [0.75999, 0.74235, 0.90552, 0.99666, 1.20981, 0.9555, 1.2348, 20, 1.092798, 2.185133, 2.729349],
            '9': [0.81686, 0.7979, 0.97328, 1.07124, 1.30034, 1.027, 1.3272, 20, 1.174572, 2.348646, 2.933586],
            '10': [0.8789, 0.8585, 1.0472, 1.1526, 1.3991, 1.105, 1.428, 20, 1.26378, 2.527025, 3.15639],
            '11': [0.94094, 0.9191, 1.12112, 1.23396, 1.49786, 1.183, 1.5288, 20, 1.352988, 2.705403, 3.379194],
            '12': [1.00298, 0.9797, 1.19504, 1.31532, 1.59662, 1.261, 1.6296, 20, 1.442196, 2.883781, 3.601998],
            '13': [1.06502, 1.0403, 1.26896, 1.39668, 1.69538, 1.339, 1.7304, 20, 1.531404, 3.062159, 3.824802],
            '14': [1.12706, 1.1009, 1.34288, 1.47804, 1.79414, 1.417, 1.8312, 20, 1.620612, 3.240537, 4.047606],
            '15': [1.1891, 1.1615, 1.4168, 1.5594, 1.8929, 1.495, 1.932, 20, 1.70982, 3.418915, 4.27041]}


def PlayerGirl_Rock_E(event: Event, inter) -> List[Event]:
    info = {'1': [2.48, 30, 8],
            '2': [2.666, 30, 8],
            '3': [2.852, 30, 8],
            '4': [3.1, 30, 8],
            '5': [3.286, 30, 8],
            '6': [3.472, 30, 8],
            '7': [3.72, 30, 8],
            '8': [3.968, 30, 8],
            '9': [4.216, 30, 8],
            '10': [4.464, 30, 8],
            '11': [4.712, 30, 8],
            '12': [4.96, 30, 8],
            '13': [5.27, 30, 8],
            '14': [5.58, 30, 8],
            '15': [5.89, 30, 8]}


def PlayerGirl_Rock_Q(event: Event, inter) -> List[Event]:
    info = {'1': [1.48, 15, 15, 60],
            '2': [1.591, 15, 15, 60],
            '3': [1.702, 15, 15, 60],
            '4': [1.85, 15, 15, 60],
            '5': [1.961, 15, 15, 60],
            '6': [2.072, 15, 15, 60],
            '7': [2.22, 15, 15, 60],
            '8': [2.368, 15, 15, 60],
            '9': [2.516, 15, 15, 60],
            '10': [2.664, 15, 15, 60],
            '11': [2.812, 15, 15, 60],
            '12': [2.96, 15, 15, 60],
            '13': [3.145, 15, 15, 60],
            '14': [3.33, 15, 15, 60],
            '15': [3.515, 15, 15, 60]}


def PlayerGirl_Electric_A(event: Event, inter) -> List[Event]:
    info = {'1': [0.44462, 0.4343, 0.52976, 0.58308, 0.70778, 0.559, 0.7224, 20, 0.639324, 1.278377, 1.596762],
            '2': [0.48081, 0.46965, 0.57288, 0.63054, 0.76539, 0.6045, 0.7812, 20, 0.691362, 1.382431, 1.726731],
            '3': [0.517, 0.505, 0.616, 0.678, 0.823, 0.65, 0.84, 20, 0.7434, 1.486485, 1.8567],
            '4': [0.5687, 0.5555, 0.6776, 0.7458, 0.9053, 0.715, 0.924, 20, 0.81774, 1.635134, 2.04237],
            '5': [0.60489, 0.59085, 0.72072, 0.79326, 0.96291, 0.7605, 0.9828, 20, 0.869778, 1.739187, 2.172339],
            '6': [0.64625, 0.63125, 0.77, 0.8475, 1.02875, 0.8125, 1.05, 20, 0.92925, 1.858106, 2.320875],
            '7': [0.70312, 0.6868, 0.83776, 0.92208, 1.11928, 0.884, 1.1424, 20, 1.011024, 2.02162, 2.525112],
            '8': [0.75999, 0.74235, 0.90552, 0.99666, 1.20981, 0.9555, 1.2348, 20, 1.092798, 2.185133, 2.729349],
            '9': [0.81686, 0.7979, 0.97328, 1.07124, 1.30034, 1.027, 1.3272, 20, 1.174572, 2.348646, 2.933586],
            '10': [0.8789, 0.8585, 1.0472, 1.1526, 1.3991, 1.105, 1.428, 20, 1.26378, 2.527025, 3.15639],
            '11': [0.94094, 0.9191, 1.12112, 1.23396, 1.49786, 1.183, 1.5288, 20, 1.352988, 2.705403, 3.379194],
            '12': [1.00298, 0.9797, 1.19504, 1.31532, 1.59662, 1.261, 1.6296, 20, 1.442196, 2.883781, 3.601998],
            '13': [1.06502, 1.0403, 1.26896, 1.39668, 1.69538, 1.339, 1.7304, 20, 1.531404, 3.062159, 3.824802],
            '14': [1.12706, 1.1009, 1.34288, 1.47804, 1.79414, 1.417, 1.8312, 20, 1.620612, 3.240537, 4.047606],
            '15': [1.1891, 1.1615, 1.4168, 1.5594, 1.8929, 1.495, 1.932, 20, 1.70982, 3.418915, 4.27041]}


def PlayerGirl_Electric_E(event: Event, inter) -> List[Event]:
    info = {'1': [0.78664, 3, 15, 0.2, 6, 13.5],
            '2': [0.845638, 3, 15, 0.2, 6, 13.5],
            '3': [0.904636, 3, 15, 0.2, 6, 13.5],
            '4': [0.9833, 3.5, 15, 0.2, 6, 13.5],
            '5': [1.042298, 3.5, 15, 0.2, 6, 13.5],
            '6': [1.101296, 3.5, 15, 0.2, 6, 13.5],
            '7': [1.17996, 4, 15, 0.2, 6, 13.5],
            '8': [1.258624, 4, 15, 0.2, 6, 13.5],
            '9': [1.337288, 4, 15, 0.2, 6, 13.5],
            '10': [1.415952, 4, 15, 0.2, 6, 13.5],
            '11': [1.494616, 4, 15, 0.2, 6, 13.5],
            '12': [1.57328, 4, 15, 0.2, 6, 13.5],
            '13': [1.67161, 4, 15, 0.2, 6, 13.5],
            '14': [1.76994, 4, 15, 0.2, 6, 13.5],
            '15': [1.86827, 4, 15, 0.2, 6, 13.5]}


def PlayerGirl_Electric_Q(event: Event, inter) -> List[Event]:
    info = {'1': [1.144, 0.328, 0.8, 12, 20, 80],
            '2': [1.2298, 0.3526, 0.8, 12, 20, 80],
            '3': [1.3156, 0.3772, 0.8, 12, 20, 80],
            '4': [1.43, 0.41, 0.9, 12, 20, 80],
            '5': [1.5158, 0.4346, 0.9, 12, 20, 80],
            '6': [1.6016, 0.4592, 0.9, 12, 20, 80],
            '7': [1.716, 0.492, 1, 12, 20, 80],
            '8': [1.8304, 0.5248, 1, 12, 20, 80],
            '9': [1.9448, 0.5576, 1, 12, 20, 80],
            '10': [2.0592, 0.5904, 1, 12, 20, 80],
            '11': [2.1736, 0.6232, 1, 12, 20, 80],
            '12': [2.288, 0.656, 1, 12, 20, 80],
            '13': [2.431, 0.697, 1, 12, 20, 80],
            '14': [2.574, 0.738, 1, 12, 20, 80],
            '15': [2.717, 0.779, 1, 12, 20, 80]}


# ---weapon---

def Kagotsurube_Isshin_WP(event: Event, inter) -> List[Event]:
    info = [1.8]
    # refine: int = inter.weapons[event.source].refine-1
    event.args['elem_type'] = ElementType.PHYSICAL
    event.scaler = info[0]
    event.desc = f'{c_trans[event.source]}:笼钓瓶一心'
    return [event]


def Kings_Squire_WP(event: Event, inter) -> List[Event]:
    info = [1, 1.2, 1.4, 1.6, 1.8]
    refine: int = inter.weapons[event.source].refine-1
    event.args['elem_type'] = ElementType.PHYSICAL
    event.scaler = info[refine]
    event.desc = f'{c_trans[event.source]}:王下近侍'
    return [event]


def Prototype_Amber_WP(event: Event, inter) -> List[Event]:
    info = [4, 4.5, 5, 5.5, 6]
    refine: int = inter.weapons[event.source].refine-1
    seq = event.args.get('seq', False)
    time_seq = [0] if not seq else [0, 120, 240]
    result = []
    for bias in time_seq:
        for name, char in inter.characters.items():
            event_i = deepcopy(event)
            event_i.time += bias
            event_i.args['tar'] = name
            event_i.args['flat'] = info[refine]/100*char.HP.value
            event_i.desc = f'{c_trans[event.source]}:试作金珀'
            result.append(event_i)
    return result


def Aquila_Favonia_WP(event: Event, inter) -> List[Event]:
    info = [[1, 2], [1.15, 2.3], [1.3, 2.6], [1.45, 2.9], [1.6, 3.2]]
    refine: int = inter.weapons[event.source].refine-1
    if event.type == EventType.DAMAGE:
        event.args['elem_type'] = ElementType.PHYSICAL
        event.scaler = info[refine][1]
        event.desc = f'{c_trans[event.source]}:风鹰剑'
        return [event]
    elif event.type == EventType.HEALTH:
        event.depend = 'ATK'
        event.scaler = info[refine][0]
        event.args['tar'] = event.source
        event.desc = f'{c_trans[event.source]}:风鹰剑'
        return [event]


def Skyward_Blade_WP(event: Event, inter) -> List[Event]:
    info = [0.2, 0.25, 0.3, 0.35, 0.4]
    refine: int = inter.weapons[event.source].refine-1
    event.args['elem_type'] = ElementType.PHYSICAL
    if event.name.endswith('A'):
        event.args['damage_type'] = DamageType.NORMAL_ATK
    elif event.name.endswith('Z'):
        event.args['damage_type'] = DamageType.CHARGED_ATK
    event.scaler = info[refine]
    event.desc = f'{c_trans[event.source]}:天空之刃'
    return [event]


def Skyward_Pride_WP(event: Event, inter) -> List[Event]:
    info = [0.8, 1, 1.2, 1.4, 1.6]
    refine: int = inter.weapons[event.source].refine-1
    event.args['elem_type'] = ElementType.PHYSICAL
    event.scaler = info[refine]
    event.desc = f'{c_trans[event.source]}:天空之傲'
    return [event]


def Skyward_Spine_WP(event: Event, inter) -> List[Event]:
    info = [0.4, 0.55, 0.7, 0.85, 1]
    refine: int = inter.weapons[event.source].refine-1
    event.args['elem_type'] = ElementType.PHYSICAL
    event.scaler = info[refine]
    event.desc = f'{c_trans[event.source]}:天空之脊'
    return [event]


def Skyward_Atlas_WP(event: Event, inter) -> List[Event]:
    info = [1.6, 2, 2.4, 2.8, 3.2]
    refine: int = inter.weapons[event.source].refine-1
    event.args['elem_type'] = ElementType.PHYSICAL
    event.scaler = info[refine]
    event.snapshot = 'Skyward_Atlas'
    event.desc = f'{c_trans[event.source]}:天空之卷'
    return [event]


def Skyward_Harp_WP(event: Event, inter) -> List[Event]:
    # refine: int = inter.weapons[event.source].refine-1
    event.args['elem_type'] = ElementType.PHYSICAL
    event.scaler = 1.25
    event.desc = f'{c_trans[event.source]}:天空之翼'
    return [event]

# ---artifact---


def OCEANHUED_CLAM_ART(event: Event, inter) -> List[Event]:
    # start, end = event.time-3*60, event.time
    # total_heal = 0
    # for char, l in inter.record_heal.items():
    #     for t, h in l:
    #         if start < t <= end:
    #             total_heal += h
    total_heal = float(event.args.get('stack', '0'))
    event.args['elem'] = ElementType.PHYSICAL
    event.args['flat'] = min(total_heal, 30000)
    event.desc = f'{c_trans[event.source]}:海染泡沫'
    return [event]

# ---reaction---


def React_All(event: Event, inter) -> List[Event]:
    react_scaler = {
        ReactType.SUPERCONDUCT: (0.5, ElementType.CRYO),
        ReactType.SWIRL: (0.6, ElementType.NONE),
        ReactType.ELECTRO_CHARGED: (1.2, ElementType.ELECTRO),
        ReactType.SHATTERED: (1.5, ElementType.PHYSICAL),
        ReactType.OVERLOADED: (2, ElementType.PYRO),
        ReactType.BURNING: (0.25, ElementType.PYRO),
        ReactType.BLOOM: (2, ElementType.DENDRO),
        ReactType.HYPERBLOOM: (3, ElementType.DENDRO),
        ReactType.BURGEON: (3, ElementType.DENDRO)
    }
    constraint = {
        ReactType.SUPERCONDUCT: (ElementType.ELECTRO, ElementType.CRYO),
        ReactType.SWIRL: (ElementType.ANEMO,),
        ReactType.ELECTRO_CHARGED: (ElementType.ELECTRO, ElementType.HYDRO),
        ReactType.SHATTERED: (ElementType.HYDRO, ElementType.CRYO),
        ReactType.OVERLOADED: (ElementType.ELECTRO, ElementType.PYRO),
        ReactType.BURNING: (ElementType.PYRO, ElementType.DENDRO),
        ReactType.BLOOM: (ElementType.HYDRO, ElementType.DENDRO),
        ReactType.HYPERBLOOM: (ElementType.HYDRO, 
                               ElementType.DENDRO, ElementType.ELECTRO),
        ReactType.BURGEON: (ElementType.HYDRO,
                            ElementType.DENDRO, ElementType.PYRO)
    }
    react: ReactType = ReactType[event.name]
    elem = [c.base.element for c in inter.characters.values()]
    if react == ReactType.SWIRL:
        constraint[react] += (event.args['elem'],)
    for e in constraint[react]:
        if elem.count(e.value) == 0:
            return []

    event.args['trans'] = react
    if react != ReactType.SWIRL:
        event.args['elem'] = react_scaler[react][1]
    event.scaler = react_scaler[react][0]
    event.desc = f'{c_trans[event.source]}:{c_trans[react.name]}'
    return [event]

# ---dict---


skill_dict: Dict[str, Callable[[Event, object], List[Event]]] = \
    {
    # ---character---
    # Ayaka
    'Ayaka-A': Ayaka_A, 'Ayaka-E': Ayaka_E, 'Ayaka-Q': Ayaka_Q,
    # Jean
    'Jean-A': Jean_A, 'Jean-E': Jean_E, 'Jean-Q': Jean_Q,
    # Diluc
    'Diluc-A': Diluc_A, 'Diluc-E': Diluc_E, 'Diluc-Q': Diluc_Q,
    # Xiangling
    'Xiangling-A': Xiangling_A, 'Xiangling-E': Xiangling_E, 'Xiangling-Q': Xiangling_Q,
    # Xingqiu
    'Xingqiu-A': Xingqiu_A, 'Xingqiu-E': Xingqiu_E, 'Xingqiu-Q': Xingqiu_Q,
    # Klee
    'Klee-A': Klee_A, 'Klee-E': Klee_E, 'Klee-Q': Klee_Q, 'Klee-CX': Klee_Q,
    # Zhongli
    'Zhongli-A': Zhongli_A, 'Zhongli-E': Zhongli_E, 'Zhongli-Q': Zhongli_Q,
    # Bennett
    'Bennett-A': Bennett_A, 'Bennett-E': Bennett_E, 'Bennett-Q': Bennett_Q,
    # Tartaglia
    'Tartaglia-A': Tartaglia_A, 'Tartaglia-E': Tartaglia_E, 'Tartaglia-Q': Tartaglia_Q,
    # Hutao
    'Hutao-A': Hutao_A, 'Hutao-E': Hutao_E, 'Hutao-Q': Hutao_Q,
    # Kazuha
    'Kazuha-A': Kazuha_A, 'Kazuha-E': Kazuha_E, 'Kazuha-Q': Kazuha_Q,
    # Shogun
    'Shogun-A': Shogun_A, 'Shogun-E': Shogun_E, 'Shogun-Q': Shogun_Q,
    # Kokomi
    'Kokomi-A': Kokomi_A, 'Kokomi-E': Kokomi_E, 'Kokomi-Q': Kokomi_Q, 'Kokomi-CX': Kokomi_A,
    # Sara
    'Sara-A': Sara_A, 'Sara-E': Sara_E, 'Sara-Q': Sara_Q,
    # Yelan
    'Yelan-A': Yelan_A, 'Yelan-E': Yelan_E, 'Yelan-Q': Yelan_Q, 'Yelan-CX': Yelan_CXDMG,
    # Shenhe
    'Shenhe-A': Shenhe_A, 'Shenhe-E': Shenhe_E, 'Shenhe-Q': Shenhe_Q,
    # ---weapon---
    'Kagotsurube_Isshin': Kagotsurube_Isshin_WP,
    'Kings_Squire': Kings_Squire_WP,
    'Prototype_Amber': Prototype_Amber_WP,
    'Aquila_Favonia': Aquila_Favonia_WP,
    'Skyward_Blade': Skyward_Blade_WP,
    'Skyward_Pride': Skyward_Pride_WP,
    'Skyward_Spine': Skyward_Spine_WP,
    'Skyward_Atlas': Skyward_Atlas_WP,
    'Skyward_Harp': Skyward_Harp_WP,
    # ---artifact---
    'OCEANHUED_CLAM': OCEANHUED_CLAM_ART,
    # ---reaction---
    'TRANS': React_All
}
